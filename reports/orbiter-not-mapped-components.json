{
  "overall": {
    "usage": {
      "components": 778,
      "componentProps": 1723,
      "functions": 583,
      "types": 281
    }
  },
  "components": {
    "Field": {
      "usage": {
        "total": 171,
        "projects": {
          "SG Protect": 2,
          "Performance": 35,
          "Management App": 92,
          "Management Shell": 2,
          "Administration Portal": 26,
          "Activation": 11,
          "Login": 1,
          "AI": 2
        }
      },
      "props": {
        "validationState": {
          "usage": 98,
          "values": {
            "fieldState.error ? \"invalid\" : undefined": {
              "usage": {
                "total": 20,
                "projects": {
                  "Management App": 20
                }
              }
            },
            "fieldState.error ? FieldValidationStates.Invalid : FieldValidationStates.Valid": {
              "usage": {
                "total": 4,
                "projects": {
                  "Management App": 4
                }
              }
            },
            "validationState": {
              "usage": {
                "total": 4,
                "projects": {
                  "Management App": 2,
                  "AI": 2
                }
              }
            },
            "hasAttemptedLaunch && launchValidationErrors.recommendedPeerReviewsCount ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 3,
                "projects": {
                  "Performance": 3
                }
              }
            },
            "isInvalid ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 2
                }
              }
            },
            "hasAttemptedLaunch && launchValidationErrors.selfReviewDueDate ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 2
                }
              }
            },
            "hasAttemptedLaunch && launchValidationErrors.peerReviewDueDate ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 2
                }
              }
            },
            "hasAttemptedLaunch && launchValidationErrors.managerReviewDueDate ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 2
                }
              }
            },
            "titleValidationState": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 2
                }
              }
            },
            "handleFieldStateValidation()": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "errors.products ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 2,
                "projects": {
                  "Administration Portal": 2
                }
              }
            },
            "getValidationState(\"firstName\")": {
              "usage": {
                "total": 2,
                "projects": {
                  "Activation": 2
                }
              }
            },
            "getValidationState(\"lastName\")": {
              "usage": {
                "total": 2,
                "projects": {
                  "Activation": 2
                }
              }
            },
            "getValidationState(\"password\")": {
              "usage": {
                "total": 2,
                "projects": {
                  "Activation": 2
                }
              }
            },
            "invalid": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "maximumLengthValidation.errorMessage || hasError ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "(titleError || !!titleLaunchError) ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "errors.owner ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "errors.contributors ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "errors.title ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "errors.startDate ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "errors.endDate ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "fieldState.error && shouldShowErrors ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "nameError || sectionNameLaunchErrors ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "errors.title || titleErrorMessage ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "error ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "errors.description || currentRatingScaleError?.description ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "errors.label || currentRatingScaleError?.label ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "labelError || launchError ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "getFieldValidationState(TeamFormFields.teamName)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "getFieldValidationState(SegmentFormFields.displayName)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "getFieldValidationState(AttributeFields.type)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "getFieldArrayValidationState(AttributeFields.options, index)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "getFieldValidationState(AttributeFields.displayName)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "getFieldValidationState(OrganizationFormFields.name)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "getFieldValidationState(TeamFormFields.teamDescription)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "getFieldValidateState()": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "errors.root ? \"invalid\" : undefined": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "getFieldValidationState(row.riskThreshold.name)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "getFieldValidationState(UpdatePersonalProfileFields.jobTitle)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "getFieldValidationState(UpdatePersonalProfileFields.firstName)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "getFieldValidationState(UpdatePersonalProfileFields.lastName)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "getFieldValidationState(UpdatePersonalProfileFields.preferredName)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "getFieldValidationState(UpdatePersonalProfileFields.usePreferredName)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "getFieldValidationState(UpdatePersonalProfileFields.timeZone)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "getFieldValidationState(UpdatePersonalProfileFields.bio)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "getFieldValidationState(UpdatePreferencesFields.language)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "notificationChannelValidation === FieldValidationStates.Valid ? undefined : FieldValidationStates.Invalid": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "doesSubReasonExceedMaxLength ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "doesOtherReasonExceedMaxLength ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "getFieldValidationState(RulePickerFormFields.ruleRelation)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "(monthFieldState.error || yearFieldState.error) ? \"invalid\" : undefined": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "errors.organizationName ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "errors.email ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "errors.administratorFirstName ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "errors.administratorLastName ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "errors.integrationAdminId ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "errors.accountToken ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "errors.dataset ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "formState.errors.displayName ? \"invalid\" : undefined": {
              "usage": {
                "total": 1,
                "projects": {
                  "Activation": 1
                }
              }
            },
            "getValidationState(\"companySize\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Activation": 1
                }
              }
            }
          }
        },
        "marginBottom": {
          "usage": 32,
          "values": {
            "0": {
              "usage": {
                "total": 16,
                "projects": {
                  "Performance": 6,
                  "Management App": 10
                }
              }
            },
            "inline-xl": {
              "usage": {
                "total": 6,
                "projects": {
                  "Performance": 5,
                  "Management App": 1
                }
              }
            },
            "stack-xs": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "240": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 1,
                  "Activation": 1
                }
              }
            },
            "80": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "stack-md": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "{ base: \"stack-md\", sm: 0 }": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "stack-lg": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "1.25rem": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "required": {
          "usage": 30,
          "values": {
            "true": {
              "usage": {
                "total": 30,
                "projects": {
                  "SG Protect": 2,
                  "Performance": 3,
                  "Management App": 1,
                  "Management Shell": 2,
                  "Administration Portal": 16,
                  "Activation": 6
                }
              }
            }
          }
        },
        "gridColumn": {
          "usage": 25,
          "values": {
            "span 2": {
              "usage": {
                "total": 6,
                "projects": {
                  "Activation": 6
                }
              }
            },
            "1 / 3": {
              "usage": {
                "total": 5,
                "projects": {
                  "Management App": 5
                }
              }
            },
            "{ base: \"1 / 3\", md: \"1 / 2\" }": {
              "usage": {
                "total": 4,
                "projects": {
                  "Management App": 4
                }
              }
            },
            "{ base: \"1 / 3\", md: \"3 / 5\" }": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "{ base: \"span 2\", xs: \"1\" }": {
              "usage": {
                "total": 2,
                "projects": {
                  "Activation": 2
                }
              }
            },
            "{ base: \"span 2\", xs: \"2\" }": {
              "usage": {
                "total": 2,
                "projects": {
                  "Activation": 2
                }
              }
            },
            "1 / 2": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "2 / 3": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "{ base: \"1 / 3\", sm: \"1 / 2\" }": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "{ base: \"1 / 3 \", sm: \"2 / 3\" }": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "width": {
          "usage": 22,
          "values": {
            "{ base: \"auto\", sm: \"50%\" }": {
              "usage": {
                "total": 18,
                "projects": {
                  "Management App": 18
                }
              }
            },
            "{ base: \"auto\", sm:\"50%\" }": {
              "usage": {
                "total": 4,
                "projects": {
                  "Management App": 4
                }
              }
            }
          }
        },
        "fluid": {
          "usage": 15,
          "values": {
            "true": {
              "usage": {
                "total": 15,
                "projects": {
                  "Performance": 5,
                  "Management App": 3,
                  "Administration Portal": 7
                }
              }
            }
          }
        },
        "paddingRight": {
          "usage": 7,
          "values": {
            "{ base: \"0\", sm: \"calc(var(--hop-space-inline-lg)/2)\" }": {
              "usage": {
                "total": 6,
                "projects": {
                  "Management App": 6
                }
              }
            },
            "{ base: \"0\", sm:\"calc(var(--hop-space-inline-lg)/2)\" }": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "marginTop": {
          "usage": 5,
          "values": {
            "stack-md": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "stack-sm": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "stack-xs": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "gap": {
          "usage": 4,
          "values": {
            "stack-xs": {
              "usage": {
                "total": 4,
                "projects": {
                  "Performance": 4
                }
              }
            }
          }
        },
        "alignContent": {
          "usage": 2,
          "values": {
            "center": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            }
          }
        },
        "marginLeft": {
          "usage": 2,
          "values": {
            "{ base: 0, sm: \"auto\" }": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "stack-sm": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "marginRight": {
          "usage": 2,
          "values": {
            "4rem": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "stack-sm": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "marginY": {
          "usage": 2,
          "values": {
            "stack-sm": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            }
          }
        },
        "display": {
          "usage": 2,
          "values": {
            "block": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "{ base: \"flex\", sm: \"none\" }": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "alignSelf": {
          "usage": 1,
          "values": {
            "{ sm: \"center\" }": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "border": {
          "usage": 1,
          "values": {
            "neut": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "gridColumnStart": {
          "usage": 1,
          "values": {
            "1": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "gridColumnSpan": {
          "usage": 1,
          "values": {
            "2": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "maxWidth": {
          "usage": 1,
          "values": {
            "{ sm: \"20rem\" }": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "paddingX": {
          "usage": 1,
          "values": {
            "inset-md": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "disabled": {
          "usage": 1,
          "values": {
            "true": {
              "usage": {
                "total": 1,
                "projects": {
                  "Activation": 1
                }
              }
            }
          }
        },
        "columnGap": {
          "usage": 1,
          "values": {
            "inline-md": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            }
          }
        },
        "gridTemplateColumns": {
          "usage": 1,
          "values": {
            "{ lg: horizontal ? \"var(--wai-label-width) auto\" : undefined }": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            }
          }
        },
        "gridTemplateAreas": {
          "usage": 1,
          "values": {
            "{ lg: horizontal ? \"'label input' '. message'\" : \"'label' 'input' 'message'\" }": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            }
          }
        }
      }
    },
    "Label": {
      "usage": {
        "total": 146,
        "projects": {
          "SG Protect": 8,
          "Performance": 8,
          "Management App": 91,
          "Management Shell": 2,
          "Administration Portal": 24,
          "Activation": 10,
          "Login": 1,
          "AI": 2
        }
      },
      "props": {
        "htmlFor": {
          "usage": 28,
          "values": {
            "`${id}-quantity`": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "`${id}-frequency`": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "password": {
              "usage": {
                "total": 2,
                "projects": {
                  "SG Protect": 1,
                  "Activation": 1
                }
              }
            },
            "name": {
              "usage": {
                "total": 2,
                "projects": {
                  "AI": 2
                }
              }
            },
            "username": {
              "usage": {
                "total": 1,
                "projects": {
                  "SG Protect": 1
                }
              }
            },
            "ModalPropertyFields.dataType": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "inputId": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "checkboxId": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "`${idPrefix}-${product.identifier}`": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "`firstName-${index}`": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "`lastName-${index}`": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "`jobTitle-${index}`": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "`email-${index}`": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "organizationAuthenticationUrlControlId": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "authorizedSlackWorkspacesControlId": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "displayName": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "id": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "jiraLink": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "textinput-integrationAdminId": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "textinput-accounttoken": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "select-dataset": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "firstName": {
              "usage": {
                "total": 1,
                "projects": {
                  "Activation": 1
                }
              }
            },
            "lastName": {
              "usage": {
                "total": 1,
                "projects": {
                  "Activation": 1
                }
              }
            },
            "username-input": {
              "usage": {
                "total": 1,
                "projects": {
                  "Login": 1
                }
              }
            }
          }
        },
        "whiteSpace": {
          "usage": 12,
          "values": {
            "normal": {
              "usage": {
                "total": 6,
                "projects": {
                  "Management App": 6
                }
              }
            },
            "wrap": {
              "usage": {
                "total": 4,
                "projects": {
                  "Management App": 4
                }
              }
            },
            "nowrap": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "pre-wrap": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            }
          }
        },
        "display": {
          "usage": 11,
          "values": {
            "flex": {
              "usage": {
                "total": 4,
                "projects": {
                  "Performance": 2,
                  "Management App": 2
                }
              }
            },
            "{ base: \"block\", sm: showLabels ? \"block\" : \"none\" }": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "grid": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "{ base: \"none\", sm: \"block\" }": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "inline-flex": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "block": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        },
        "fontSize": {
          "usage": 8,
          "values": {
            "body-xs": {
              "usage": {
                "total": 5,
                "projects": {
                  "SG Protect": 5
                }
              }
            },
            "body-sm": {
              "usage": {
                "total": 3,
                "projects": {
                  "SG Protect": 1,
                  "Management App": 2
                }
              }
            }
          }
        },
        "color": {
          "usage": 6,
          "values": {
            "neutral": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "inherit": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "primary": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "gap": {
          "usage": 5,
          "values": {
            "160": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "inline-xs": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 2
                }
              }
            },
            "40": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "fontFamily": {
          "usage": 5,
          "values": {
            "ABC Favorit Variable": {
              "usage": {
                "total": 3,
                "projects": {
                  "Administration Portal": 3
                }
              }
            },
            "overline": {
              "usage": {
                "total": 2,
                "projects": {
                  "SG Protect": 2
                }
              }
            }
          }
        },
        "backgroundColorHover": {
          "usage": 4,
          "values": {
            "neutral-hover": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "neutral-weakest": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "flexShrink": {
          "usage": 3,
          "values": {
            "0": {
              "usage": {
                "total": 3,
                "projects": {
                  "SG Protect": 3
                }
              }
            }
          }
        },
        "textOverflow": {
          "usage": 3,
          "values": {
            "ellipsis": {
              "usage": {
                "total": 3,
                "projects": {
                  "SG Protect": 2,
                  "Management App": 1
                }
              }
            }
          }
        },
        "overflow": {
          "usage": 3,
          "values": {
            "hidden": {
              "usage": {
                "total": 3,
                "projects": {
                  "SG Protect": 2,
                  "Management App": 1
                }
              }
            }
          }
        },
        "backgroundColor": {
          "usage": 3,
          "values": {
            "neutral": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            }
          }
        },
        "cursor": {
          "usage": 3,
          "values": {
            "pointer": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            }
          }
        },
        "padding": {
          "usage": 3,
          "values": {
            "inset-md": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "0": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "hidden": {
          "usage": 2,
          "values": {
            "true": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            }
          }
        },
        "borderBottom": {
          "usage": 2,
          "values": {
            "index === frequencies.length - 1 ? undefined : \"neutral-weak\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "index === addOns.length - 1 ? undefined : \"neutral-weak\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "fontWeight": {
          "usage": 2,
          "values": {
            "body-sm-medium": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "body-md-medium": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "marginY": {
          "usage": 2,
          "values": {
            "stack-sm": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            }
          }
        },
        "alignItems": {
          "usage": 2,
          "values": {
            "center": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 1,
                  "Management App": 1
                }
              }
            }
          }
        },
        "borderHover": {
          "usage": 1,
          "values": {
            "neutral-hover": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "border": {
          "usage": 1,
          "values": {
            "neutral": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "borderRadius": {
          "usage": 1,
          "values": {
            "rounded-md": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "paddingY": {
          "usage": 1,
          "values": {
            "inset-sm": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "paddingX": {
          "usage": 1,
          "values": {
            "inset-md": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "minWidth": {
          "usage": 1,
          "values": {
            "{ base: \"8rem\", sm: \"10.25rem\" }": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "marginRight": {
          "usage": 1,
          "values": {
            "inline-sm": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "marginBottom": {
          "usage": 1,
          "values": {
            "stack-md": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "width": {
          "usage": 1,
          "values": {
            "100%": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "alignSelf": {
          "usage": 1,
          "values": {
            "center": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "paddingBottom": {
          "usage": 1,
          "values": {
            "0": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "gridTemplateColumns": {
          "usage": 1,
          "values": {
            "1fr 5rem": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "required": {
          "usage": 1,
          "values": {
            "true": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "opacity": {
          "usage": 1,
          "values": {
            "0": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "textAlign": {
          "usage": 1,
          "values": {
            "left": {
              "usage": {
                "total": 1,
                "projects": {
                  "Login": 1
                }
              }
            }
          }
        }
      }
    },
    "TextInput": {
      "usage": {
        "total": 103,
        "projects": {
          "SG Protect": 3,
          "Performance": 9,
          "Management App": 50,
          "Management Shell": 1,
          "Administration Portal": 18,
          "Activation": 7,
          "Login": 1,
          "AI": 14
        }
      },
      "props": {
        "placeholder": {
          "usage": 46,
          "values": {
            "placeholder": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 1,
                  "Management App": 1
                }
              }
            },
            "No": {
              "usage": {
                "total": 2,
                "projects": {
                  "Administration Portal": 2
                }
              }
            },
            "00000000-0000-0000-0000-000000000000": {
              "usage": {
                "total": 2,
                "projects": {
                  "Administration Portal": 2
                }
              }
            },
            "t(\"websites.urlPlaceholder\")": {
              "usage": {
                "total": 2,
                "projects": {
                  "AI": 2
                }
              }
            },
            "domain": {
              "usage": {
                "total": 2,
                "projects": {
                  "AI": 2
                }
              }
            },
            "t(\"websites.excludePathsPlaceholder\")": {
              "usage": {
                "total": 2,
                "projects": {
                  "AI": 2
                }
              }
            },
            "t(\"addMeasure\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "https://": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "label": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "labelPlaceholder": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "t(\"choicePlaceholder\", { index: index + 1 })": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "t(\"teamDetails.teamNamePlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"segmentForm.segmentNamePlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"settings.namePlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"createUser.nonSeatFirstNamePlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"createUser.nonSeatLastNamePlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"createUser.nonSeatJobTitlePlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"createUser.nonSeatEmailPlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"createUser.sms.emailAddressPlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"billingForm.emailAddressPlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"billingForm.firstNamePlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"billingForm.lastNamePlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"billingForm.organizationNamePlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"billingForm.street1Placeholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"billingForm.street2Placeholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"billingForm.cityPlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"billingForm.statePlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"billingForm.postalCodePlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"cancelAddOnModal.otherPlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "en-US": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "Account Token": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "t(\"createWorkspacePage.displayName_placeholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Activation": 1
                }
              }
            },
            "tShared(\"personalization.addMemoryPlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            },
            "t(\"sharepoint.connect.domainName.placeholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            },
            "t(\"sharepoint.connect.clientId.placeholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            },
            "t(\"sharepoint.connect.microsoftTenantId.placeholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            },
            "t(\"sharepoint.connect.clientSecret.placeholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            },
            "t(\"confluence.connect.apiToken.placeholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            },
            "t(\"confluence.connect.domainName.placeholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            },
            "t(\"confluence.connect.email.placeholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            }
          }
        },
        "fluid": {
          "usage": 37,
          "values": {
            "true": {
              "usage": {
                "total": 37,
                "projects": {
                  "Performance": 6,
                  "Management App": 29,
                  "Activation": 1,
                  "AI": 1
                }
              }
            }
          }
        },
        "value": {
          "usage": 33,
          "values": {
            "value ?? \"\"": {
              "usage": {
                "total": 6,
                "projects": {
                  "Management App": 6
                }
              }
            },
            "value": {
              "usage": {
                "total": 6,
                "projects": {
                  "Performance": 2,
                  "Management App": 1,
                  "Activation": 1,
                  "Login": 1,
                  "AI": 1
                }
              }
            },
            "tenantAccessRequestUrl": {
              "usage": {
                "total": 2,
                "projects": {
                  "SG Protect": 2
                }
              }
            },
            "inputValue": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "measurement.link": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "editedLinkDisplayText": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "editedLinkUrl": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "internalValue": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "field.value ?? \"\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "subReason": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "otherReason": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "phoneNumber": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "isTestOrganization ? \"Yes\" : \"No\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "defaultLanguage": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "cleanupDeactivatedMembersAfterDelay ? \"Yes\" : \"No\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "deactivatedByMemberId": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "displayName": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "id": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "jiraLink": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "session.emailAddress": {
              "usage": {
                "total": 1,
                "projects": {
                  "Activation": 1
                }
              }
            },
            "firstName": {
              "usage": {
                "total": 1,
                "projects": {
                  "Activation": 1
                }
              }
            },
            "lastName": {
              "usage": {
                "total": 1,
                "projects": {
                  "Activation": 1
                }
              }
            }
          }
        },
        "autoComplete": {
          "usage": 22,
          "values": {
            "off": {
              "usage": {
                "total": 7,
                "projects": {
                  "AI": 7
                }
              }
            },
            "organization": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 1,
                  "Activation": 1
                }
              }
            },
            "email": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 1,
                  "Activation": 1
                }
              }
            },
            "given-name": {
              "usage": {
                "total": 2,
                "projects": {
                  "Activation": 2
                }
              }
            },
            "family-name": {
              "usage": {
                "total": 2,
                "projects": {
                  "Activation": 2
                }
              }
            },
            "cc-given-name": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "cc-family-name": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "address-line1": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "address-line2": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "address-level2": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "address-level1": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "postal-code": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "type": {
          "usage": 21,
          "values": {
            "text": {
              "usage": {
                "total": 18,
                "projects": {
                  "Management App": 18
                }
              }
            },
            "email": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            }
          }
        },
        "readOnly": {
          "usage": 18,
          "values": {
            "true": {
              "usage": {
                "total": 18,
                "projects": {
                  "SG Protect": 2,
                  "Management App": 14,
                  "Administration Portal": 1,
                  "Activation": 1
                }
              }
            }
          }
        },
        "onChange": {
          "usage": 18,
          "values": {
            "handleUserNameChange": {
              "usage": {
                "total": 3,
                "projects": {
                  "SG Protect": 1,
                  "Performance": 1,
                  "Management Shell": 1
                }
              }
            },
            "handleInputChange": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 1,
                  "Management App": 1
                }
              }
            },
            "e => onChange({ ...measurement, link: e.target.value })": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "e => handleOnChange(e)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "handleOnChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "handleInputChange(setUserId)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "handleInputChange(setOrganizationId)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "e => setUserId(e.target.value)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "e => setSelectedOrganizationId(e.target.value)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "e => setEmail(e.target.value)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "() => resetValidation(\"firstName\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Activation": 1
                }
              }
            },
            "() => resetValidation(\"lastName\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Activation": 1
                }
              }
            },
            "handleFirstNameChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Activation": 1
                }
              }
            },
            "handleLastNameChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Activation": 1
                }
              }
            },
            "e => setValue(e.target.value)": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            }
          }
        },
        "disabled": {
          "usage": 17,
          "values": {
            "true": {
              "usage": {
                "total": 7,
                "projects": {
                  "Management App": 2,
                  "Administration Portal": 4,
                  "Activation": 1
                }
              }
            },
            "isDisabled": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "isRestrictedView || areSyncedFieldsLocked": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "!canEditIdentificationInProfile || areSyncedFieldsLocked": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "disabled": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "isRestrictedView": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "!canEditIdentificationInProfile": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "!taxExemptionCode": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "onValueChange": {
          "usage": 14,
          "values": {
            "handlePreferredNameChange": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "e => setEditedLinkDisplayText(e.target.value)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "e => setEditedLinkUrl(e.target.value)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "(_, newValue) => handleLabelValueChange(newValue)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "(_, v) => onLabelChange(v)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "onValueChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "(_, v) => { field.onChange(v); }": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "handleSubReasonChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "handleOtherReasonChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "handlePhoneNumberChanged": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "(event: React.ChangeEvent<HTMLInputElement>, value: string) => {\n    setDisplayName(value);\n    onNameChange(value);\n}": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "(event: React.ChangeEvent<HTMLInputElement>, value: string) => {\n    setJiraLink(value);\n    onJiraLinkChange(value);\n}": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "handleValueChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Login": 1
                }
              }
            }
          }
        },
        "maxLength": {
          "usage": 11,
          "values": {
            "FIRST_NAME_MAX_LENGTH": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "LAST_NAME_MAX_LENGTH": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "PREFERRED_NAME_MAX_LENGTH": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "15": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "MaxCharacterLimit.RATING_SCALE_LABEL_MAX": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "MaxCharacterLimit.MULTIPLE_CHOICE_OPTION_MAX": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "EMAIL_MAX_LENGTH": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "EMPLOYEE_IDENTIFIER_MAX_LENGTH": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "onBlur": {
          "usage": 9,
          "values": {
            "onBlur": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "handleOnBlur(\"firstName\")": {
              "usage": {
                "total": 2,
                "projects": {
                  "Activation": 2
                }
              }
            },
            "handleOnBlur(\"lastName\")": {
              "usage": {
                "total": 2,
                "projects": {
                  "Activation": 2
                }
              }
            },
            "() => onRootUrlBlur(field.value)": {
              "usage": {
                "total": 2,
                "projects": {
                  "AI": 2
                }
              }
            },
            "handleInputBlur": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "size": {
          "usage": 5,
          "values": {
            "sm": {
              "usage": {
                "total": 4,
                "projects": {
                  "SG Protect": 2,
                  "Performance": 2
                }
              }
            },
            "{ base: \"sm\", xs: \"md\" }": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "autoFocus": {
          "usage": 5,
          "values": {
            "autoFocus": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 2
                }
              }
            },
            "shouldAutoFocusInput": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "!isLinkTextInputFocused": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "isLinkTextInputFocused": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "width": {
          "usage": 4,
          "values": {
            "100%": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 1,
                  "Management App": 1
                }
              }
            },
            "width": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "auto": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "icon": {
          "usage": 4,
          "values": {
            "<WebsiteFavicon key={updatedRootUrl} url={updatedRootUrl} width=\"1.5rem\" height=\"1.5rem\" className=\"o-ui-input-icon\" />": {
              "usage": {
                "total": 2,
                "projects": {
                  "AI": 2
                }
              }
            },
            "<LinkIcon size=\"sm\" />": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "<SearchIcon color=\"neutral-weakest\" />": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "onKeyDown": {
          "usage": 4,
          "values": {
            "handleKeyDown": {
              "usage": {
                "total": 3,
                "projects": {
                  "Performance": 1,
                  "Management App": 1,
                  "AI": 1
                }
              }
            },
            "handleOnKeyDown": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "name": {
          "usage": 3,
          "values": {
            "integrationAdminId": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "firstName": {
              "usage": {
                "total": 1,
                "projects": {
                  "Activation": 1
                }
              }
            },
            "lastName": {
              "usage": {
                "total": 1,
                "projects": {
                  "Activation": 1
                }
              }
            }
          }
        },
        "defaultValue": {
          "usage": 2,
          "values": {
            "ratingScalePoint.label": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "label": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "onClick": {
          "usage": 2,
          "values": {
            "e => e.stopPropagation()": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "() => copyToClipboard(deactivatedByMemberId)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        },
        "color": {
          "usage": 2,
          "values": {
            "neutral-disabled": {
              "usage": {
                "total": 2,
                "projects": {
                  "Activation": 2
                }
              }
            }
          }
        },
        "onFocus": {
          "usage": 1,
          "values": {
            "handleInputFocus": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "flexGrow": {
          "usage": 1,
          "values": {
            "1": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "paddingLeft": {
          "usage": 1,
          "values": {
            "0.5rem": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "border": {
          "usage": 1,
          "values": {
            "neutral-weak": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "borderRadius": {
          "usage": 1,
          "values": {
            "circle": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "button": {
          "usage": 1,
          "values": {
            "(<IconButton size=\"sm\"\n    aria-label=\"send\"\n    onClick={onSubmit}\n    backgroundColor={isButtonEnabled ? \"var(--hop-orchid-bloom-600)\" : undefined}\n    borderRadius=\"circle\"\n>\n    <ArrowUpIcon fill={isButtonEnabled ? \"neutral-strong\" : \"neutral-weakest\"} size=\"sm\" />\n</IconButton>)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "display": {
          "usage": 1,
          "values": {
            "flex": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "loading": {
          "usage": 1,
          "values": {
            "isTyping": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "textAlign": {
          "usage": 1,
          "values": {
            "center": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "marginX": {
          "usage": 1,
          "values": {
            "inline-sm": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "maxWidth": {
          "usage": 1,
          "values": {
            "100%": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "pattern": {
          "usage": 1,
          "values": {
            "[0-9]*": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "inputMode": {
          "usage": 1,
          "values": {
            "numeric": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "backgroundColor": {
          "usage": 1,
          "values": {
            "samoyed": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            }
          }
        }
      }
    },
    "ErrorMessage": {
      "usage": {
        "total": 65,
        "projects": {
          "SG Protect": 2,
          "Performance": 2,
          "Management App": 39,
          "Administration Portal": 12,
          "Activation": 8,
          "AI": 2
        }
      },
      "props": {
        "display": {
          "usage": 27,
          "values": {
            "flex": {
              "usage": {
                "total": 25,
                "projects": {
                  "Performance": 2,
                  "Management App": 23
                }
              }
            },
            "!isProcessing && errorMessage !== \"\" ? \"block\" : \"none\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "(!isProcessing && errorMessage !== \"\") ? \"block\" : \"none\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        },
        "alignItems": {
          "usage": 25,
          "values": {
            "center": {
              "usage": {
                "total": 25,
                "projects": {
                  "Performance": 2,
                  "Management App": 23
                }
              }
            }
          }
        },
        "gap": {
          "usage": 25,
          "values": {
            "40": {
              "usage": {
                "total": 23,
                "projects": {
                  "Management App": 23
                }
              }
            },
            "inline-xs": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 2
                }
              }
            }
          }
        },
        "paddingY": {
          "usage": 1,
          "values": {
            "inset-md": {
              "usage": {
                "total": 1,
                "projects": {
                  "SG Protect": 1
                }
              }
            }
          }
        }
      }
    },
    "Form": {
      "usage": {
        "total": 40,
        "projects": {
          "SG Protect": 1,
          "Performance": 4,
          "Management App": 14,
          "Administration Portal": 13,
          "Activation": 2,
          "Login": 1,
          "AI": 5
        }
      },
      "props": {
        "onSubmit": {
          "usage": 37,
          "values": {
            "handleSubmit": {
              "usage": {
                "total": 13,
                "projects": {
                  "SG Protect": 1,
                  "Administration Portal": 9,
                  "Activation": 2,
                  "AI": 1
                }
              }
            },
            "handleSubmit(onSubmit)": {
              "usage": {
                "total": 11,
                "projects": {
                  "Management App": 5,
                  "Administration Portal": 4,
                  "AI": 2
                }
              }
            },
            "handleSubmit(handleSave)": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "onSubmit": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "handleFormSubmit": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "handleSubmit(handleCreateGoalSubmit)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "handleSubmit(handleProgressUpdateSubmit)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "handleSubmit(handleUpdateGoalSubmit)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "e => handleSubmit(data => handleConfirm(data, e))": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "e => validateForm(e)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Login": 1
                }
              }
            },
            "handleOnSubmit": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            }
          }
        },
        "fluid": {
          "usage": 29,
          "values": {
            "true": {
              "usage": {
                "total": 29,
                "projects": {
                  "Performance": 1,
                  "Management App": 12,
                  "Administration Portal": 13,
                  "Activation": 2,
                  "Login": 1
                }
              }
            }
          }
        },
        "width": {
          "usage": 7,
          "values": {
            "100%": {
              "usage": {
                "total": 5,
                "projects": {
                  "Performance": 3,
                  "AI": 2
                }
              }
            },
            "-webkit-fill-available": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            }
          }
        },
        "display": {
          "usage": 5,
          "values": {
            "flex": {
              "usage": {
                "total": 5,
                "projects": {
                  "SG Protect": 1,
                  "Performance": 2,
                  "Management App": 1,
                  "AI": 1
                }
              }
            }
          }
        },
        "flexDirection": {
          "usage": 5,
          "values": {
            "column": {
              "usage": {
                "total": 5,
                "projects": {
                  "SG Protect": 1,
                  "Performance": 2,
                  "Management App": 1,
                  "AI": 1
                }
              }
            }
          }
        },
        "gap": {
          "usage": 3,
          "values": {
            "inline-lg": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 2
                }
              }
            },
            "stack-md": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "textAlign": {
          "usage": 3,
          "values": {
            "left": {
              "usage": {
                "total": 2,
                "projects": {
                  "Activation": 2
                }
              }
            },
            "center": {
              "usage": {
                "total": 1,
                "projects": {
                  "Login": 1
                }
              }
            }
          }
        },
        "backgroundColor": {
          "usage": 2,
          "values": {
            "neutral-weakest": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 2
                }
              }
            }
          }
        },
        "paddingTop": {
          "usage": 2,
          "values": {
            "inset-xl": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 2
                }
              }
            }
          }
        },
        "maxWidth": {
          "usage": 2,
          "values": {
            "25rem": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "18rem": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        },
        "alignItems": {
          "usage": 2,
          "values": {
            "center": {
              "usage": {
                "total": 2,
                "projects": {
                  "SG Protect": 1,
                  "AI": 1
                }
              }
            }
          }
        },
        "height": {
          "usage": 2,
          "values": {
            "100%": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 1,
                  "AI": 1
                }
              }
            }
          }
        },
        "onKeyDown": {
          "usage": 1,
          "values": {
            "e => {\n    if (e.key === \"Enter\") {\n        e.preventDefault();\n    }\n}": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        },
        "position": {
          "usage": 1,
          "values": {
            "relative": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            }
          }
        },
        "borderRadius": {
          "usage": 1,
          "values": {
            "2rem": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            }
          }
        },
        "padding": {
          "usage": 1,
          "values": {
            "isMutating ? \"0\" : \"0.0625rem\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            }
          }
        },
        "onClick": {
          "usage": 1,
          "values": {
            "handleFormClick": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            }
          }
        },
        "overflow": {
          "usage": 1,
          "values": {
            "hidden": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            }
          }
        }
      }
    },
    "Select": {
      "usage": {
        "total": 37,
        "projects": {
          "Performance": 2,
          "Management App": 31,
          "Administration Portal": 3,
          "Activation": 1
        }
      },
      "props": {
        "onSelectionChange": {
          "usage": 33,
          "values": {
            "handleChange": {
              "usage": {
                "total": 4,
                "projects": {
                  "Management App": 4
                }
              }
            },
            "handleSelectionChange": {
              "usage": {
                "total": 4,
                "projects": {
                  "Management App": 3,
                  "Activation": 1
                }
              }
            },
            "(_, key) => field.onChange(key as Frequency)": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "onChange": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "(_, v) => handlePeriodChange(v)": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "handleLanguageChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "handleOnSelectChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "(_, newValue) => onSelectionChange(newValue)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "handleTierChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "handleTeamSizeSelection": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "(_, newValue) => {\n    if (newValue) {\n        field.onChange(Number(newValue));\n    }\n}": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "handleFilterChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "(event, selectedKey) => {\n    if (selectedKey != null) {\n        onChange(selectedKey as Role);\n    }\n}": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "(e, v) => { onChange(v); }": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "(e, v) => onChange(v)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "(e, v) => onChange({ ...attribute, value: v ? parseInt(v) : null })": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "(_, newValue) => {\n    if (newValue) {languageField.onChange(newValue);}\n}": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "(_, newValue) => {\n    if (newValue) {notificationField.onChange(newValue);}\n}": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "(_, v) => handleRuleRelationChange(v, ruleRelationField.onChange)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "(_, newPeriod) => handlePeriodChange(newPeriod)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "onValueChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "handleDefaultLanguageSelectionChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "handleReasonChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "(event, selectedKey) => {\n    if (selectedKey !== \"\") {\n        datasetField.onChange(selectedKey);\n    }\n}": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        },
        "selectedKey": {
          "usage": 30,
          "values": {
            "value": {
              "usage": {
                "total": 7,
                "projects": {
                  "Management App": 7
                }
              }
            },
            "periodValue": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "field.value": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "selectedKey": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "language": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "goalVisibility === GoalVisibilityEnum.AllOrganization ? \"entire-organization\" : \"custom\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "attribute?.value?.toString() ?? \"\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "value ?? null": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "tier.endingQuantity?.toString() ?? highestTierQuantity.toString()": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "teamSize.toString()": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "String(quantity)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "filterValue ?? \"\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "attribute.value?.toString() ?? null": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "languageField.value": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "notificationField.value": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "ruleRelationField.value": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "selectedPropertyId ?? null": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "selectedCondition ?? null": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "reason": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "datasetField.value": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        },
        "width": {
          "usage": 14,
          "values": {
            "100%": {
              "usage": {
                "total": 4,
                "projects": {
                  "Performance": 1,
                  "Management App": 3
                }
              }
            },
            "50%": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "{ base: \"100%\", md: \"13rem\" }": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "200px": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "11.25rem": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "{ base: \"100%\", sm: \"auto\" }": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "{ base: \"100%\", sm: \"min-content\" }": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "disabled": {
          "usage": 14,
          "values": {
            "isDisabled": {
              "usage": {
                "total": 6,
                "projects": {
                  "Management App": 6
                }
              }
            },
            "true": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "attribute?.isReadOnly": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "disabled": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "!tier.endingQuantity": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "attribute.isReadOnly": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "isDisabled || properties.length <= 0": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "maxWidth": {
          "usage": 12,
          "values": {
            "100%": {
              "usage": {
                "total": 10,
                "projects": {
                  "Management App": 10
                }
              }
            },
            "{ base: \"100%\" }": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "{ base: \"100%\", sm: \"\" }": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "placeholder": {
          "usage": 11,
          "values": {
            "Language": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "t(\"memberMissingAttributesModal.selectPlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"reconciliation.allTeams\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"cancelPlanModal.selectPlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"rulePicker.property_click_placeholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"rulePicker.condition_placeholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"rulePicker.property_placeholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "placeholder": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "getValuePlaceholder()": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "Reason": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "Select a dataset": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        },
        "onBlur": {
          "usage": 6,
          "values": {
            "onBlur": {
              "usage": {
                "total": 4,
                "projects": {
                  "Management App": 4
                }
              }
            },
            "languageField.onBlur": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "notificationField.onBlur": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "name": {
          "usage": 5,
          "values": {
            "field.name": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "name": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "languageField.name": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "notificationField.name": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "fluid": {
          "usage": 3,
          "values": {
            "true": {
              "usage": {
                "total": 3,
                "projects": {
                  "Performance": 1,
                  "Management App": 2
                }
              }
            }
          }
        },
        "readOnly": {
          "usage": 3,
          "values": {
            "readOnly": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            }
          }
        },
        "onOpenChange": {
          "usage": 3,
          "values": {
            "handleOnOpenChange": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            }
          }
        },
        "validationState": {
          "usage": 3,
          "values": {
            "validationState": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            }
          }
        },
        "direction": {
          "usage": 2,
          "values": {
            "bottom": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            }
          }
        },
        "icon": {
          "usage": 1,
          "values": {
            "<Spinner aria-hidden aria-label=\"\" />": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "allowResponsiveMenuWidth": {
          "usage": 1,
          "values": {
            "true": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "flexGrow": {
          "usage": 1,
          "values": {
            "1": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "defaultSelectedKey": {
          "usage": 1,
          "values": {
            "selectedLanguage": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        },
        "defaultValue": {
          "usage": 1,
          "values": {
            "selectedCompanySize": {
              "usage": {
                "total": 1,
                "projects": {
                  "Activation": 1
                }
              }
            }
          }
        }
      }
    },
    "Switch": {
      "usage": {
        "total": 30,
        "projects": {
          "SG Protect": 1,
          "Management App": 20,
          "Administration Portal": 9
        }
      },
      "props": {
        "checked": {
          "usage": 29,
          "values": {
            "value": {
              "usage": {
                "total": 5,
                "projects": {
                  "Management App": 5
                }
              }
            },
            "areTeamMappingsEnabledField.value": {
              "usage": {
                "total": 4,
                "projects": {
                  "Management App": 4
                }
              }
            },
            "enabled": {
              "usage": {
                "total": 1,
                "projects": {
                  "SG Protect": 1
                }
              }
            },
            "assignedProducts.includes(x.identifier)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "autoAssignManagers": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "createSubTeamsByReportingManager": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "areAttributeConfigurationsEnabledField.value": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "autoAssignManagersField.value": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "createSubTeamsByReportingManagerField.value": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "value.includes(product.identifier)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "usePreferredNameField.value": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "checked": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "selectedFrequency === Frequency.Annual": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "data.isForceSsoEnabled": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "canTeamManagerInviteMembers": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "canTeamManagerEditTeams": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "canTeamManagerInviteManagers": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "canMemberEditTheirProfile": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "visibilityIsIncluding ? restrictedEntities.includes(organization.id) : !restrictedEntities.includes(organization.id)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "inviteMembersProvisioningConfiguration.isInviteMembersOnCreateEnabled": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "isInviteMembersOnCreateEnabled": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "isEnabled": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        },
        "disabled": {
          "usage": 23,
          "values": {
            "true": {
              "usage": {
                "total": 8,
                "projects": {
                  "Management App": 2,
                  "Administration Portal": 6
                }
              }
            },
            "disabled": {
              "usage": {
                "total": 7,
                "projects": {
                  "Management App": 7
                }
              }
            },
            "disabled || hasNoTeams": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "!initialAssignedProduct.includes(x.identifier) && x.seatsAvailable < 1": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "isDisabled": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "isRestrictedView || !preferredNameField.value": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "!canEditIdentificationInProfile || !preferredNameField.value": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "!data.isForceSsoEnabled": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "!isEnabled": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        },
        "onChange": {
          "usage": 13,
          "values": {
            "handleOnChange": {
              "usage": {
                "total": 5,
                "projects": {
                  "Management App": 5
                }
              }
            },
            "handleChange": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "() => {\n    if (assignedProducts.includes(x.identifier)) {\n        onChange(assignedProducts.filter(ap => ap !== x.identifier));\n    } else {\n        onChange([...assignedProducts, x.identifier]);\n    }\n}": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "handleAssignManagerChanged": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "handleCreateSubTeamsByReportingManagerChanged": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "() => handleChange(product.identifier)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "onChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "() => handleChange(organization)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        },
        "size": {
          "usage": 11,
          "values": {
            "md": {
              "usage": {
                "total": 6,
                "projects": {
                  "Management App": 6
                }
              }
            },
            "sm": {
              "usage": {
                "total": 5,
                "projects": {
                  "Management App": 5
                }
              }
            }
          }
        },
        "onValueChange": {
          "usage": 5,
          "values": {
            "(_, newValue) => onChange(newValue)": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "handleChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "SG Protect": 1
                }
              }
            },
            "(_, newValue) => usePreferredNameField.onChange(newValue)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "onChangeFrequency": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "position": {
          "usage": 3,
          "values": {
            "relative": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            }
          }
        },
        "title": {
          "usage": 3,
          "values": {
            "t(disabled || hasNoTeams ? \"disabled\" : \"enable\")": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "t(disabled ? \"disabled\" : \"enable\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "name": {
          "usage": 3,
          "values": {
            "name": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "usePreferredNameField.name": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "marginRight": {
          "usage": 2,
          "values": {
            "inline-sm": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            }
          }
        },
        "alignItems": {
          "usage": 1,
          "values": {
            "flex-start": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "marginTop": {
          "usage": 1,
          "values": {
            "1.5rem": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "width": {
          "usage": 1,
          "values": {
            "auto": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "padding": {
          "usage": 1,
          "values": {
            "inset-sm": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        }
      }
    },
    "Radio": {
      "usage": {
        "total": 29,
        "projects": {
          "Performance": 7,
          "Management App": 14,
          "Administration Portal": 2,
          "AI": 6
        }
      },
      "props": {
        "value": {
          "usage": 24,
          "values": {
            "value": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "FilterByGroupMembership.EveryoneInMyIntegrationAccount": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "FilterByGroupMembership.EveryoneInTheFollowingIntegrationGroups": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "true": {
              "usage": {
                "total": 3,
                "projects": {
                  "AI": 3
                }
              }
            },
            "false": {
              "usage": {
                "total": 3,
                "projects": {
                  "AI": 3
                }
              }
            },
            "reason": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "PeerReviewVisibility.NotShared": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "PeerReviewVisibility.SharedAnonymously": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "PeerReviewVisibility.SharedWithIdentity": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "Role.Member": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "Role.Manager": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "networks": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "cohorts": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        },
        "onChange": {
          "usage": 12,
          "values": {
            "() => handleOnChange(FilterByGroupMembership.EveryoneInMyIntegrationAccount)": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "() => handleOnChange(FilterByGroupMembership.EveryoneInTheFollowingIntegrationGroups)": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "() => handleOnRadioButtonChange(false)": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 2
                }
              }
            },
            "() => handleOnRadioButtonChange(true)": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 2
                }
              }
            },
            "handleCheck": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            }
          }
        },
        "checked": {
          "usage": 11,
          "values": {
            "filterByGroupMembershipValue === FilterByGroupMembership.EveryoneInMyIntegrationAccount": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "filterByGroupMembershipValue === FilterByGroupMembership.EveryoneInTheFollowingIntegrationGroups": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "!innerUseAllOrganization": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 2
                }
              }
            },
            "innerUseAllOrganization": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 2
                }
              }
            },
            "frequency === field.value": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "size": {
          "usage": 10,
          "values": {
            "sm": {
              "usage": {
                "total": 10,
                "projects": {
                  "Performance": 4,
                  "Management App": 6
                }
              }
            }
          }
        },
        "alignItems": {
          "usage": 2,
          "values": {
            "start": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            }
          }
        },
        "marginBottom": {
          "usage": 1,
          "values": {
            "{ base: undefined, sm: \"stack-sm\" }": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "onValueChange": {
          "usage": 1,
          "values": {
            "() => field.onChange(frequency)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "disabled": {
          "usage": 1,
          "values": {
            "true": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        }
      }
    },
    "ThemeProvider": {
      "usage": {
        "total": 27,
        "projects": {
          "SG Protect": 2,
          "Performance": 7,
          "Management App": 4,
          "Management Shell": 4,
          "Administration Portal": 2,
          "Activation": 1,
          "Login": 2,
          "AI": 5
        }
      },
      "props": {
        "colorScheme": {
          "usage": 27,
          "values": {
            "light": {
              "usage": {
                "total": 10,
                "projects": {
                  "Performance": 4,
                  "Management Shell": 1,
                  "Administration Portal": 1,
                  "Login": 1,
                  "AI": 3
                }
              }
            },
            "colorScheme": {
              "usage": {
                "total": 7,
                "projects": {
                  "SG Protect": 1,
                  "Performance": 1,
                  "Management App": 1,
                  "Management Shell": 1,
                  "Activation": 1,
                  "AI": 2
                }
              }
            },
            "colorScheme ?? \"light\"": {
              "usage": {
                "total": 5,
                "projects": {
                  "Performance": 2,
                  "Management App": 2,
                  "Management Shell": 1
                }
              }
            },
            "context.globals.theme": {
              "usage": {
                "total": 5,
                "projects": {
                  "SG Protect": 1,
                  "Management App": 1,
                  "Management Shell": 1,
                  "Administration Portal": 1,
                  "Login": 1
                }
              }
            }
          }
        },
        "height": {
          "usage": 9,
          "values": {
            "100%": {
              "usage": {
                "total": 7,
                "projects": {
                  "Performance": 2,
                  "Management App": 2,
                  "Management Shell": 1,
                  "AI": 2
                }
              }
            },
            "100dvh": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 1,
                  "Management Shell": 1
                }
              }
            }
          }
        },
        "width": {
          "usage": 3,
          "values": {
            "100%": {
              "usage": {
                "total": 3,
                "projects": {
                  "Performance": 2,
                  "Management App": 1
                }
              }
            }
          }
        },
        "display": {
          "usage": 2,
          "values": {
            "flex": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 1,
                  "Management Shell": 1
                }
              }
            }
          }
        },
        "flexDirection": {
          "usage": 2,
          "values": {
            "column": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 1,
                  "Management Shell": 1
                }
              }
            }
          }
        },
        "backgroundColor": {
          "usage": 1,
          "values": {
            "neutral": {
              "usage": {
                "total": 1,
                "projects": {
                  "SG Protect": 1
                }
              }
            }
          }
        }
      }
    },
    "SearchInput": {
      "usage": {
        "total": 25,
        "projects": {
          "SG Protect": 14,
          "Management App": 11
        }
      },
      "props": {
        "placeholder": {
          "usage": 24,
          "values": {
            "Search": {
              "usage": {
                "total": 4,
                "projects": {
                  "SG Protect": 4
                }
              }
            },
            "`${t(\"searchByName\")}...`": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "Search by name...": {
              "usage": {
                "total": 2,
                "projects": {
                  "SG Protect": 2
                }
              }
            },
            "Search by workspace name or owner": {
              "usage": {
                "total": 2,
                "projects": {
                  "SG Protect": 2
                }
              }
            },
            "`Search by ${useAllWorkspaceTypesInWorkspaceAccess ? \"workspace\" : \"group\"} name or owner`": {
              "usage": {
                "total": 2,
                "projects": {
                  "SG Protect": 2
                }
              }
            },
            "Search by name": {
              "usage": {
                "total": 1,
                "projects": {
                  "SG Protect": 1
                }
              }
            },
            "Search for a workspace or owner": {
              "usage": {
                "total": 1,
                "projects": {
                  "SG Protect": 1
                }
              }
            },
            "Search by group name or owner": {
              "usage": {
                "total": 1,
                "projects": {
                  "SG Protect": 1
                }
              }
            },
            "Search by name or owner": {
              "usage": {
                "total": 1,
                "projects": {
                  "SG Protect": 1
                }
              }
            },
            "t(\"previewTeamCompositionModal.searchPlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"memberMissingAttributesModal.searchPlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"reconciliation.searchPlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"preview.searchPlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"integrationsTable.searchFilterPlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "`${t(\"teamMappingsSection.searchByName\")}...`": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "`${t(\"searchByName\")}`": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "value": {
          "usage": 17,
          "values": {
            "searchTerm": {
              "usage": {
                "total": 11,
                "projects": {
                  "SG Protect": 6,
                  "Management App": 5
                }
              }
            },
            "teamSearchTerm": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "searchInput": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "searchTermValue": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "value": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "onValueChange": {
          "usage": 17,
          "values": {
            "handleTextInput": {
              "usage": {
                "total": 6,
                "projects": {
                  "Management App": 6
                }
              }
            },
            "handleSearchChange": {
              "usage": {
                "total": 5,
                "projects": {
                  "SG Protect": 5
                }
              }
            },
            "handleSearchTermChange": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "handleSearch": {
              "usage": {
                "total": 1,
                "projects": {
                  "SG Protect": 1
                }
              }
            },
            "onSearchInputChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "handleOnValueChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "size": {
          "usage": 12,
          "values": {
            "sm": {
              "usage": {
                "total": 12,
                "projects": {
                  "SG Protect": 10,
                  "Management App": 2
                }
              }
            }
          }
        },
        "icon": {
          "usage": 11,
          "values": {
            "<SearchIcon />": {
              "usage": {
                "total": 7,
                "projects": {
                  "Management App": 7
                }
              }
            },
            "<SearchIcon size=\"sm\" color=\"neutral-weak\" />": {
              "usage": {
                "total": 4,
                "projects": {
                  "Management App": 4
                }
              }
            }
          }
        },
        "fluid": {
          "usage": 9,
          "values": {
            "{ base: true, md: false }": {
              "usage": {
                "total": 8,
                "projects": {
                  "Management App": 8
                }
              }
            },
            "true": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "disabled": {
          "usage": 4,
          "values": {
            "true": {
              "usage": {
                "total": 4,
                "projects": {
                  "SG Protect": 4
                }
              }
            }
          }
        },
        "fontSize": {
          "usage": 4,
          "values": {
            "body-sm": {
              "usage": {
                "total": 4,
                "projects": {
                  "Management App": 4
                }
              }
            }
          }
        },
        "width": {
          "usage": 4,
          "values": {
            "100%": {
              "usage": {
                "total": 1,
                "projects": {
                  "SG Protect": 1
                }
              }
            },
            "14rem": {
              "usage": {
                "total": 1,
                "projects": {
                  "SG Protect": 1
                }
              }
            },
            "50%": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "20rem": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "maxLength": {
          "usage": 4,
          "values": {
            "256": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "maxLength": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        }
      }
    },
    "Checkbox": {
      "usage": {
        "total": 21,
        "projects": {
          "SG Protect": 1,
          "Performance": 3,
          "Management App": 11,
          "Management Shell": 1,
          "Administration Portal": 5
        }
      },
      "props": {
        "checked": {
          "usage": 17,
          "values": {
            "isSelected": {
              "usage": {
                "total": 3,
                "projects": {
                  "SG Protect": 1,
                  "Management App": 1,
                  "Management Shell": 1
                }
              }
            },
            "isCompleted": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "isChecked": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "value": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "hasConsented": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "defaultProductAssignation.has(product.identifier)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "pingboardLiteAccepted": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "field.value.includes(addOn)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "productAssignation.isEnabled": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "value === CheckboxState.Checked": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "userAccess.includes(activeProduct.identifier)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "x.isEnabled": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "isSandboxOrganization": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "isDemoOrganization": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "member.assignExec || false": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        },
        "disabled": {
          "usage": 8,
          "values": {
            "isDisabled": {
              "usage": {
                "total": 4,
                "projects": {
                  "SG Protect": 1,
                  "Management App": 2,
                  "Management Shell": 1
                }
              }
            },
            "disabled": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "!match": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "isToggleDisabled": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "size": {
          "usage": 7,
          "values": {
            "sm": {
              "usage": {
                "total": 7,
                "projects": {
                  "SG Protect": 1,
                  "Management App": 5,
                  "Management Shell": 1
                }
              }
            }
          }
        },
        "onValueChange": {
          "usage": 6,
          "values": {
            "(_, isChecked) => handleDefaultProductAssignationChange(product.identifier, isChecked)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "handlePingboardLiteAcceptedFieldChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "(_, isChecked) => handleValueChange(addOn, isChecked)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "(_, isChecked) => handleDefaultProductAssignationChange(productAssignation.identifier, isChecked)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "(_, isChecked) => handleOnChange(x.employmentType, isChecked)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "(_, isChecked) => onToggleChange!(isChecked)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "onChange": {
          "usage": 6,
          "values": {
            "onYesNoChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "handleChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "() => setHasConsented(x => !x)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "() => onChange(value !== CheckboxState.Checked ? CheckboxState.Checked : CheckboxState.Unchecked)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "handleIsSandboxChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "handleIsDemoOrganizationChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        },
        "value": {
          "usage": 6,
          "values": {
            "p.identifier": {
              "usage": {
                "total": 2,
                "projects": {
                  "Administration Portal": 2
                }
              }
            },
            "product.identifier": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "productAssignation.identifier": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "activeProduct.identifier": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "indeterminate": {
          "usage": 5,
          "values": {
            "isIndeterminate": {
              "usage": {
                "total": 3,
                "projects": {
                  "SG Protect": 1,
                  "Management App": 1,
                  "Management Shell": 1
                }
              }
            },
            "indeterminate": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "value === CheckboxState.Indeterminate": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "alignItems": {
          "usage": 1,
          "values": {
            "flex-start": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "padding": {
          "usage": 1,
          "values": {
            "inset-lg": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "border": {
          "usage": 1,
          "values": {
            "neutral-weak": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "backgroundColor": {
          "usage": 1,
          "values": {
            "neutral": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "backgroundColorHover": {
          "usage": 1,
          "values": {
            "neutral-hover": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "width": {
          "usage": 1,
          "values": {
            "100%": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "whiteSpace": {
          "usage": 1,
          "values": {
            "unset": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "position": {
          "usage": 1,
          "values": {
            "absolute": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "top": {
          "usage": 1,
          "values": {
            "1.5rem": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "right": {
          "usage": 1,
          "values": {
            "1.5rem": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "gap": {
          "usage": 1,
          "values": {
            "inline-sm": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "color": {
          "usage": 1,
          "values": {
            "inherit": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "onBlur": {
          "usage": 1,
          "values": {
            "field.onBlur": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "marginRight": {
          "usage": 1,
          "values": {
            "inline-sm": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "verticalAlign": {
          "usage": 1,
          "values": {
            "middle": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "display": {
          "usage": 1,
          "values": {
            "none": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        },
        "onClick": {
          "usage": 1,
          "values": {
            "() => handleExecChange(member)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        }
      }
    },
    "TextArea": {
      "usage": {
        "total": 16,
        "projects": {
          "SG Protect": 2,
          "Performance": 7,
          "Management App": 4,
          "AI": 3
        }
      },
      "props": {
        "value": {
          "usage": 11,
          "values": {
            "text": {
              "usage": {
                "total": 2,
                "projects": {
                  "SG Protect": 2
                }
              }
            },
            "feedback": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "value": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 1,
                  "AI": 1
                }
              }
            },
            "title": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "customContext": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "measurement.title": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "bioField.value": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "explanation": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            }
          }
        },
        "placeholder": {
          "usage": 11,
          "values": {
            "Can you tell us why?": {
              "usage": {
                "total": 2,
                "projects": {
                  "SG Protect": 2
                }
              }
            },
            "getTitlePlaceHolder()": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "t(\"goalNamePlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "placeholder": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "t(\"customContextPlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "t(\"titlePlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "descriptionPlaceholder": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "tShared(\"rating.placeholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            },
            "tShared(\"personalization.personalityPlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            },
            "tShared(\"personalization.editMemoryPlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            }
          }
        },
        "rows": {
          "usage": 10,
          "values": {
            "1": {
              "usage": {
                "total": 4,
                "projects": {
                  "Performance": 3,
                  "AI": 1
                }
              }
            },
            "3": {
              "usage": {
                "total": 2,
                "projects": {
                  "SG Protect": 2
                }
              }
            },
            "4": {
              "usage": {
                "total": 2,
                "projects": {
                  "AI": 2
                }
              }
            },
            "6": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "7": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "resize": {
          "usage": 10,
          "values": {
            "none": {
              "usage": {
                "total": 10,
                "projects": {
                  "SG Protect": 2,
                  "Performance": 3,
                  "Management App": 2,
                  "AI": 3
                }
              }
            }
          }
        },
        "fluid": {
          "usage": 9,
          "values": {
            "true": {
              "usage": {
                "total": 9,
                "projects": {
                  "SG Protect": 2,
                  "Performance": 5,
                  "AI": 2
                }
              }
            }
          }
        },
        "onValueChange": {
          "usage": 7,
          "values": {
            "e => handleTitleValueChange(e.target.value)": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 2
                }
              }
            },
            "(_, newValue) => handleOnChange(newValue)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "e => onCustomContextChange(e.target.value)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "(_, newValue) => handleDescriptionValueChange(newValue)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "(_, newValue) => bioField.onChange(newValue)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "(_, value) => setExplanation(value)": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            }
          }
        },
        "autoFocus": {
          "usage": 7,
          "values": {
            "autoFocus": {
              "usage": {
                "total": 3,
                "projects": {
                  "Performance": 3
                }
              }
            },
            "true": {
              "usage": {
                "total": 3,
                "projects": {
                  "SG Protect": 2,
                  "AI": 1
                }
              }
            },
            "shouldAutoFocusTitle": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "onChange": {
          "usage": 7,
          "values": {
            "e => setText(e.target.value)": {
              "usage": {
                "total": 2,
                "projects": {
                  "SG Protect": 2
                }
              }
            },
            "handleFeedbackChange": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "e => onTitleChange(e.target.value)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "e => onChange({ ...measurement, title: e.target.value })": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "handleChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            }
          }
        },
        "maxLength": {
          "usage": 5,
          "values": {
            "MaxCharacterLimit.QUESTION_TITLE_MAX": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 2
                }
              }
            },
            "maxLength": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "MaxCharacterLimit.RATING_SCALE_DESCRIPTION_MAX": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "BIO_MAX_LENGTH": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "width": {
          "usage": 4,
          "values": {
            "100%": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 2
                }
              }
            },
            "auto": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            }
          }
        },
        "defaultValue": {
          "usage": 3,
          "values": {
            "title": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "translatedTitle": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "ratingScalePoint.description": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "backgroundColor": {
          "usage": 3,
          "values": {
            "samoyed": {
              "usage": {
                "total": 2,
                "projects": {
                  "AI": 2
                }
              }
            },
            "transparent": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "onInput": {
          "usage": 2,
          "values": {
            "handleTitleTextAreaInput": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "handleTextAreaInput": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "disabled": {
          "usage": 2,
          "values": {
            "disabled": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "disableLogoAndDescriptionModification": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "onKeyDown": {
          "usage": 2,
          "values": {
            "preventEnter": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "handleKeyDown": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            }
          }
        },
        "wrapperProps": {
          "usage": 1,
          "values": {
            "{ className: classNames(styles.heading, styles[getValidationState()]) }": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "validationState": {
          "usage": 1,
          "values": {
            "validationState": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "border": {
          "usage": 1,
          "values": {
            "0": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "name": {
          "usage": 1,
          "values": {
            "bioField.name": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        }
      }
    },
    "RadioGroup": {
      "usage": {
        "total": 14,
        "projects": {
          "Performance": 1,
          "Management App": 9,
          "Administration Portal": 1,
          "AI": 3
        }
      },
      "props": {
        "value": {
          "usage": 9,
          "values": {
            "filterByGroupMembershipValue": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "value.toString()": {
              "usage": {
                "total": 3,
                "projects": {
                  "AI": 3
                }
              }
            },
            "peerReviewVisibility": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "value": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "accessType": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "onChange": {
          "usage": 9,
          "values": {
            "handleChange": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "(_, newValue) => onChange(newValue === \"true\")": {
              "usage": {
                "total": 3,
                "projects": {
                  "AI": 3
                }
              }
            },
            "(_, newValue) => handlePeerReviewVisibilityChange(newValue as PeerReviewVisibility)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "handleChangesAccessType": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "(_, selectedKey) => {\n    if (selectedKey != null) {\n        onChange(selectedKey as Role);\n    }\n}": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "gap": {
          "usage": 5,
          "values": {
            "stack-sm": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "0": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "stack-md": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "size": {
          "usage": 4,
          "values": {
            "sm": {
              "usage": {
                "total": 4,
                "projects": {
                  "Management App": 1,
                  "AI": 3
                }
              }
            }
          }
        },
        "disabled": {
          "usage": 3,
          "values": {
            "disabled": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            }
          }
        },
        "orientation": {
          "usage": 2,
          "values": {
            "vertical": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            }
          }
        },
        "defaultValue": {
          "usage": 2,
          "values": {
            "value": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "networks": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        }
      }
    },
    "Autocomplete": {
      "usage": {
        "total": 12,
        "projects": {
          "Performance": 3,
          "Management App": 7,
          "Administration Portal": 1,
          "AI": 1
        }
      },
      "props": {
        "onSearch": {
          "usage": 12,
          "values": {
            "searchExcludingSelected": {
              "usage": {
                "total": 3,
                "projects": {
                  "Performance": 1,
                  "Management App": 1,
                  "AI": 1
                }
              }
            },
            "(event, query) => fetcher.search(query)": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "handleSearch": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "handleOnSearch": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "onSearch": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "(_, searchTerm: string) => search(searchTerm)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "search": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "fetcher.search": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        },
        "onSelectionChange": {
          "usage": 12,
          "values": {
            "handleSelectionChange": {
              "usage": {
                "total": 5,
                "projects": {
                  "Performance": 1,
                  "Management App": 4
                }
              }
            },
            "handleSelect": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 2,
                  "AI": 1
                }
              }
            },
            "handleOnSelectionChange": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 2
                }
              }
            },
            "(event, selection) => {\n    if (!selection) {\n        clearErrors(\"root\");\n    }\n    onChange(selection?.key);\n}": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "handleMemberSelectionChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        },
        "value": {
          "usage": 11,
          "values": {
            "": {
              "usage": {
                "total": 4,
                "projects": {
                  "Performance": 1,
                  "Management App": 1,
                  "Administration Portal": 1,
                  "AI": 1
                }
              }
            },
            "selectedMember ? toDisplayNameWithStatus(selectedMember) : \"\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "selectedGoal ? selectedGoal.title : \"\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "displayName": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "value?.displayName ?? null": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "null": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "getName(value, languageAlpha2Code) ?? \"\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "value ?? null": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "loading": {
          "usage": 9,
          "values": {
            "isLoading": {
              "usage": {
                "total": 5,
                "projects": {
                  "Performance": 1,
                  "Management App": 3,
                  "AI": 1
                }
              }
            },
            "fetcher.isLoading": {
              "usage": {
                "total": 4,
                "projects": {
                  "Management App": 3,
                  "Administration Portal": 1
                }
              }
            }
          }
        },
        "placeholder": {
          "usage": 8,
          "values": {
            "placeholder": {
              "usage": {
                "total": 3,
                "projects": {
                  "Performance": 1,
                  "Management App": 1,
                  "AI": 1
                }
              }
            },
            "t(\"parentGoalSearchPlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "t(\"createUser.addTeamPlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "label": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "t(\"rulePicker.guidInput_searchHere\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "Search for a member": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        },
        "clearOnSelect": {
          "usage": 6,
          "values": {
            "true": {
              "usage": {
                "total": 5,
                "projects": {
                  "Performance": 1,
                  "Management App": 2,
                  "Administration Portal": 1,
                  "AI": 1
                }
              }
            },
            "false": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "fluid": {
          "usage": 5,
          "values": {
            "true": {
              "usage": {
                "total": 5,
                "projects": {
                  "Performance": 1,
                  "Management App": 3,
                  "AI": 1
                }
              }
            }
          }
        },
        "disabled": {
          "usage": 5,
          "values": {
            "isDisabled": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "disabled": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 1,
                  "AI": 1
                }
              }
            },
            "attribute?.isReadOnly": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "width": {
          "usage": 4,
          "values": {
            "100%": {
              "usage": {
                "total": 3,
                "projects": {
                  "Performance": 1,
                  "Management App": 2
                }
              }
            },
            "fluid ? \"100%\" : { base: \"22rem\", lg: shrinkOnLargeScreen ? \"18rem\" : \"22rem\", xl: \"22rem\" }": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "fontSize": {
          "usage": 4,
          "values": {
            "body-md": {
              "usage": {
                "total": 4,
                "projects": {
                  "Performance": 1,
                  "Management App": 2,
                  "AI": 1
                }
              }
            }
          }
        },
        "padding": {
          "usage": 4,
          "values": {
            "0": {
              "usage": {
                "total": 4,
                "projects": {
                  "Performance": 1,
                  "Management App": 2,
                  "AI": 1
                }
              }
            }
          }
        },
        "noResultsMessage": {
          "usage": 4,
          "values": {
            "noResultsMessage": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 1,
                  "AI": 1
                }
              }
            },
            "t(\"noResultsMessage\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "t(\"rulePicker.guidInput_noSearchResult\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "minCharacters": {
          "usage": 4,
          "values": {
            "0": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "3": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "SearchInput.MIN_SEARCH_TERM_LENGTH": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "minCharacters": {
              "usage": {
                "total": 1,
                "projects": {
                  "AI": 1
                }
              }
            }
          }
        },
        "icon": {
          "usage": 3,
          "values": {
            "<SearchIcon size=\"sm\" color=\"neutral-weak\" />": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "selectedGoal ? <BullseyeIcon size=\"sm\" color=\"neutral-weak\" /> : <SearchIcon size=\"sm\" color=\"neutral-weak\" />": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "<PlusIcon />": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "height": {
          "usage": 3,
          "values": {
            "initial": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            }
          }
        },
        "autoFocus": {
          "usage": 2,
          "values": {
            "true": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "autoFocus": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "allowFlip": {
          "usage": 2,
          "values": {
            "allowFlip": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "false": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "paddingLeft": {
          "usage": 2,
          "values": {
            "inset-xs": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 2
                }
              }
            }
          }
        },
        "open": {
          "usage": 2,
          "values": {
            "open": {
              "usage": {
                "total": 2,
                "projects": {
                  "Performance": 1,
                  "Management App": 1
                }
              }
            }
          }
        },
        "validationState": {
          "usage": 2,
          "values": {
            "(errorMessage && !value) ? \"invalid\" : \"valid\"": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "validationState": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "onBlur": {
          "usage": 2,
          "values": {
            "onBlur": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            }
          }
        },
        "direction": {
          "usage": 1,
          "values": {
            "bottom": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "size": {
          "usage": 1,
          "values": {
            "size": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "maxWidth": {
          "usage": 1,
          "values": {
            "100%": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "zIndex": {
          "usage": 1,
          "values": {
            "zIndex ?? (isDesktop ? ZIndex.DROPDOWN_OVERLAY : ZIndex.MODAL)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "overlayProps": {
          "usage": 1,
          "values": {
            "{\n    ref: overlayRef,\n    className: styles.overlay\n}": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "onKeyDownCapture": {
          "usage": 1,
          "values": {
            "handleKeyPress": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "onKeyUpCapture": {
          "usage": 1,
          "values": {
            "handleKeyPress": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "marginTop": {
          "usage": 1,
          "values": {
            "inline-xs": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "onOpenChange": {
          "usage": 1,
          "values": {
            "(_, isOpen) => setOpen(isOpen)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "onChange": {
          "usage": 1,
          "values": {
            "undefined": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "readOnly": {
          "usage": 1,
          "values": {
            "readOnly": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        }
      }
    },
    "CheckboxGroup": {
      "usage": {
        "total": 7,
        "projects": {
          "Performance": 2,
          "Management App": 3,
          "Administration Portal": 2
        }
      },
      "props": {
        "orientation": {
          "usage": 6,
          "values": {
            "vertical": {
              "usage": {
                "total": 6,
                "projects": {
                  "Performance": 1,
                  "Management App": 3,
                  "Administration Portal": 2
                }
              }
            }
          }
        },
        "value": {
          "usage": 5,
          "values": {
            "selectedProducts": {
              "usage": {
                "total": 2,
                "projects": {
                  "Administration Portal": 2
                }
              }
            },
            "reviewTypes": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "value": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "userAccess": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "onChange": {
          "usage": 5,
          "values": {
            "handleProductSelectionChange": {
              "usage": {
                "total": 2,
                "projects": {
                  "Administration Portal": 2
                }
              }
            },
            "handleChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "handleOnValueChange": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            },
            "handleChangeProductCheckBox": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "gap": {
          "usage": 1,
          "values": {
            "0": {
              "usage": {
                "total": 1,
                "projects": {
                  "Performance": 1
                }
              }
            }
          }
        },
        "padding": {
          "usage": 1,
          "values": {
            "0rem 1rem": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "size": {
          "usage": 1,
          "values": {
            "sm": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "disabled": {
          "usage": 1,
          "values": {
            "isSandboxOrganization || isDemoOrganization": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        }
      }
    },
    "NumberInput": {
      "usage": {
        "total": 6,
        "projects": {
          "Management App": 6
        }
      },
      "props": {
        "value": {
          "usage": 5,
          "values": {
            "field.value": {
              "usage": {
                "total": 2,
                "projects": {
                  "Management App": 2
                }
              }
            },
            "quantity ?? options.minimumQuantity ?? (productIdentifier === ProductIdentifier.Officevibe ? OV_DEFAULT_QUANTITY : 1)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "attribute.value ? parseInt(attribute.value.toString()) : null": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "row.riskThreshold.value": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "onValueChange": {
          "usage": 5,
          "values": {
            "(_, newValue) => field.onChange(newValue)": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            },
            "(e, v) => onChange({ ...attribute, value: v })": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "(_, newValue) => row.riskThreshold.onChange(newValue)": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "min": {
          "usage": 2,
          "values": {
            "0": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "options.minimumQuantity ?? 1": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "onBlur": {
          "usage": 2,
          "values": {
            "onBlur": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            },
            "row.riskThreshold.onBlur": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "disabled": {
          "usage": 1,
          "values": {
            "attribute.isReadOnly": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "onKeyDown": {
          "usage": 1,
          "values": {
            "onKeyDown": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        }
      }
    },
    "HelpMessage": {
      "usage": {
        "total": 6,
        "projects": {
          "Management App": 4,
          "AI": 2
        }
      },
      "props": {
        "display": {
          "usage": 3,
          "values": {
            "flex": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            }
          }
        },
        "gap": {
          "usage": 3,
          "values": {
            "40": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            }
          }
        },
        "alignItems": {
          "usage": 3,
          "values": {
            "center": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 3
                }
              }
            }
          }
        }
      }
    },
    "PasswordInput": {
      "usage": {
        "total": 5,
        "projects": {
          "SG Protect": 1,
          "Performance": 1,
          "Management Shell": 1,
          "Activation": 2
        }
      },
      "props": {
        "onChange": {
          "usage": 5,
          "values": {
            "handlePasswordChange": {
              "usage": {
                "total": 3,
                "projects": {
                  "SG Protect": 1,
                  "Performance": 1,
                  "Management Shell": 1
                }
              }
            },
            "() => resetValidation(\"password\")": {
              "usage": {
                "total": 2,
                "projects": {
                  "Activation": 2
                }
              }
            }
          }
        },
        "placeholder": {
          "usage": 2,
          "values": {
            "t(\"updateProfilePage.passwordPlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Activation": 1
                }
              }
            },
            "t(\"inviteUpdateProfilePage.passwordPlaceholder\")": {
              "usage": {
                "total": 1,
                "projects": {
                  "Activation": 1
                }
              }
            }
          }
        },
        "autoComplete": {
          "usage": 2,
          "values": {
            "new-password": {
              "usage": {
                "total": 2,
                "projects": {
                  "Activation": 2
                }
              }
            }
          }
        },
        "name": {
          "usage": 1,
          "values": {
            "password": {
              "usage": {
                "total": 1,
                "projects": {
                  "Activation": 1
                }
              }
            }
          }
        }
      }
    },
    "DateInput": {
      "usage": {
        "total": 4,
        "projects": {
          "AI": 4
        }
      },
      "props": {
        "fluid": {
          "usage": 4,
          "values": {
            "true": {
              "usage": {
                "total": 4,
                "projects": {
                  "AI": 4
                }
              }
            }
          }
        },
        "width": {
          "usage": 4,
          "values": {
            "max-content": {
              "usage": {
                "total": 4,
                "projects": {
                  "AI": 4
                }
              }
            }
          }
        },
        "presets": {
          "usage": 4,
          "values": {
            "datePresets": {
              "usage": {
                "total": 4,
                "projects": {
                  "AI": 4
                }
              }
            }
          }
        },
        "onDateChange": {
          "usage": 4,
          "values": {
            "(_, date) => onChange(date)": {
              "usage": {
                "total": 4,
                "projects": {
                  "AI": 4
                }
              }
            }
          }
        }
      }
    },
    "StyleProvider": {
      "usage": {
        "total": 3,
        "projects": {
          "SG Protect": 1,
          "Performance": 1,
          "Management Shell": 1
        }
      },
      "props": {
        "value": {
          "usage": 3,
          "values": {
            "{\n    button: {\n        fluid: { base: true, sm: false }\n    }\n}": {
              "usage": {
                "total": 3,
                "projects": {
                  "SG Protect": 1,
                  "Performance": 1,
                  "Management Shell": 1
                }
              }
            }
          }
        }
      }
    },
    "Fieldset": {
      "usage": {
        "total": 3,
        "projects": {
          "Administration Portal": 3
        }
      },
      "props": {
        "label": {
          "usage": 3,
          "values": {
            "Organization": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "Default configuration": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            },
            "Administrator": {
              "usage": {
                "total": 1,
                "projects": {
                  "Administration Portal": 1
                }
              }
            }
          }
        }
      }
    },
    "ValidMessage": {
      "usage": {
        "total": 3,
        "projects": {
          "Management App": 1,
          "Activation": 2
        }
      },
      "props": {
        "display": {
          "usage": 3,
          "values": {
            "flex": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 1,
                  "Activation": 2
                }
              }
            }
          }
        },
        "gap": {
          "usage": 3,
          "values": {
            "40": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 1,
                  "Activation": 2
                }
              }
            }
          }
        },
        "color": {
          "usage": 3,
          "values": {
            "neutral-weak": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 1,
                  "Activation": 2
                }
              }
            }
          }
        },
        "alignItems": {
          "usage": 3,
          "values": {
            "center": {
              "usage": {
                "total": 3,
                "projects": {
                  "Management App": 1,
                  "Activation": 2
                }
              }
            }
          }
        }
      }
    },
    "GroupField": {
      "usage": {
        "total": 2,
        "projects": {
          "Administration Portal": 2
        }
      },
      "props": {}
    },
    "BreakpointProvider": {
      "usage": {
        "total": 1,
        "projects": {
          "SG Protect": 1
        }
      },
      "props": {}
    },
    "InnerTextLink": {
      "usage": {
        "total": 1,
        "projects": {
          "Management App": 1
        }
      },
      "props": {
        "color": {
          "usage": 1,
          "values": {
            "primary": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "fontWeight": {
          "usage": 1,
          "values": {
            "body-md-medium": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "onClick": {
          "usage": 1,
          "values": {
            "() => downloadFile()": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "cursor": {
          "usage": 1,
          "values": {
            "pointer": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "underline": {
          "usage": 1,
          "values": {
            "none": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        }
      }
    },
    "InputGroup": {
      "usage": {
        "total": 1,
        "projects": {
          "Management App": 1
        }
      },
      "props": {
        "fluid": {
          "usage": 1,
          "values": {
            "true": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "disabled": {
          "usage": 1,
          "values": {
            "disabled": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        },
        "onBlur": {
          "usage": 1,
          "values": {
            "onBlur": {
              "usage": {
                "total": 1,
                "projects": {
                  "Management App": 1
                }
              }
            }
          }
        }
      }
    }
  },
  "functions": {
    "slot": {
      "usage": {
        "total": 132,
        "projects": {
          "SG Protect": 25,
          "Performance": 59,
          "Management App": 16,
          "Management Shell": 18,
          "Activation": 1,
          "Login": 1,
          "AI": 12
        }
      },
      "values": {
        "slot(\"actions\", TableSummaryActionsInner)": {
          "usage": {
            "total": 4,
            "projects": {
              "SG Protect": 1,
              "Performance": 1,
              "Management App": 1,
              "Management Shell": 1
            }
          }
        },
        "slot(\"button\", as(ButtonAsLink, ReactRouterLink, { normalizeStyles: true }))": {
          "usage": {
            "total": 4,
            "projects": {
              "SG Protect": 1,
              "Performance": 1,
              "Management Shell": 1,
              "AI": 1
            }
          }
        },
        "slot(\"page-header\", InnerPageHeader)": {
          "usage": {
            "total": 3,
            "projects": {
              "SG Protect": 1,
              "Performance": 1,
              "Management Shell": 1
            }
          }
        },
        "slot(\"page-title\", InnerPageTitle)": {
          "usage": {
            "total": 3,
            "projects": {
              "SG Protect": 1,
              "Performance": 1,
              "Management Shell": 1
            }
          }
        },
        "slot(\"page-breadcrumbs\", InnerPageBreadcrumbs)": {
          "usage": {
            "total": 3,
            "projects": {
              "SG Protect": 1,
              "Performance": 1,
              "Management Shell": 1
            }
          }
        },
        "slot(\"page-tabgroup\", InnerPageTabGroup)": {
          "usage": {
            "total": 3,
            "projects": {
              "SG Protect": 1,
              "Performance": 1,
              "Management Shell": 1
            }
          }
        },
        "slot(\"filter-buttons\", function TableFilterButtons({ children }: DivProps) {\n    return (<>{children}</>);\n})": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 1,
              "Management App": 1
            }
          }
        },
        "slot(\"filter-search\", function TableFilterSearch({ children }: DivProps) {\n    return (<>{children}</>);\n})": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 1,
              "Management App": 1
            }
          }
        },
        "slot(\"filter-tag-list\", function TableFilterTagList({ children }: DivProps) {\n    return (<>{children}</>);\n})": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 1,
              "Management App": 1
            }
          }
        },
        "slot(\"table-summary\", function TableContentSummary({ children }: DivProps) {\n    return (<>{children}</>);\n})": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 1,
              "Management App": 1
            }
          }
        },
        "slot(\"table-body\", function TableContentBody({ children }: DivProps) {\n    return (<>{children}</>);\n})": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 1,
              "Management App": 1
            }
          }
        },
        "slot(\"table-pager\", function TableContentPager({ children }: DivProps) {\n    return (<>{children}</>);\n})": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 1,
              "Management App": 1
            }
          }
        },
        "slot(\"table-summary\", function TableContentSummary({ children }: DivProps) {\n    return <>{children}</>;\n})": {
          "usage": {
            "total": 2,
            "projects": {
              "SG Protect": 1,
              "Management Shell": 1
            }
          }
        },
        "slot(\"table-body\", function TableContentBody({ children }: DivProps) {\n    return <>{children}</>;\n})": {
          "usage": {
            "total": 2,
            "projects": {
              "SG Protect": 1,
              "Management Shell": 1
            }
          }
        },
        "slot(\"table-pager\", function TableContentPager({ children }: DivProps) {\n    return <>{children}</>;\n})": {
          "usage": {
            "total": 2,
            "projects": {
              "SG Protect": 1,
              "Management Shell": 1
            }
          }
        },
        "slot(\"page-footer\", function PageFooter({ children, ...rest }: PageFooterProps) {\n    return (\n        <Flex\n            width=\"100%\"\n            minHeight=\"4.5rem\"\n            padding=\"inset-md\"\n            {...rest}\n        >\n            {children}\n        </Flex>\n    );\n})": {
          "usage": {
            "total": 2,
            "projects": {
              "SG Protect": 1,
              "Management Shell": 1
            }
          }
        },
        "slot(\"filter-buttons\", function TableFilterButtons({ children }: DivProps) {\n    return <>{children}</>;\n})": {
          "usage": {
            "total": 2,
            "projects": {
              "SG Protect": 1,
              "Management Shell": 1
            }
          }
        },
        "slot(\"filter-search\", function TableFilterSearch({ children }: DivProps) {\n    return <>{children}</>;\n})": {
          "usage": {
            "total": 2,
            "projects": {
              "SG Protect": 1,
              "Management Shell": 1
            }
          }
        },
        "slot(\"filter-tag-list\", function TableFilterTagList({ children }: DivProps) {\n    return <>{children}</>;\n})": {
          "usage": {
            "total": 2,
            "projects": {
              "SG Protect": 1,
              "Management Shell": 1
            }
          }
        },
        "slot(\"page-actions\", ({ wrap: wrapProp, ...rest }: PageActionsProps) => {\n    const wrap = useResponsiveValue(wrapProp);\n\n    return (<Flex wrap={wrap ? \"wrap\" : undefined} {...rest} />);\n})": {
          "usage": {
            "total": 2,
            "projects": {
              "SG Protect": 1,
              "Management Shell": 1
            }
          }
        },
        "slot(\"page-content\", function PageContent({ children, ...rest }: PageContentProps) {\n    return (\n        <Div height=\"100%\" {...rest}>\n            {children}\n        </Div>\n    );\n})": {
          "usage": {
            "total": 2,
            "projects": {
              "SG Protect": 1,
              "Management Shell": 1
            }
          }
        },
        "slot(\"image\", forwardRef<SVGElement, Omit<SvgImageProps, \"src\"> >((props, ref) => (\n    <Suspense fallback={<SvgImage ref={ref} {...props} />}>\n        <SvgImage ref={ref} src={src} {...props} />\n    </Suspense>\n)))": {
          "usage": {
            "total": 2,
            "projects": {
              "Activation": 1,
              "Login": 1
            }
          }
        },
        "slot(\"tableFilter\", TableFilterInner)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "slot(\"inline-filter-tag-list\", function InlineTableFilterTagList({ children }: DivProps) {\n    return <>{children}</>;\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "slot(\"image\", (props: SvgImageProps) => {\n    return (\n        <SvgImage {...props} src={src} />\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "slot(\"image\", (props: SvgImageProps) => {\n    return (\n        <Suspense fallback={<SvgImage {...props} />}>\n            <SvgImage {...props} src={src} />\n        </Suspense>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "slot(\"button\", function GhostButton(props: GhostButtonProps) {\n    const { variant = \"primary\", size = \"sm\", leadingIcon, children, trailingIcon, active = false, ref, ...rest } = props;\n\n    return (\n        <HtmlButton ref={ref}\n            className={[\n                \"ghost-button\",\n                {\n                    \"primary\": \"ghost-button-primary\",\n                    \"secondary\": \"ghost-button-secondary\",\n                    \"danger\": \"ghost-button-danger\"\n                }[variant],\n                {\n                    \"sm\": \"ghost-button-sm\",\n                    \"md\": \"ghost-button-md\"\n                }[size],\n                active ? \"ghost-button-active\" : \"\"\n            ].join(\" \")}\n            {...rest}\n        >\n            {leadingIcon}\n            {children}\n            {trailingIcon}\n        </HtmlButton>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "slot(\"button\", function GhostIconButton(props: GhostIconButtonProps) {\n    return <GhostButton padding=\"inset-sm\" {...props} />;\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "slot(\"icon\", InnerWorkspaceIcon)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "slot(\"text\", InnerTruncatedText)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "slot(\"page-title\", InnerWorkspaceDetailsPageTitle)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "slot(\"tableSummary\", TableSummaryInner)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "slot(\"table-filters\", function TableContentFilters({ children }: DivProps) {\n    return (<>{children}</>);\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"icon\", forwardRef<SVGSVGElement, SVGProps<SVGSVGElement>>((props, ref) => {\n    const { fill = \"#5F61C5\", ...rest } = props;\n\n    return (\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...rest} ref={ref}>\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M4.89987 1.3135C4.85463 1.12942 4.68956 1 4.5 1C4.31044 1 4.14537 1.12942 4.10013 1.3135L4.02601 1.61514C3.72875 2.82477 2.77555 3.76386 1.56161 4.04303L1.31948 4.09871C1.1325 4.14171 1 4.30814 1 4.5C1 4.69186 1.1325 4.85829 1.31948 4.90129L1.56161 4.95697C2.77555 5.23614 3.72875 6.17523 4.02601 7.38486L4.10013 7.6865C4.14537 7.87058 4.31044 8 4.5 8C4.68956 8 4.85463 7.87058 4.89987 7.6865L4.97399 7.38486C5.27125 6.17523 6.22445 5.23614 7.43839 4.95697L7.68052 4.90129C7.8675 4.85829 8 4.69186 8 4.5C8 4.30814 7.8675 4.14171 7.68052 4.09871L7.43839 4.04303C6.22445 3.76386 5.27125 2.82477 4.97399 1.61514L4.89987 1.3135Z\" fill={fill} />\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.0444 4.18614C9.99568 4.00682 9.83288 3.88235 9.64706 3.88235C9.46123 3.88235 9.29843 4.00682 9.2497 4.18614L8.7031 6.19759C8.4028 7.30268 7.55092 8.173 6.45251 8.49687L4.58943 9.04622C4.41432 9.09785 4.29412 9.25862 4.29412 9.44118C4.29412 9.62373 4.41432 9.7845 4.58943 9.83613L6.45251 10.3855C7.55092 10.7094 8.4028 11.5797 8.7031 12.6848L9.2497 14.6962C9.29843 14.8755 9.46123 15 9.64706 15C9.83288 15 9.99568 14.8755 10.0444 14.6962L10.591 12.6848C10.8913 11.5797 11.7432 10.7094 12.8416 10.3855L14.7047 9.83613C14.8798 9.7845 15 9.62373 15 9.44118C15 9.25862 14.8798 9.09785 14.7047 9.04622L12.8416 8.49687C11.7432 8.173 10.8913 7.30268 10.591 6.19759L10.0444 4.18614Z\" fill={fill} />\n        </svg>\n    );\n}))": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"icon\", forwardRef<SVGSVGElement>((props, ref) => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" {...props} ref={ref}>\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M26.3936 7.00057C23.5278 6.97767 21.5319 7.63072 20.3672 8.86525C19.463 9.82361 18.9183 11.2865 19.0085 13.4685C19.7849 12.3063 20.6836 11.2112 21.7 10.2953C22.1103 9.92553 22.7426 9.95839 23.1123 10.3687C23.4821 10.7789 23.4492 11.4112 23.0389 11.781C21.899 12.8083 20.9591 13.9982 20.1885 15.2564C22.6334 14.9704 24.1554 14.1887 25.0764 13.0638C26.1274 11.7801 26.579 9.83003 26.3936 7.00057ZM17.2547 15.7364C17.2866 15.9186 17.3431 16.0907 17.4204 16.2499C16.8031 17.518 16.3265 18.7637 15.996 19.8544C15.8744 19.5332 15.7384 19.2213 15.5863 18.924C15.2274 18.2224 14.6521 17.5892 13.9969 17.1009C13.9254 15.495 13.4603 14.0404 12.3251 13.08C11.1678 12.1009 9.53484 11.8196 7.56626 12.1069C6.59242 12.249 5.90582 13.1046 6.01055 14.0528C6.1992 15.7611 6.79411 17.1065 7.94854 17.971C9.0835 18.8209 10.5773 19.0669 12.2454 18.9852C12.4966 18.973 12.7348 18.9125 12.95 18.8134C13.2611 19.0613 13.5796 19.3929 13.8057 19.8348C14.143 20.4941 14.4018 21.3012 14.591 22.1754C14.86 23.4191 14.9735 24.7303 14.9976 25.8109C14.9951 25.8749 14.9929 25.9379 14.991 26H12C11.4477 26 11 26.4477 11 27C11 27.5523 11.4477 28 12 28H20C20.5523 28 21 27.5523 21 27C21 26.4477 20.5523 26 20 26H17.0011C17.0004 25.942 16.9995 25.8834 16.9983 25.8241C17.0309 25.0461 17.1318 24.0823 17.3261 23.0101C17.6374 21.293 18.1883 19.2978 19.0826 17.3418C19.1472 17.3446 19.2125 17.3442 19.2782 17.3405C22.6102 17.1529 25.08 16.2165 26.6239 14.3307C28.154 12.462 28.5937 9.87758 28.3857 6.81541C28.3172 5.80696 27.4856 5.0122 26.4677 5.00118C23.3418 4.96734 20.6449 5.65647 18.9124 7.49276C17.1558 9.35465 16.6256 12.1394 17.2547 15.7364ZM11.0465 14.4894C11.6094 14.9657 11.9854 15.8025 12.0542 17.117C10.6486 17.1741 9.73186 16.9352 9.13738 16.4901C8.56242 16.0595 8.11716 15.3053 7.9517 13.9473C9.55463 13.7294 10.4936 14.0217 11.0465 14.4894Z\" fill=\"#3C3C3C\" />\n        </svg>\n    );\n}))": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"page-footer\", function PageFooter({ children, ...rest }: PageFooterProps) {\n    return (\n        <Flex\n            width=\"100%\"\n            minHeight={Navbar.FOOTER_HEIGHT}\n            padding=\"inset-squish-lg\"\n            {...rest}\n        >\n            {children}\n        </Flex>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"page-content\", function PageContent({ children, ...rest }: PageContentProps) {\n    return (\n        <Div paddingBottom={960} height=\"100%\" {...rest}>\n            {children}\n        </Div>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"page-actions\", ({ wrap: wrapProp, ...rest }: PageActionsProps) => {\n    const wrap = useResponsiveValue(wrapProp);\n\n    return <Flex wrap={wrap ? \"wrap\" : undefined} flexShrink={0} {...rest} />;\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"image\", forwardRef<SVGSVGElement, Omit<SvgImageProps, \"src\">>((props, ref) => {\n    return (\n        <ThemeProvider colorScheme=\"light\">\n            <Suspense fallback={<SvgImage ref={ref} {...props} />}>\n                <SvgImage ref={ref} {...props} src={src} />\n            </Suspense>\n        </ThemeProvider>\n    );\n}))": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"text\", withPublicData(Text))": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"tag\", withPublicData(Tag))": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"paragraph\", withPublicData(Paragraph))": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"heading\", withPublicData(Heading))": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"heading\", withPublicData(H2))": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"heading\", withPublicData(H1))": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"content\", withPublicData(Content))": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"button\", withPublicData(ButtonAsLink))": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"button\", withPublicData(Button))": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"page-header\", function FullscreePageHeader({ title, onClose, backButtonTitle, closeButtonTitle, trackButtonClicked, children, className, onBack, hideBackButton }: FullscreenPageHeaderProps) {\n    const { tag } = useSlots(children, {\n        _: {\n            defaultWrapper: Div\n        },\n        \"tag\": {}\n    });\n\n    const navigate = useNavigate();\n    const pageTheme = useContext(PageThemeContext);\n    const isWorkleapAiAvailable = useIsWorkleapAIAvailable();\n\n    function handleBackButtonClicked() {\n        trackButtonClicked?.();\n        if (onBack) {\n            onBack();\n\n            return;\n        }\n\n        if (window.history.state?.idx) {\n            navigate(-1);\n\n            return;\n        }\n\n        onClose();\n    }\n\n    function handleOnClose() {\n        trackButtonClicked?.();\n        onClose();\n    }\n\n    return (\n        <Div\n            className={className}\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n            gap=\"inline-md\"\n            padding=\"inset-md\"\n            height={Navbar.NAVBAR_HEIGHT}\n            backgroundColor={pageTheme.backgroundColor}\n            borderBottom={pageTheme.headerBorder}\n            zIndex={ZIndex.STICKY}\n        >\n            <Div display=\"flex\" alignItems=\"center\" gap=\"inline-md\">\n                {!hideBackButton && (\n                    <>\n                        <IconButton onClick={handleBackButtonClicked} aria-label={backButtonTitle} title={backButtonTitle} variant=\"tertiary\" >\n                            <AngleLeftIcon />\n                        </IconButton>\n                        <Divider orientation=\"vertical\" display={{ base: \"none\", sm: \"block\" }} />\n                    </>\n                )}\n                <Heading size=\"sm\" marginBottom={0}>\n                    {typeof title === \"string\"\n                        ? <PublicSpan>{title}</PublicSpan>\n                        : title\n                    }\n                </Heading>\n                {tag}\n            </Div>\n            <Flex alignItems=\"center\">\n                <Flex gap=\"inline-md\">\n                    {/* @ts-expect-error: Allow custom element <wl-ai-header-assistant> */}\n                    <wl-ai-header-assistant></wl-ai-header-assistant>\n                    {isWorkleapAiAvailable && !!closeButtonTitle && <Divider orientation=\"vertical\" />}\n                </Flex>\n                {!!closeButtonTitle && <CrossButton onClick={handleOnClose} aria-label={closeButtonTitle} title={closeButtonTitle} />}\n            </Flex>\n        </Div>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"page-content\", function FullscreenPageContent({ children, fullHeight, ...otherProps }: FullscreenPageContentProps) {\n    const height: HeightProp | undefined = fullHeight ? \"100%\" : undefined;\n    const pageTheme = useContext(PageThemeContext);\n    const ref = useRef<HTMLDivElement>(null);\n    const [contentRef, setContentRef] = useState<FullscreenPageContentContext>(createContentContext(ref?.current));\n\n    useEffect(() => {\n        if (!ref.current) {\n            return;\n        }\n\n        const resizeObserver = new ResizeObserver(() => {\n            setContentRef(createContentContext(ref.current));\n        });\n\n        resizeObserver.observe(ref.current);\n\n        return () => {\n            resizeObserver.disconnect();\n        };\n    }, []);\n\n    return (\n        <FullscreenPageContentRef.Provider value={contentRef}>\n            <Div\n                ref={ref}\n                backgroundColor={pageTheme.backgroundColor}\n                flexGrow=\"1\"\n                height=\"100%\"\n                width=\"100%\"\n                overflow=\"auto\"\n                position=\"relative\"\n                paddingTop={{ base: \"inset-lg\", sm: 960 }}\n                paddingBottom={960}\n                zIndex={0}\n                minWidth={0}\n                {...otherProps}\n                className={classNames(\"fullscreen-page-content\", otherProps.className)}\n            >\n                <PageContainer wrapperProps={{ paddingX: { base: \"inset-sm\", xs: \"inset-md\" }, height }} height={height}>\n                    {children}\n                </PageContainer>\n            </Div>\n        </FullscreenPageContentRef.Provider>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"content\", function Content({ reviewCycle }: ContentProps) {\n    const { t } = useTranslation(\"reviewCycleDetailsManagementPage\");\n\n    return (\n        <Flex direction=\"column\" gap={{ base: \"stack-md\", md: \"stack-lg\" }}>\n            <PublicHeading size={{ base: \"md\", md: \"lg\" }} margin={0}>\n                {t(\"pageTitle\")}\n            </PublicHeading>\n            <ReviewCycleProgressTrackersCard\n                managerReviewDueDate={reviewCycle.managerReviewDueDate}\n                managerReviewStatusCount={reviewCycle.managerReviewStatusCount}\n                selfReviewDueDate={reviewCycle.selfReviewDueDate}\n                selfReviewStatusCount={reviewCycle.selfReviewStatusCount}\n                peerReviewDueDate={reviewCycle.peerReviewDueDate}\n                peerReviewStatusCount={reviewCycle.peerReviewStatusCount}\n                lockedDate={reviewCycle.lockedDate}\n            />\n            <Participants reviewCycle={reviewCycle} />\n        </Flex>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"side-panel\", function SidePanelSection({\n    reviewCycleId,\n    isReviewCycleLocked,\n    selectedReviewee,\n    selectedBucket,\n    selectedGroup,\n    selectedReviewTypes,\n    selectedQuestionIds,\n    selectedDenominator,\n    minRating,\n    maxRating,\n    onRevieweeChange,\n    isSidePanelOpen,\n    openSidePanel,\n    closeSidePanel,\n    ...rest }: SidePanelSectionProps) {\n    const { data: review, isLoading: isLoadingReview, isError: hasErrorReview } = useGetReviewSummaryQuery(reviewCycleId, selectedReviewee?.reviewee.memberId);\n    const { data: ratings, isLoading: isLoadingRatings, isError: hasErrorRatings, hasNextPage, fetchNextPage, isFetchingNextPage } = useGetMembersByRatingQuery(\n        reviewCycleId,\n        selectedGroup,\n        selectedReviewTypes,\n        selectedQuestionIds,\n        selectedDenominator,\n        minRating,\n        maxRating,\n        !!selectedGroup && selectedReviewTypes.length !== 0 && selectedQuestionIds.length !== 0);\n\n    return (\n        <ReviewCycleAnalyticsSidePanel\n            isOpen={isSidePanelOpen}\n            open={openSidePanel}\n            close={closeSidePanel}\n            onRevieweeChange={onRevieweeChange}\n            reviewCycleId={reviewCycleId}\n            isReviewCycleLocked={isReviewCycleLocked}\n            participants={{\n                ratings: ratings ?? [],\n                hasMore: hasNextPage,\n                loadMore: fetchNextPage,\n                isFetchingNextPage: isFetchingNextPage\n            }}\n            reviewee={selectedReviewee ? {\n                identity: selectedReviewee.reviewee,\n                latestManagerEditor: review?.reviewSummary.managerMemberReviewStatus.memberIdentity,\n                currentManagerId: selectedReviewee.currentManagerId,\n                temporaryManagerId: selectedReviewee.temporaryManagerId,\n                answerIdentities: review?.answerIdentities ?? [],\n                peers: (review?.reviewSummary.peerReviewers ?? []).map(r => r.peerIdentity),\n                review: review\n                    ? {\n                        ...review.reviewSummary,\n                        primaryReviewType: ReviewType.Manager\n                    }\n                    : undefined\n            } : undefined}\n            selectedBucket={selectedBucket}\n            isLoading={isLoadingReview || isLoadingRatings}\n            hasErrorReview={hasErrorReview}\n            hasErrorRatings={hasErrorRatings}\n            {...rest}\n        />\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"page-header\", function PreviewReviewCycleFullscreenPageHeader({ onClose }: PreviewReviewCyclePage) {\n    const { t } = useTranslation(\"previewReviewCyclePage\");\n\n    return (\n        <Div\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n            padding=\"inset-md\"\n            height={Navbar.NAVBAR_HEIGHT}\n            backgroundColor=\"neutral\"\n            borderBottom=\"1px solid var(--hop-neutral-border-weak)\"\n            zIndex={ZIndex.STICKY}\n        >\n            <Div display=\"flex\" alignItems=\"center\" gap=\"inline-md\">\n                <IconButton onClick={onClose} aria-label={t(\"backButton\")} title={t(\"backButton\")} variant=\"tertiary\" >\n                    <AngleLeftIcon />\n                </IconButton>\n                <Divider orientation=\"vertical\" display={{ base: \"none\", sm: \"block\" }} />\n                <PublicHeading size=\"sm\" marginBottom={0} >\n                    {t(\"pageTitle\")}\n                </PublicHeading>\n            </Div>\n            <PublicButton variant=\"secondary\" onClick={onClose} aria-label={t(\"editButton\")} title={t(\"editButton\")}>{t(\"editButton\")}</PublicButton>\n        </Div>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"content\", function Content({ reviewCycle }: ContentProps) {\n    const { t } = useTranslation(\"reviewCycleDetailsManagementPage\");\n\n    return (\n        <Flex direction=\"column\" gap={{ base: \"stack-md\", md: \"stack-lg\" }}>\n            <Heading size={{ base: \"md\", md: \"lg\" }} margin={0}>\n                {t(\"pageTitle\")}\n            </Heading>\n            <ReviewCycleProgressTrackersCard\n                managerReviewDueDate={reviewCycle.managerReviewDueDate}\n                managerReviewStatusCount={reviewCycle.managerReviewStatusCount}\n                selfReviewDueDate={reviewCycle.selfReviewDueDate}\n                selfReviewStatusCount={reviewCycle.selfReviewStatusCount}\n                peerReviewDueDate={reviewCycle.peerReviewDueDate}\n                peerReviewStatusCount={reviewCycle.peerReviewStatusCount}\n                lockedDate={reviewCycle.lockedDate}\n            />\n            <Participants reviewCycle={reviewCycle} />\n        </Flex>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"side-panel\", function SidePanelSection({\n    reviewCycleId,\n    isReviewCycleLocked,\n    selectedReviewee,\n    selectedBucket,\n    selectedGroup,\n    selectedReviewTypes,\n    selectedQuestionIds,\n    selectedDenominator,\n    minRating,\n    maxRating,\n    onRevieweeChange,\n    isSidePanelOpen,\n    openSidePanel,\n    closeSidePanel,\n    ...rest }: SidePanelSectionProps) {\n    const { data: review, isLoading: isLoadingReview, isError: hasErrorReview } = useGetReviewSummaryQuery(reviewCycleId, selectedReviewee?.reviewee.memberId);\n    const { data: ratings, isLoading: isLoadingRatings, isError: hasErrorRatings, hasNextPage, fetchNextPage, isFetchingNextPage } = useGetManagerMembersByRatingQuery(\n        reviewCycleId,\n        selectedGroup,\n        selectedReviewTypes,\n        selectedQuestionIds,\n        selectedDenominator,\n        minRating,\n        maxRating,\n        !!selectedGroup && selectedReviewTypes.length !== 0 && selectedQuestionIds.length !== 0);\n\n    return (\n        <ReviewCycleAnalyticsSidePanel\n            isOpen={isSidePanelOpen}\n            open={openSidePanel}\n            close={closeSidePanel}\n            onRevieweeChange={onRevieweeChange}\n            reviewCycleId={reviewCycleId}\n            isReviewCycleLocked={isReviewCycleLocked}\n            participants={{\n                ratings: ratings ?? [],\n                hasMore: hasNextPage,\n                loadMore: fetchNextPage,\n                isFetchingNextPage: isFetchingNextPage\n            }}\n            reviewee={selectedReviewee ? {\n                identity: selectedReviewee.reviewee,\n                latestManagerEditor: review?.reviewSummary.managerMemberReviewStatus.memberIdentity,\n                currentManagerId: selectedReviewee.currentManagerId,\n                temporaryManagerId: selectedReviewee.temporaryManagerId,\n                answerIdentities: review?.answerIdentities ?? [],\n                peers: (review?.reviewSummary.peerReviewers ?? []).map(r => r.peerIdentity),\n                review: review\n                    ? {\n                        ...review.reviewSummary,\n                        primaryReviewType: ReviewType.Manager\n                    }\n                    : undefined\n            } : undefined}\n            selectedBucket={selectedBucket}\n            isLoading={isLoadingReview || isLoadingRatings}\n            hasErrorReview={hasErrorReview}\n            hasErrorRatings={hasErrorRatings}\n            {...rest}\n        />\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"heading\", function SidePanelSummaryHeader({ revieweeDisplayName, reviewCycleTitle, questionSummaryContent, ...rest }: SidePanelSummaryHeaderProps) {\n    const { t } = useTranslation(\"sidePanelSummary\");\n    const isMobile = useResponsiveValue({ base: true, xs: false });\n\n    const { trackButtonClicked } = useTrackButtonClicked();\n\n    function handleOnCopyButtonClick() {\n        trackButtonClicked(TrackingEvent.CopyAISummary, TriggerLocation.SummarySidePanel);\n    }\n\n    return (\n        <Flex direction=\"column\" gap=\"stack-sm\" minWidth={0} paddingLeft=\"inset-md\" {...rest}>\n            <Flex gap=\"inline-sm\" alignItems={{ base: \"center\", xs: \"baseline\" }} justifyContent={{ base: \"space-between\", xs: \"flex-start\" }}>\n                <Lozenge backgroundColor=\"status-option2\" color=\"status-option2\" padding=\"inset-xs\" borderRadius=\"rounded-sm\">\n                    <Div slot=\"icon\" marginRight=\"inline-sm\" height=\"1rem\">\n                        <WorkleapAIIconSmall />\n                    </Div>\n                    <PublicOverline slot=\"text\">{t(\"workleapAITag\")}</PublicOverline>\n                </Lozenge>\n                {isMobile && <CopyButton content={questionSummaryContent} onClick={handleOnCopyButtonClick} />}\n            </Flex>\n            <Heading size=\"lg\" marginBottom={0}>\n                <PublicTrans t={t} i18nKey=\"headerTitle\" values={{ revieweeDisplayName }} />\n            </Heading>\n            <Text size=\"xs\" fontWeight=\"body-xs-medium\">\n                <PublicTrans t={t} i18nKey=\"headerDescription\" values={{ reviewCycleTitle }} />\n            </Text>\n            <PublicText size=\"xs\" fontStyle=\"italic\">{t(\"disclaimer\")}</PublicText>\n        </Flex>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"headingStickySection\", function SidePanelSummaryHeaderStickySection({\n    availableQuestions,\n    selectedQuestion,\n    onChange,\n    ...rest }: SidePanelSummaryHeaderStickySectionProps) {\n    const { t } = useTranslation(\"sidePanelSummary\");\n    const isMobileOrTablet = useResponsiveValue({ base: true, sm: false });\n    const { trackButtonClicked } = useTrackButtonClicked();\n\n    function handleOnChange(selectedKeys: string[]) {\n        trackButtonClicked(TrackingEvent.SelectQuestionSummary, TriggerLocation.SummarySidePanel);\n        if (selectedKeys.length > 0 && selectedKeys[0]) {\n            onChange(availableQuestions.find(q => q.id === selectedKeys[0])!);\n        }\n    }\n\n    return (\n        <Div\n            width=\"100%\"\n            {...rest}\n        >\n            <SmallSelect\n                width=\"100%\"\n                disabled={availableQuestions.length <= 1}\n                selectedKeys={[selectedQuestion.id]}\n                onChange={(_, keys) => handleOnChange(keys)}\n                selectedOptionsLabel={selectedQuestion.id === allQuestions.id ? t(\"allQuestionsLabel\") : t(\"selectedQuestionLabel\", { index: selectedQuestion.index })}\n                overlayZIndex={isMobileOrTablet ? ZIndex.MODAL : ZIndex.SIDEPANEL}\n            >\n                {availableQuestions.map(QuestionItem)}\n            </SmallSelect>\n        </Div>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"filter-content\", function ReviewCyclesFilter({ sortDirection, onSortChange }: ReviewCyclesFilterProps) {\n    const { t } = useTranslation(\"reviewCyclesFilter\");\n\n    function handleOnSortChange(key: string) {\n        onSortChange(key as SortDirection);\n    }\n\n    return (\n        <Flex padding=\"inset-squish-md\" alignItems=\"center\" justifyContent=\"end\" border=\"neutral-weak\" borderRadius=\"rounded-md\" backgroundColor=\"neutral-weakest\">\n            <SortButton\n                alignEnd\n                selectedKeys={[sortDirection]}\n                onChange={(_, key) => handleOnSortChange(key)}\n            >\n                <Item key={SortDirection.Descending}>\n                    <PublicText>{t(\"descendingDueDate\")}</PublicText>\n                </Item>\n                <Item key={SortDirection.Ascending}>\n                    <PublicText>{t(\"ascendingDueDate\")}</PublicText>\n                </Item>\n            </SortButton>\n        </Flex>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"content\", function ReviewCycleDetailsManagementPageLoadingState() {\n    const { t } = useTranslation(\"reviewCycleDetailsManagementPage\");\n\n    return (\n        <Flex direction=\"column\" gap={{ base: \"stack-md\", md: \"stack-lg\" }}>\n            <PublicHeading size={{ base: \"md\", md: \"lg\" }} margin={0}>\n                {t(\"pageTitle\")}\n            </PublicHeading>\n            <ReviewCycleProgressTrackerLoadingState />\n            <ReviewCycleParticipantsLoadingState />\n        </Flex>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"content\", function ReviewCycleDetailsAnalyticsPageLoadingState() {\n    const { t } = useTranslation(\"reviewCycleDetailsAnalyticsPageContent\");\n\n    return (\n        <Flex direction=\"column\" gap=\"stack-md\">\n            <Heading size={{ base: \"md\", md: \"lg\" }} margin={0}>\n                {t(\"pageTitle\")}\n            </Heading>\n            <GroupingCardLoadingState />\n            <AnalyticsLoadingState />\n            <ParticipantListLoadingState />\n        </Flex>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"icon\", function TeamIcon({ isDeleted, teamType, color, size }: TeamIconProps) {\n    const { t } = useComponentsTranslation(\"teamIcon\");\n\n    if (isDeleted) {\n        return <DeletedAvatar size=\"xs\" aria-label={t(\"deletedAriaLabel\")} />;\n    }\n\n    if (teamType === \"Segment\") {\n        return <SegmentIcon size=\"sm\" />;\n    }\n\n    if (!color) {\n        return null;\n    }\n\n    function getSize() {\n        switch (size) {\n            case \"xs\":\n                return \"0.75rem\";\n            case \"sm\":\n                return \"1rem\";\n            case \"md\":\n                return \"1.5rem\";\n            default:\n                return \"1rem\";\n        }\n    }\n\n    return (\n        <Div\n            height={getSize()}\n            width={getSize()}\n            backgroundColor={color}\n            borderRadius=\"0.125rem\"\n            flexShrink={0}\n        />\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"trigger\", forwardRef(function TeamFilterTrigger({\n    open,\n    quickFilter,\n    selectedTeam,\n    shrinkOnLargeScreen = false,\n    children,\n    ...rest\n}: TeamFilterTriggerProps, ref: Ref<HTMLButtonElement>) {\n    function renderButtonIcon() {\n        if (selectedTeam) {\n            return (\n                <TeamIcon\n                    color={selectedTeam.color}\n                    isDeleted={selectedTeam.isDeleted}\n                    teamType={selectedTeam.teamType}\n                    size=\"xs\"\n                />\n            );\n        }\n\n        return getQuickFilterIcon(quickFilter, \"sm\");\n    }\n\n    return (\n        <Button\n            size=\"sm\"\n            variant=\"secondary\"\n            width={{ base: \"100%\", xs: \"18rem\", lg: shrinkOnLargeScreen ? \"15rem\" : \"18rem\", xl: \"18rem\" }}\n            border=\"neutral\"\n            borderHover=\"neutral-hover\"\n            data-testid=\"team-filter-trigger\"\n            ref={ref}\n            {...rest}\n        >\n            {renderButtonIcon()}\n            <Text\n                flexGrow={1}\n                marginLeft=\"inline-sm\"\n                lineHeight=\"body-sm\"\n                overflow=\"hidden\"\n                textAlign=\"left\"\n                textOverflow=\"ellipsis\"\n                size=\"sm\"\n                whiteSpace=\"nowrap\"\n            >\n                {children}\n            </Text>\n            <DisclosureArrow width=\"1rem\" open={open} slot=\"end-icon\" />\n        </Button>\n    );\n}\n))": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"icon\", function MemberIcon({ isDeleted, name, imageUrl }: MemberIconProps) {\n    const { t } = useComponentsTranslation(\"memberIcon\");\n\n    if (isDeleted) {\n        return <DeletedAvatar size=\"xs\" aria-label={t(\"deletedAriaLabel\")} />;\n    }\n\n    if (!name) {\n        return null;\n    }\n\n    const avatarProps: InnerAvatarProps = {\n        name,\n        size: \"xs\",\n        ...(imageUrl && { src: imageUrl })\n    };\n\n    return <Avatar data-private {...avatarProps} />;\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"trigger\", forwardRef(function GroupFilterTrigger({\n    children,\n    showButtons,\n    onDeleteFilter,\n    ...rest\n}: GroupFilterTriggerProps, ref: Ref<HTMLDivElement>) {\n    const { t } = useTranslation(\"groupFilter\");\n\n    const handleOnDeleteFilter = useCallback((e: SyntheticEvent) => {\n        e.stopPropagation();\n        onDeleteFilter?.();\n    }, [onDeleteFilter]);\n\n    return (\n        <Card\n            display=\"flex\"\n            justifyContent={{ base: \"flex-start\", lg: \"center\" }}\n            data-testid=\"group-filter-trigger\"\n            padding={{ base: \"inset-md\", lg: \"inset-xl\" }}\n            ref={ref}\n            position=\"relative\"\n            {...rest}\n        >\n            {children}\n            {showButtons && (\n                <Flex\n                    gap=\"inline-sm\"\n                    justifySelf=\"flex-end\"\n                    marginLeft=\"auto\"\n                    position={{ lg: \"absolute\" }}\n                    right={{ lg: \"1rem\" }}\n                    top={{ lg: \"1rem\" }}\n                >\n                    <IconButton\n                        aria-label={t(\"editAriaLabel\")}\n                        variant=\"tertiary\"\n                        color=\"neutral\"\n                        size=\"sm\"\n                    >\n                        <EditIcon />\n                    </IconButton>\n                    {onDeleteFilter && (\n                        <IconButton\n                            aria-label={t(\"deleteAriaLabel\")}\n                            onClick={handleOnDeleteFilter}\n                            variant=\"tertiary\"\n                            color=\"neutral\"\n                            size=\"sm\"\n                        >\n                            <DeleteIcon />\n                        </IconButton>\n                    )}\n                </Flex>\n            )}\n        </Card>\n    );\n}))": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"content\", function FilterTabgroup({ children, onTabChange, defaultTab, ...rest }: FilterTabgroupProps) {\n    const [tab, setTab] = useState<string>(defaultTab);\n\n    const handleTabChange = useCallback((_e: SyntheticEvent<Element, Event>, key: string) => {\n        onTabChange(getCleanKey(key, \"\"));\n        setTab(key);\n    }, [onTabChange]);\n\n    const augmentedChildren = augmentChildren(children);\n\n    return (\n        <Tabs\n            collapsible={false}\n            className={styles.tabs}\n            selectedKey={tab}\n            onSelectionChange={handleTabChange}\n            {...rest}\n        >\n            {augmentedChildren}\n        </Tabs>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"content\", function FilterContent({ children, ...rest } : FilterContentProps) {\n    const { search, content } = useSlots(children, {\n        _: {\n            defaultWrapper: Div\n        },\n        search: {\n            backgroundColor: \"neutral-weakest\",\n            padding: \"inset-squish-md\",\n            borderTopLeftRadius: { xs: \"rounded-md\" },\n            borderTopRightRadius: { xs: \"rounded-md\" }\n        },\n        content: {\n            overflowX: \"hidden\"\n        }\n    });\n\n    return (\n        <Content {...rest}>\n            {search}\n            {content}\n        </Content>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"header-actions\", function ReviewHeaderActions({ reviewId, onEdit, onShare, className }: ReviewHeaderActionsProps) {\n    const isMobile = useResponsiveValue({ base: true, xs: false });\n    const { t } = useTranslation(\"reviewHeader\");\n\n    const handleOnEdit = useCallback(() => {\n        onEdit?.(reviewId);\n    }, [onEdit, reviewId]);\n\n    const handleOnMenuSelectionChange = useCallback(function handleOnMenuSelectionChange(_: SyntheticEvent<Element, Event>, selectedKeys: string[]) {\n        switch (selectedKeys[0]) {\n            case ReviewHeaderMenuActions.Edit:\n                onEdit?.(reviewId);\n                break;\n            case ReviewHeaderMenuActions.Share:\n                onShare?.();\n                break;\n        }\n    }, [onEdit, onShare, reviewId]);\n\n    if (isMobile) {\n        return (\n            <MenuTrigger zIndex={ZIndex.DROPDOWN_OVERLAY}>\n                <IconButton className={className} variant=\"secondary\" aria-label=\"\" border=\"none\">\n                    <KebabIcon />\n                </IconButton>\n                <Menu onSelectionChange={handleOnMenuSelectionChange}>\n                    {onEdit && (\n                        <Item key={ReviewHeaderMenuActions.Edit}>\n                            <EditIcon />\n                            <PublicText>{t(\"editButton\")}</PublicText>\n                        </Item>\n                    )}\n                    {onShare && (\n                        <Item key={ReviewHeaderMenuActions.Share}>\n                            <ShareIcon />\n                            <PublicText>{t(\"shareButton\")}</PublicText>\n                        </Item>\n                    )}\n                </Menu>\n            </MenuTrigger>\n        );\n    }\n\n    return (\n        <Flex className={className} justifyContent=\"end\" alignItems=\"center\" gap=\"inline-sm\">\n            {onEdit && (\n                <Button onClick={handleOnEdit} variant={onShare ? \"secondary\" : \"primary\"}>\n                    <EditIcon size=\"sm\" />\n                    <PublicText>{t(\"editButton\")}</PublicText>\n                </Button>\n            )}\n            {onShare && (\n                <Button onClick={onShare}>\n                    <ShareIcon size=\"sm\" />\n                    <PublicText>{t(\"shareButton\")}</PublicText>\n                </Button>\n            )}\n        </Flex>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"heading\", function SidePanelRatingRevieweeListHeader({ label, denominator, title, percentage, count, total, ...rest } : SidePanelRatingRevieweeListHeaderProps) {\n    const { t } = useTranslation(\"sidePanelRatingRevieweeListHeader\");\n\n    return (\n        <Flex direction=\"column\" paddingLeft=\"inset-md\" {...rest}>\n            <Flex alignItems=\"baseline\">\n                <Heading size=\"lg\" marginBottom={0}>{label}</Heading>\n                <Text color=\"neutral-weak\">&nbsp;/ {denominator}</Text>\n            </Flex>\n            <PublicText color=\"neutral-weak\">{title}</PublicText>\n            <Flex marginTop=\"stack-sm\">\n                <Text color=\"neutral-weak\">\n                    <PublicTrans\n                        t={t}\n                        i18nKey=\"breakdown\"\n                        values={{ reviewees: count, count: total, percentage }}\n                        components={{\n                            bold: <Text fontWeight=\"body-md-semibold\" color=\"neutral\" />\n                        }}\n                    />\n                </Text>\n            </Flex>\n        </Flex>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"heading\", function SidePanelRatingReviewHeaderLoadingState() {\n    const keys = Array.from({ length: 6 }, () => uuidv4());\n\n    return (\n        <Stack gap=\"stack-sm\" paddingLeft=\"inset-md\">\n            <Skeleton width=\"13.75rem\" height=\"1.5rem\" />\n            <Flex alignItems=\"center\" gap=\"inline-sm\">\n                {keys.map(key => (\n                    <AvatarSkeleton key={key} />\n                ))}\n            </Flex>\n        </Stack>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"icon\", forwardRef<SVGSVGElement>((props, ref) => {\n    return (\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props} ref={ref}>\n            <g id=\"Property 1=Large 2\">\n                <g id=\"Vector\">\n                    <path d=\"M15 11C14.4477 11 14 11.4477 14 12C14 12.5523 14.4477 13 15 13H21C21.5523 13 22 12.5523 22 12C22 11.4477 21.5523 11 21 11H15Z\" fill=\"#3C3C3C\" />\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6 23V26C6 27.1046 6.89543 28 8 28H24C25.1046 28 26 27.1046 26 26V6C26 4.89543 25.1046 4 24 4H8C6.89543 4 6 4.89543 6 6V9H5C4.44772 9 4 9.44772 4 10C4 10.5523 4.44772 11 5 11H6V15H5C4.44772 15 4 15.4477 4 16C4 16.5523 4.44772 17 5 17H6V21H5C4.44772 21 4 21.4477 4 22C4 22.5523 4.44772 23 5 23H6ZM24 6H8V9H9C9.55228 9 10 9.44772 10 10C10 10.5523 9.55228 11 9 11H8V15H9C9.55228 15 10 15.4477 10 16C10 16.5523 9.55228 17 9 17H8V21H9C9.55228 21 10 21.4477 10 22C10 22.5523 9.55228 23 9 23H8V26L24 26V6Z\" fill=\"#3C3C3C\" />\n                    <path d=\"M15 15C14.4477 15 14 15.4477 14 16C14 16.5523 14.4477 17 15 17H21C21.5523 17 22 16.5523 22 16C22 15.4477 21.5523 15 21 15H15Z\" fill=\"#3C3C3C\" />\n                    <path d=\"M15 19C14.4477 19 14 19.4477 14 20C14 20.5523 14.4477 21 15 21H21C21.5523 21 22 20.5523 22 20C22 19.4477 21.5523 19 21 19H15Z\" fill=\"#3C3C3C\" />\n                    <path d=\"M12 11C11.4477 11 11 11.4477 11 12C11 12.5523 11.4477 13 12 13C12.5523 13 13 12.5523 13 12C13 11.4477 12.5523 11 12 11Z\" fill=\"#3C3C3C\" />\n                    <path d=\"M12 15C11.4477 15 11 15.4477 11 16C11 16.5523 11.4477 17 12 17C12.5523 17 13 16.5523 13 16C13 15.4477 12.5523 15 12 15Z\" fill=\"#3C3C3C\" />\n                    <path d=\"M12 19C11.4477 19 11 19.4477 11 20C11 20.5523 11.4477 21 12 21C12.5523 21 13 20.5523 13 20C13 19.4477 12.5523 19 12 19Z\" fill=\"#3C3C3C\" />\n                </g>\n            </g>\n        </svg>\n    );\n}))": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"side-panel\", function ManagerReviewSidePanel({ review, summaryForManager, peers, reviewCycleTitle, answerIdentities, ...rest }: ManagerReviewSidePanelProps) {\n    const { t } = useTranslation(\"managerReviewSidePanel\");\n\n    const [selectedReviewer, setSelectedReviewer] = useState<MemberIdentity | null>(null);\n    const isMobile = useResponsiveValue({ base: true, xs: false });\n    const isTablet = useResponsiveValue({ base: true, md: false });\n\n    const { toDisplayName } = useMemberDisplayName();\n    const {\n        isSidePanelOpen,\n        openSidePanel,\n        closeSidePanel,\n        selectedQuestionId,\n        setSelectedQuestionId,\n        clearQuestionSelection,\n        selectedSidePanelTab,\n        setSelectedSidePanelTab,\n        setIsScrollingToSelectedQuestion\n    } = useReviewSidePanelContext();\n    const sections = useReviewSection(review, QuestionDetailsToInclude.InOrderOfManagerPeerSelfReviewType);\n\n    const isSummaryButtonActive = isSidePanelOpen && selectedSidePanelTab === SidePanelTabs.Summary;\n    const isReviewsButtonActive = isSidePanelOpen && (selectedSidePanelTab === SidePanelTabs.Reviews || selectedSidePanelTab === SidePanelTabs.ReviewsFromSummary);\n\n    const isSelfReviewCompleted = review.responses.some(r => r.type === ReviewType.Self);\n    const peersWithReview = peers.filter(peer => {\n        return review.responses\n            .filter(r => r.type === ReviewType.Peer)\n            .some(r => r.sections.flatMap(s => s.questions).some(q => q.answer?.editedById === peer.memberId));\n    });\n    const hasReviews = isSelfReviewCompleted || peersWithReview.length > 0;\n\n    const reviewee = review.revieweeMemberReviewStatus.memberIdentity as MemberIdentity;\n\n    const reviews = [\n        { identity: reviewee, reviewType: ReviewType.Self },\n        ...peersWithReview.map(peer => ({ identity: peer, reviewType: ReviewType.Peer }))\n    ];\n\n    const availableQuestionsWithSummary: Question[] = useMemo(() => {\n        const questions: Question[] = summaryForManager\n            ? sections\n                .flatMap(s => s.questions)\n                // q.title should never be undefined\n                .map((q, index) => ({ id: q.questionId, title: q.title || null, index: index + 1 }))\n                .filter(q => summaryForManager.questionSummaries.some(qs => qs.questionId === q.id))\n            : [];\n\n        questions.unshift(allQuestions);\n\n        return questions;\n    }, [summaryForManager, sections]);\n\n    const selectedQuestion = selectedQuestionId ? availableQuestionsWithSummary.find(q => q.id === selectedQuestionId) ?? allQuestions : allQuestions;\n\n    function handleOnCloseSidePanel() {\n        setSelectedSidePanelTab(SidePanelTabs.Summary);\n        clearQuestionSelection();\n        closeSidePanel();\n    }\n\n    function handleOnSourcesButtonClick() {\n        if (selectedQuestion.id === allQuestions.id) {\n            clearQuestionSelection();\n        } else {\n            setSelectedQuestionId(selectedQuestion.id);\n        }\n\n        setIsScrollingToSelectedQuestion(false);\n        setSelectedSidePanelTab(SidePanelTabs.ReviewsFromSummary);\n    }\n\n    function handleOnSummaryButtonClick() {\n        if (isSummaryButtonActive) {\n            closeSidePanel();\n        } else {\n            openSidePanel(SidePanelTabs.Summary);\n            setSelectedSidePanelTab(SidePanelTabs.Summary);\n        }\n    }\n\n    function handleOnReviewButtonClick() {\n        if (isReviewsButtonActive) {\n            closeSidePanel();\n        } else {\n            setIsScrollingToSelectedQuestion(false);\n            openSidePanel(SidePanelTabs.Reviews);\n            setSelectedSidePanelTab(SidePanelTabs.Reviews);\n        }\n    }\n\n    function renderHeader() {\n        if (selectedSidePanelTab === SidePanelTabs.Summary) {\n            return (\n                <SidePanelSummaryHeader\n                    reviewCycleTitle={reviewCycleTitle}\n                    revieweeDisplayName={toDisplayName(reviewee)}\n                    questionSummaryContent={summaryForManager?.questionSummaries.find(qs => qs.questionId === selectedQuestion.id)?.summary.content ?? summaryForManager?.globalSummary.content}\n                />\n            ) ;\n        }\n\n        return (\n            <SidePanelRatingReviewHeader\n                reviewsCount={reviews.length}\n                reviewee={reviewee}\n                onBackClick={selectedSidePanelTab === SidePanelTabs.ReviewsFromSummary ? () => setSelectedSidePanelTab(SidePanelTabs.Summary) : undefined}\n            />\n        );\n    }\n\n    function renderHeaderStickySection() {\n        if (selectedSidePanelTab === SidePanelTabs.Summary) {\n            return (\n                <SidePanelSummaryHeaderStickySection\n                    availableQuestions={availableQuestionsWithSummary}\n                    selectedQuestion={selectedQuestion}\n                    onChange={q => setSelectedQuestionId(q.id)}\n                />\n            ) ;\n        }\n\n        const hideHeader = !isTablet && reviews.length <= 1;\n        const uniqueReviewers = getUniqueReviewers(reviews);\n\n        if (!hideHeader && uniqueReviewers.length > 1) {\n            return (\n                <SidePanelRatingReviewHeaderStickySection\n                    uniqueReviewers={uniqueReviewers}\n                    activeReviewer={selectedReviewer}\n                    onReviewerChange={setSelectedReviewer}\n                    onBackClick={selectedSidePanelTab === SidePanelTabs.ReviewsFromSummary ? () => setSelectedSidePanelTab(SidePanelTabs.Summary) : undefined}\n                />\n            );\n        }\n\n        return null;\n    }\n\n    function renderContent() {\n        if (selectedSidePanelTab === SidePanelTabs.Summary) {\n            if (!summaryForManager) {\n                return <SidePanelSummaryEmptyState />;\n            }\n\n            return (\n                <SidePanelSummary\n                    selectedQuestion={selectedQuestion}\n                    questionSummary={summaryForManager.questionSummaries.find(qs => qs.questionId === selectedQuestion.id)?.summary ?? summaryForManager.globalSummary}\n                    onSourcesButtonClick={handleOnSourcesButtonClick}\n                    answerIdentities={answerIdentities}\n                />\n            );\n        }\n\n        if (!hasReviews) {\n            return <SidePanelRatingReviewEmptyState revieweeDisplayName={toDisplayName(reviewee)} />;\n        }\n\n        return (\n            <SidePanelReview\n                review={review}\n                reviewer={selectedReviewer}\n                excludedReviewTypes={[ReviewType.Manager]}\n                answerIdentities={answerIdentities}\n            />\n        );\n    }\n\n    return (\n        <SidePanel show={isSidePanelOpen} onClose={handleOnCloseSidePanel} overlayInTablet showCollapseInHeaderMobile {...rest}>\n            {renderHeader()}\n            {renderHeaderStickySection()}\n            <Content>\n                {renderContent()}\n            </Content>\n            <Flex slot=\"collapse\" direction={{ base: \"row\", xs: \"column\" }} gap={{ base: \"inline-sm\", xs: \"inline-xs\" }} alignItems=\"center\">\n                {isMobile ? (\n                    <>\n                        <PublicToggleButton\n                            variant=\"tertiary\"\n                            size=\"sm\"\n                            padding=\"inset-xs\"\n                            textDecoration=\"none\"\n                            onClick={handleOnSummaryButtonClick}\n                            checked={isSummaryButtonActive}\n                            data-testid=\"side-panel-summary-trigger\"\n                        >\n                            <SummaryIcon />\n                            <Text>{t(\"summaries\")}</Text>\n                        </PublicToggleButton>\n                        <PublicToggleButton\n                            variant=\"tertiary\"\n                            size=\"sm\"\n                            padding=\"inset-xs\"\n                            textDecoration=\"none\"\n                            onClick={handleOnReviewButtonClick}\n                            data-testid=\"side-panel-review-trigger\"\n                            checked={isReviewsButtonActive}\n                        >\n                            <ReviewIcon />\n                            <Text>{t(\"reviews\")}</Text>\n                        </PublicToggleButton>\n                    </>\n                ) : (\n                    <>\n                        <ToggleIconButton\n                            minWidth=\"3rem\"\n                            minHeight=\"3rem\"\n                            variant=\"tertiary\"\n                            aria-label={t(\"summaries\")}\n                            onClick={handleOnSummaryButtonClick}\n                            checked={isSummaryButtonActive}\n                            data-testid=\"side-panel-summary-trigger\"\n                        >\n                            <SummaryIcon />\n                        </ToggleIconButton>\n                        <ToggleIconButton\n                            minWidth=\"3rem\"\n                            minHeight=\"3rem\"\n                            variant=\"tertiary\"\n                            aria-label={t(\"reviews\")}\n                            onClick={handleOnReviewButtonClick}\n                            data-testid=\"side-panel-review-trigger\"\n                            checked={isReviewsButtonActive}\n                        >\n                            <ReviewIcon />\n                        </ToggleIconButton>\n                    </>\n                )}\n            </Flex>\n        </SidePanel>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"textEditorActions\", function TextEditorActions({ children }: TextEditorActionsProps) {\n    return children;\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"search\", function FilterSearch({ value, onValueChange, placeholder, autoFocus = false, ...rest }: FilterSearchProps) {\n    return (\n        <Div {...rest}>\n            <TextInput\n                value={value}\n                autoFocus={autoFocus}\n                fluid\n                icon={<SearchIcon color=\"neutral-weakest\" />}\n                placeholder={placeholder}\n                onValueChange={onValueChange}\n                size=\"sm\"\n            />\n        </Div>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"tag\", function AutoSaveTag({ savedDate, isSaving, hasError }: AutoSaveProps) {\n    const { t, i18n } = useComponentsTranslation(\"autoSaveTag\");\n    const isMobile = useResponsiveValue({ base: true, xs: false });\n\n    const styleProps: Partial<FlexProps> = {\n        paddingLeft: \"inset-sm\",\n        paddingRight: \"inset-sm\",\n        color: \"neutral-weak\",\n        gap: \"inline-xs\",\n        alignItems: \"center\"\n    };\n\n    if (isMobile) {\n        return null;\n    }\n\n    if (isSaving) {\n        return (\n            <Flex {...styleProps}>\n                <Text>\n                    <Flex alignItems=\"center\" gap=\"inline-xs\">\n                        <Spinner aria-label=\"\" size=\"sm\" className={styles.spinner} />\n                        <PublicText>{t(\"savingChanges\")}</PublicText>\n                    </Flex>\n                </Text>\n            </Flex>\n        );\n    }\n\n    if (hasError) {\n        return (\n            <TooltipTrigger disabled={!savedDate}>\n                <Flex {...styleProps} data-testid=\"auto-save-tag\">\n                    <WarningIcon size=\"sm\" />\n                    <PublicText>{t(\"error\")}</PublicText>\n                </Flex>\n                <PublicTooltip>{t(\"lastSavedTooltip\", { date: toTimeFormat(savedDate!, i18n.language) })}</PublicTooltip>\n            </TooltipTrigger>\n        );\n    }\n\n    if (!savedDate) {\n        return null;\n    }\n\n    return (\n        <TooltipTrigger>\n            <Flex {...styleProps} data-testid=\"auto-save-tag\">\n                <CheckmarkIcon size=\"sm\" />\n                <PublicText>{t(\"saved\")}</PublicText>\n            </Flex>\n            <PublicTooltip>{t(\"lastSavedTooltip\", { date: toTimeFormat(savedDate, i18n.language) })}</PublicTooltip>\n        </TooltipTrigger>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"heading\", function SidePanelRatingReviewHeader({ reviewsCount, onBackClick, onOpenReviewClick, reviewee, ...rest }: SidePanelRatingReviewHeaderProps) {\n    const { t } = useTranslation(\"sidePanelRatingReviewHeader\");\n    const { toDisplayName } = useMemberDisplayName();\n\n    return (\n        <Flex direction=\"column\" gap=\"stack-sm\" {...rest}>\n            <Flex gap=\"inline-xs\">\n                {onBackClick && (\n                    <IconButton variant=\"tertiary\" onClick={onBackClick} aria-label={t(\"back\")}>\n                        <AngleLeftIcon />\n                    </IconButton>\n                )}\n                <Heading size=\"lg\" marginBottom=\"0\" paddingTop=\"inset-xs\" paddingLeft={onBackClick ? undefined : \"inset-md\"}>\n                    <PublicTrans t={t} i18nKey=\"heading\" values={{ name: toDisplayName(reviewee), count: reviewsCount }} />\n                </Heading>\n                {onOpenReviewClick && (\n                    <TooltipTrigger>\n                        <IconButton variant=\"tertiary\" onClick={onOpenReviewClick} aria-label={t(\"openDetails\", { name: toDisplayName(reviewee) })}>\n                            <NewTabIcon />\n                        </IconButton>\n                        <Tooltip>\n                            <PublicTrans>\n                                {t(\"openDetailsTooltip\", { name: toDisplayName(reviewee) })}\n                            </PublicTrans>\n                        </Tooltip>\n                    </TooltipTrigger>\n                )}\n            </Flex>\n        </Flex>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"headingStickySection\", function SidePanelRatingReviewHeaderStickySection({ activeReviewer, uniqueReviewers, onBackClick, onReviewerChange, ...rest }: SidePanelRatingReviewHeaderStickySectionProps) {\n    const { t } = useTranslation(\"sidePanelRatingReviewHeader\");\n    const { toDisplayName } = useMemberDisplayName();\n\n    return (\n        <Div\n            {...rest}\n        >\n            <SlidingWindow\n                paddingLeft={onBackClick ? \"1.75rem\" : 0}\n            >\n                <Flex gap=\"inline-sm\">\n                    {uniqueReviewers.length > 1 && (\n                        <TooltipTrigger position=\"bottom-start\">\n                            <Div>\n                                <AvatarShape\n                                    active={!activeReviewer}\n                                    onClick={() => onReviewerChange(null)}\n                                    size=\"md\"\n                                    aria-label={t(\"allLabel\")}\n                                    expandWidthAfterCharactersCount={3}\n                                >\n                                    {t(\"allLabel\")}\n                                </AvatarShape>\n                            </Div>\n                            <PublicTooltip>{t(\"allTooltip\")}</PublicTooltip>\n                        </TooltipTrigger>\n                    )}\n                    {uniqueReviewers.map(({ identity, reviewTypes }) => (\n                        <TooltipTrigger position=\"bottom-start\" key={identity.memberId}>\n                            <Div>\n                                <AvatarButton\n                                    data-private\n                                    name={toDisplayName(identity)}\n                                    src={identity.imageUrl ?? \"\"}\n                                    onClick={() => onReviewerChange(identity)}\n                                    active={activeReviewer?.memberId === identity.memberId}\n                                />\n                            </Div>\n                            <Tooltip>\n                                <PublicTrans>\n                                    {t(`${reviewTypes.length > 1 ? \"Reviews\" : reviewTypes[0]}Tooltip`, { name: toDisplayName(identity) })}\n                                </PublicTrans>\n                            </Tooltip>\n                        </TooltipTrigger>\n                    ))}\n                </Flex>\n            </SlidingWindow>\n        </Div>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"heading\", function SidePanelRatingRevieweeListHeaderLoadingState() {\n    return (\n        <Stack gap=\"stack-md\" paddingLeft=\"inset-md\">\n            <AvatarSkeleton />\n            <Skeleton width=\"15.625rem\" height=\"0.75rem\" />\n            <Skeleton width=\"10rem\" height=\"0.75rem\" />\n        </Stack>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"icon\", function Checkbox({ state }: CheckboxProps) {\n    const labelClassNames = classNames(\"o-ui-checkbox\", \"o-ui-checkbox-sm\", `o-ui-checkbox-${state}`);\n\n    function renderIcon() {\n        switch (state) {\n            case CheckboxState.Checked:\n                return <CheckmarkIcon size=\"sm\" className=\"o-ui-checkbox-checkmark\" />;\n            case CheckboxState.Indeterminate:\n                return <MinusIcon size=\"sm\" className=\"o-ui-checkbox-checkmark\" />;\n            default:\n                return null;\n        }\n    }\n\n    return (\n        <Label className={labelClassNames} marginRight=\"inline-sm\">\n            <Span className=\"o-ui-checkbox-box\">\n                {renderIcon()}\n            </Span>\n        </Label>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"icon\", forwardRef<SVGSVGElement>((props, ref) => {\n    return (\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props} ref={ref}>\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M18.0914 22.6667C17.5845 22.6667 17.0965 22.8592 16.7261 23.2052L12 27.6202V24.6667C12 23.5622 11.1046 22.6667 10 22.6667C7.79086 22.6667 6 20.8759 6 18.6667V12.6667C6 10.4576 7.79086 8.66675 10 8.66675H22C24.2091 8.66675 26 10.4576 26 12.6667V18.6667C26 20.8759 24.2091 22.6667 22 22.6667H18.0914ZM22 24.6667H18.0914L12.9874 29.4347C11.885 30.4645 10 29.7351 10 28.2787V24.6667C6.68629 24.6667 4 21.9805 4 18.6667V12.6667C4 9.35304 6.68629 6.66675 10 6.66675H22C25.3137 6.66675 28 9.35304 28 12.6667V18.6667C28 21.9805 25.3137 24.6667 22 24.6667Z\" fill=\"#3C3C3C\" />\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M16.8112 10.811C16.6587 10.4888 16.344 10.2849 15.9993 10.2849C15.6547 10.2849 15.34 10.4888 15.1875 10.811L14.0298 13.256L11.4412 13.6481C11.1002 13.6998 10.8168 13.9487 10.7104 14.2904C10.6039 14.632 10.6927 15.007 10.9394 15.2578L12.8126 17.161L12.3704 19.8484C12.3121 20.2024 12.4518 20.5602 12.7306 20.7713C13.0094 20.9825 13.379 21.0103 13.684 20.8432L15.9993 19.5744L18.3147 20.8432C18.6197 21.0103 18.9893 20.9825 19.2681 20.7713C19.5469 20.5602 19.6865 20.2024 19.6283 19.8484L19.1861 17.161L21.0593 15.2578C21.306 15.007 21.3948 14.632 21.2883 14.2904C21.1819 13.9487 20.8985 13.6998 20.5575 13.6481L17.9689 13.256L16.8112 10.811ZM15.4429 14.5362L15.9993 13.3609L16.5558 14.5362C16.6877 14.8147 16.9426 15.0078 17.2375 15.0525L18.4818 15.2409L17.5814 16.1557C17.368 16.3725 17.2706 16.6849 17.321 16.991L17.5336 18.2828L16.4206 17.6729C16.1569 17.5284 15.8418 17.5284 15.5781 17.6729L14.4651 18.2828L14.6777 16.991C14.7281 16.6849 14.6307 16.3725 14.4173 16.1557L13.5169 15.2409L14.7612 15.0525C15.0561 15.0078 15.311 14.8147 15.4429 14.5362Z\" fill=\"#3C3C3C\" />\n        </svg>\n    );\n}))": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "slot(\"lozenge\", forwardRef<HTMLDivElement, StatusIndicatorTagProps>(\n    function StatusIndicatorTag(props, ref) {\n        const { t } = useTranslation(\"users\");\n\n        const indicatorLabel = t(\n            getIndicatorLabelTranslationKey(props.status)\n        );\n\n        return (\n            <Lozenge\n                {...indicatorStyles[props.status]}\n                ref={ref}\n                {...props}\n            >\n                {indicatorLabel}\n            </Lozenge>\n        );\n    }\n))": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "slot(\"lozenge\", forwardRef<HTMLDivElement, ProvisioningStatusTagProps>((props, ref) => {\n    const { t } = useTranslation(\"provisioning\");\n    const tagLabel = t(getTagLabelTranslationKey(props.status));\n\n    return (\n        <Tag {...tagStyles[props.status]} ref={ref} {...props} border=\"transparent\">\n            {tagLabel}\n        </Tag>\n    );\n}))": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "slot(\"page-actions\", () => {\n    const { t } = useTranslation(\"teams\");\n    const params = useParams();\n    const userId = params.userId!;\n    const { data: policies } = useGetPoliciesQuery();\n    const session = useSession();\n    const canEditTeamMembership = Permissions.CanEditTeamMembership(session, policies);\n\n    if (!canEditTeamMembership) {\n        return null;\n    }\n\n    return (\n        <ModalTrigger>\n            <Button variant=\"primary\">\n                <PlusIcon />\n                <Text>{t(\"teamTab.assignToTeam\")}</Text>\n            </Button>\n            <AssignToTeamModal userId={userId} />\n        </ModalTrigger>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "slot(\"page-actions\", () => {\n    const { t } = useTranslation(\"users\");\n    const { user } = useUserSettingsLayoutContext();\n    const params = useParams();\n    const userId = params.userId!;\n    const userStatus = getMemberStatus(user.status);\n    const toast = useToast();\n\n    const productsAssignation = useGetMemberProductsAssignationQuery(userId);\n    const { mutate: reactivateMemberMutate, isPending: isReactivatePending } = useReactivateMemberCommand();\n    const { mutate: inviteMemberMutate, isPending: isInvitePending } = useInviteMemberCommand();\n    const navigate = useNavigate();\n\n    const hasProductsAssigned = productsAssignation?.assignedProducts?.length > 0;\n\n    const handleDeleteSuccess = () => {\n        toast.success(t(\"profile.deleteUserSuccessMessage\"), { durationInMs: toastDuration.md });\n        navigate(UserRoutes.Users({ activeUsersOnly: true }));\n    };\n\n    const handleDeleteError = () => {\n        toast.error(t(\"profile.deleteUserErrorMessage\"), { durationInMs: toastDuration.md });\n    };\n\n    const handleReactivate = () => {\n        reactivateMemberMutate(\n            userId,\n            {\n                onSuccess: () => { toast.success(t(\"profile.reactivateUserSuccessMessage\"), { durationInMs: toastDuration.md }); },\n                onError: () => { toast.error(t(\"profile.reactivateUserErrorMessage\"), { durationInMs: toastDuration.md }); }\n            });\n    };\n\n    const handleInvite = () => {\n        inviteMemberMutate(\n            { memberId: userId },\n            {\n                onSuccess: () => { toast.success(t(\"profile.inviteUserSuccessMessage\"), { durationInMs: toastDuration.md }); },\n                onError: () => { toast.error(t(\"profile.inviteUserErrorMessage\"), { durationInMs: toastDuration.md }); }\n            }\n        );\n    };\n\n    const handleReinvite = () => {\n        inviteMemberMutate(\n            { memberId: userId },\n            {\n                onSuccess: () => { toast.success(t(\"profile.reinviteUserSuccessMessage\"), { durationInMs: toastDuration.md }); },\n                onError: () => { toast.error(t(\"profile.reinviteUserErrorMessage\"), { durationInMs: toastDuration.md }); }\n            }\n        );\n    };\n\n    return (\n        <>\n            {userStatus && {\n                [MemberStatus.Active]: (\n                    <ModalTrigger>\n                        <Button fluid={{ base: true, sm: false }} variant=\"secondary\">\n                            <Text>{t(\"actions.deactivate\")}</Text>\n                        </Button>\n                        <DeactivateUserModal userId={userId} />\n                    </ModalTrigger>\n                ),\n                [MemberStatus.Created]: (\n                    <TooltipTrigger disabled={hasProductsAssigned}>\n                        <Button disabled={!hasProductsAssigned} onClick={handleInvite} loading={isInvitePending} fluid={{ base: true, sm: false }} variant=\"secondary\">\n                            <Text>{t(\"actions.invite\")}</Text>\n                        </Button>\n                        <Tooltip width=\"17.625rem\">\n                            <Div textAlign=\"center\">{t(\"actions.userMustHaveProductAssigned\")}</Div>\n                        </Tooltip>\n                    </TooltipTrigger>\n                ),\n                [MemberStatus.Deactivated]: (\n                    <Button onClick={handleReactivate} loading={isReactivatePending} fluid={{ base: true, sm: false }} variant=\"secondary\">\n                        <Text>{t(\"actions.reactivate\")}</Text>\n                    </Button>\n                ),\n                [MemberStatus.Pending]: (\n                    <TooltipTrigger disabled={hasProductsAssigned}>\n                        <Button disabled={!hasProductsAssigned} onClick={handleReinvite} loading={isInvitePending} fluid={{ base: true, sm: false }} variant=\"secondary\">\n                            <Text>{t(\"actions.sendInviteReminder\")}</Text>\n                        </Button>\n                        <Tooltip width=\"17.625rem\">\n                            <Div textAlign=\"center\">{t(\"actions.userMustHaveProductAssigned\")}</Div>\n                        </Tooltip>\n                    </TooltipTrigger>\n                )\n            }[userStatus]}\n            <ModalTrigger>\n                <Button fluid={{ base: true, sm: false }} variant=\"negative\">\n                    <Text>{t(\"actions.delete\")}</Text>\n                </Button>\n                <DeleteUserModal onSuccess={handleDeleteSuccess} onError={handleDeleteError} userId={userId} />\n            </ModalTrigger>\n        </>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "slot(\"lozenge\", forwardRef<HTMLDivElement, InvoiceStatusIndicatorTagProps>(function InvoiceStatusIndicatorTag(props, ref) {\n    const { t } = useTranslation(\"billing\");\n\n    const indicatorLabel = t(getIndicatorLabelTranslationKey(props.status));\n\n    return <Lozenge {...getIndicatorStyle(props.status)} ref={ref} {...props}>{indicatorLabel}</Lozenge>;\n}))": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "slot(\"lozenge\", forwardRef<HTMLDivElement, ConnectionStatusTagProps>((props, ref) => {\n    const { status } = props;\n    const { t } = useTranslation(\"integrations\");\n\n    return (\n        <Div>\n            <TooltipTrigger>\n                <Div>\n                    <Tag ref={ref} {...tagStyles[status]} size=\"sm\" paddingX=\"inset-sm\">{t(getTagLabelTranslationKey(status))}</Tag>\n                </Div>\n                <Tooltip>{t(getTooltipLabelTranslationKey(status))}</Tooltip>\n            </TooltipTrigger>\n        </Div>\n    );\n}))": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "slot(\"lozenge\", forwardRef<HTMLDivElement, IntegrationStatusTagProps>(({ status, size, ...props }, ref) => {\n    const { t } = useTranslation(\"integrations\", { keyPrefix: \"integrationStatusTag\" });\n\n    return <Tag size={size || \"md\"} {...tagStyles[status]} ref={ref} {...props}>{t(getTagLabelTranslationKey(status))}</Tag>;\n}))": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "slot(\"overflow-breadcrumbs\", InnerOverflowBreadcrumbs)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "slot(\"page-footer\", (\n    {\n        handleSaveForm,\n        handlePreventNavigationModalOnDiscard,\n        disableSaveForm,\n        shouldForceOpenPreventNavigationModalOnCancel,\n        loading\n    }: EditFooterProps) => {\n    const { t } = useTranslation(\"components\");\n    const [isBlockerDisabled, setIsBlockerDisabled] = useState(false);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const onCancelForm = useCallback(() => {\n        if (shouldForceOpenPreventNavigationModalOnCancel) {\n            setIsModalOpen(true);\n        } else {\n            setIsBlockerDisabled(true);\n            // This is necessary to force a rerender such that the isBlockerdisabled variable is set to true\n            // and the blocker does not prevent navigation away from the page\n            setTimeout(handlePreventNavigationModalOnDiscard, 0);\n        }\n    }, [handlePreventNavigationModalOnDiscard, shouldForceOpenPreventNavigationModalOnCancel]);\n\n    const onSaveForm = useCallback(() => {\n        if (!shouldForceOpenPreventNavigationModalOnCancel) {\n            setIsBlockerDisabled(true);\n        }\n        handleSaveForm?.();\n    }, [handleSaveForm, shouldForceOpenPreventNavigationModalOnCancel]);\n\n    const onCloseModal = useCallback(() => {\n        if (shouldForceOpenPreventNavigationModalOnCancel) {\n            setIsModalOpen(false);\n        }\n    }, [shouldForceOpenPreventNavigationModalOnCancel]);\n\n    return (\n        <PageFooter>\n            <ButtonGroup align={{ md: \"end\" }} width=\"100%\" orientation=\"horizontal\" style={{ justifyContent:\"flex-end\" }}>\n                <PreventNavigationModal\n                    isDisabled={isBlockerDisabled}\n                    shouldForceOpen={isModalOpen}\n                    onDiscard={handlePreventNavigationModalOnDiscard}\n                    onClose={onCloseModal}\n                />\n                <Button type=\"reset\" disabled={loading} variant=\"secondary\" onClick={onCancelForm}>{t(\"editFooter.cancel\")}</Button>\n                <Button type=\"submit\" onClick={onSaveForm} disabled={disableSaveForm} loading={loading}>{t(\"editFooter.save\")}</Button>\n            </ButtonGroup>\n        </PageFooter>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "slot(\"page-footer\", ({\n    className\n}: FormFooterProps) => {\n    const { t } = useTranslation(\"FormFooter\") ;\n    const { formCallbacks, isDirty = false, isSaveDisabled = false, isLoading = false } = useFormContext();\n\n    return isDirty ? (\n        <PageFooter className={className}>\n            <PreventNavigationModal\n                isDisabled={isLoading}\n                onDiscard={formCallbacks.onDiscard}\n            />\n            <ButtonGroup\n                align={{ md: \"end\" }}\n                width=\"100%\"\n                orientation={{ base: \"vertical\", md: \"horizontal\" }}\n                fluid={{ base: true, md: false }}\n            >\n                <Button\n                    onClick={formCallbacks.onDiscard}\n                    disabled={isLoading}\n                    variant=\"secondary\"\n                >\n                    {t(\"cancel\")}\n                </Button>\n                <Button\n                    onClick={formCallbacks.onSave}\n                    disabled={isSaveDisabled || isLoading}\n                    loading={isLoading}\n                >\n                    {t(\"save\")}\n                </Button>\n            </ButtonGroup>\n        </PageFooter>\n    ) : null;\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Management Shell": 1
            }
          }
        },
        "slot(\"image\", forwardRef<SVGSVGElement, Omit<SvgImageProps, \"src\">>((props, ref) => {\n    return (\n        <Suspense fallback={<SvgImage ref={ref} {...props} />}>\n            <SvgImage ref={ref} {...props} src={src} />\n        </Suspense>\n    );\n}))": {
          "usage": {
            "total": 1,
            "projects": {
              "Management Shell": 1
            }
          }
        },
        "slot(\"page-actions\", () => {\n    const { user } = useUserSettingsLayoutContext();\n\n    return (\n        <PageActions>\n            <Button variant=\"secondary\">{user.status === \"Deactivated\" ? \"Delete User\" : \"Deactivate User\"}</Button>\n        </PageActions>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Management Shell": 1
            }
          }
        },
        "slot(\"actions\", function ConnectionActions({ children }: PropsWithChildren) {\n    return children;\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "AI": 1
            }
          }
        },
        "slot(\"content\", function ConnectionContent({ children }: PropsWithChildren) {\n    return children;\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "AI": 1
            }
          }
        },
        "slot(\"footer\", function ConnectionFooter({ children }: PropsWithChildren) {\n    return children;\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "AI": 1
            }
          }
        },
        "slot(\"heading-icon\", ({ children }: PropsWithChildren) => {\n    return (\n        <Div\n            padding=\"inset-sm\"\n            backgroundColor=\"samoyed\"\n            borderRadius=\"circle\"\n            height=\"3rem\"\n            width=\"3rem\"\n        >\n            {children}\n        </Div>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "AI": 1
            }
          }
        },
        "slot(\"content\", ({ title, children, open, onOpenChange }: Props) => {\n    return (\n        <Div\n            border=\"neutral-weak\"\n            borderRadius=\"rounded-md\"\n            backgroundColor=\"samoyed\"\n        >\n            <Disclosure\n                onOpenChange={(_, newValue) => onOpenChange?.(newValue)}\n                open={open}\n            >\n                <Button\n                    padding=\"inset-md\"\n                    backgroundColor=\"samoyed\"\n                    backgroundColorHover=\"neutral-weakest\"\n                    justifyContent=\"space-between\"\n                    textDecoration=\"none\"\n                    width=\"100%\"\n                    variant=\"tertiary\"\n                    minHeight=\"4rem\"\n                    textAlign=\"left\"\n                    borderBottomLeftRadius={open ? \"0\" : \"rounded-md\"}\n                    borderBottomRightRadius={open ? \"0\" : \"rounded-md\"}\n                    gap=\"inline-md\"\n                >\n                    {typeof title === \"string\" ?\n                        <Heading\n                            margin=\"0\"\n                            size=\"sm\"\n                            fontWeight=\"heading-sm\"\n                            lineHeight={1.5}\n                            slot=\"text\"\n                        >\n                            {title}\n                        </Heading>\n                        : title\n                    }\n                    <DisclosureArrow slot=\"end-icon\" />\n                </Button>\n                <Div\n                    padding=\"0\"\n                    overflow=\"hidden\"\n                >\n                    {children}\n                </Div>\n            </Disclosure>\n        </Div>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "AI": 1
            }
          }
        },
        "slot(\"tag\", () => {\n    const { t } = useTranslation(\"settings\");\n\n    return (\n        <Tag\n            size=\"sm\"\n            marginLeft=\"inline-sm\"\n            style={{\n                backgroundColor: \"var(--hop-neutral-surface-strong)\",\n                color: \"var(--hop-primary-text-strong)\",\n                border: \"1px transparent\"\n            }}\n        >\n            <Text fontFamily=\"tertiary\" textTransform=\"uppercase\">{t(\"header.new\")}</Text>\n        </Tag>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "AI": 1
            }
          }
        },
        "slot(\"tag\", () => {\n    const { t } = useTranslation(\"settings\");\n\n    return (\n        <Tag\n            size=\"sm\"\n            marginLeft=\"inline-sm\"\n            style={{\n                backgroundColor: \"var(--hop-neutral-surface-strong)\",\n                color: \"var(--hop-primary-text-strong)\",\n                border: \"1px transparent\"\n            }}\n        >\n            <Text fontFamily=\"tertiary\" textTransform=\"uppercase\">{t(\"header.earlyAccess\")}</Text>\n        </Tag>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "AI": 1
            }
          }
        },
        "slot(\"button\", as(IconButtonAsLink, ReactRouterLink, { normalizeStyles: true }))": {
          "usage": {
            "total": 1,
            "projects": {
              "AI": 1
            }
          }
        },
        "slot(\"button\", forwardRef<HTMLAnchorElement, RouterButtonAsLinkProps>(({ children, ...rest }, ref) => {\n    const { icon, text } = useSlots(children, {\n        _: {\n            defaultWrapper: Text\n        },\n        icon: {},\n        text : {}\n    });\n\n    return (\n        <>\n            <RouterButtonAsLink ref={ref} {...rest} display={{ base: \"none\", xs: \"flex\" }}>{icon}{text}</RouterButtonAsLink>\n            <RouterIconButtonAsLink ref={ref} {...rest} display={{ base: \"flex\", xs: \"none\" }}>{icon}</RouterIconButtonAsLink>\n        </>\n    );\n}))": {
          "usage": {
            "total": 1,
            "projects": {
              "AI": 1
            }
          }
        },
        "slot(\"text\", ({ filesCount }: Props) => {\n    const { t } = useTranslation(\"freemium\");\n    const progressPercentage = Math.min((filesCount / MAX_FREEMIUM_FILES_COUNT) * 100, 100);\n    const isCompleted = filesCount === MAX_FREEMIUM_FILES_COUNT;\n\n    return (\n        <Flex\n            direction=\"column\"\n            gap=\"inline-sm\"\n            width=\"100%\"\n        >\n            <Flex gap=\"inline-sm\">\n                <FreemiumFilesTableProgressStatusIcon\n                    filesCount={filesCount}\n                    isCompleted={isCompleted}\n                />\n                <Heading size=\"sm\" marginBottom={0}>\n                    {t(\"files.filesCount\", { count: filesCount, max: MAX_FREEMIUM_FILES_COUNT })}\n                </Heading>\n            </Flex>\n            {filesCount > 0 &&\n                <Div\n                    width=\"100%\"\n                    height=\"var(--hop-space-80)\"\n                    backgroundColor=\"neutral-weak-press\"\n                    borderRadius=\"rounded-sm\"\n                >\n                    <Div\n                        width={`${progressPercentage}%`}\n                        height=\"100%\"\n                        backgroundColor={isCompleted ? \"var(--hop-status-caution-surface-strong)\" : \"primary-strong\"}\n                        borderRadius=\"rounded-sm\"\n                    />\n                </Div>\n            }\n            {isCompleted && <Text size=\"sm\">{t(\"files.upgrade\")}</Text>}\n        </Flex>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "AI": 1
            }
          }
        },
        "slot(\"footer\", ({ children }: PropsWithChildren) => {\n    return (\n        <Flex padding=\"inset-md\" borderTop=\"neutral-weak\" justifyContent=\"end\">\n            {children}\n        </Flex>\n    );\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "AI": 1
            }
          }
        }
      }
    },
    "useResponsiveValue": {
      "usage": {
        "total": 102,
        "projects": {
          "SG Protect": 3,
          "Performance": 81,
          "Management App": 13,
          "Management Shell": 3,
          "AI": 2
        }
      },
      "values": {
        "useResponsiveValue({ base: true, xs: false })": {
          "usage": {
            "total": 39,
            "projects": {
              "Performance": 39
            }
          }
        },
        "useResponsiveValue({ base: true, sm: false })": {
          "usage": {
            "total": 19,
            "projects": {
              "SG Protect": 1,
              "Performance": 14,
              "Management App": 2,
              "Management Shell": 2
            }
          }
        },
        "useResponsiveValue({ base: false, lg: true })": {
          "usage": {
            "total": 10,
            "projects": {
              "Performance": 10
            }
          }
        },
        "useResponsiveValue({ base: true, md: false })": {
          "usage": {
            "total": 8,
            "projects": {
              "Performance": 7,
              "Management App": 1
            }
          }
        },
        "useResponsiveValue(size)": {
          "usage": {
            "total": 3,
            "projects": {
              "Performance": 2,
              "Management App": 1
            }
          }
        },
        "useResponsiveValue(wrapProp)": {
          "usage": {
            "total": 3,
            "projects": {
              "SG Protect": 1,
              "Performance": 1,
              "Management Shell": 1
            }
          }
        },
        "useResponsiveValue({ base: false, md: true })": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 1,
              "Management App": 1
            }
          }
        },
        "useResponsiveValue(fluidProp)": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 1,
              "Management App": 1
            }
          }
        },
        "useResponsiveValue(dismissableProp)": {
          "usage": {
            "total": 2,
            "projects": {
              "Management App": 2
            }
          }
        },
        "useResponsiveValue({ base: \"md\", sm: \"lg\" })": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "useResponsiveValue({ base: false, xs: true, sm: false })": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useResponsiveValue({ base: false, sm: true, lg: false })": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useResponsiveValue({ base: false, md: isMemberView, lg: true })": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useResponsiveValue({ base: false, xs: true })": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useResponsiveValue({ md: true, lg: false })": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useResponsiveValue({ base: 1, md: 2 })": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useResponsiveValue(typeValue)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "useResponsiveValue(pageSizeValue)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "useResponsiveValue(isMobileNavigationValue)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "useResponsiveValue(wrap)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "useResponsiveValue(modalTitleProp)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "useResponsiveValue({\n    base: {\n        templateColumns: [\"0\", \"1fr\"],\n        isModal: true\n    },\n    lg: {\n        templateColumns: isSidePanelOpen ? [\"23.125rem\", \"1fr\"] : [\"0\", \"1fr\"],\n        isModal: false\n    }\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "AI": 1
            }
          }
        },
        "useResponsiveValue({\n    base: {\n        templateColumns: [\"1fr\", \"0\"],\n        isModal: true\n    },\n    lg: {\n        templateColumns: [\"1fr\", isSidePanelOpen ? \"25rem\" : \"0\"],\n        isModal: false\n    }\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "AI": 1
            }
          }
        }
      }
    },
    "as": {
      "usage": {
        "total": 59,
        "projects": {
          "SG Protect": 14,
          "Performance": 19,
          "Management App": 13,
          "Management Shell": 9,
          "AI": 4
        }
      },
      "values": {
        "as(OrbiterTable, ReactAriaTable)": {
          "usage": {
            "total": 4,
            "projects": {
              "SG Protect": 1,
              "Performance": 1,
              "Management App": 1,
              "Management Shell": 1
            }
          }
        },
        "as(OrbiterTD, ReactAriaCell)": {
          "usage": {
            "total": 4,
            "projects": {
              "SG Protect": 1,
              "Performance": 1,
              "Management App": 1,
              "Management Shell": 1
            }
          }
        },
        "as(OrbiterTBody, ReactAriaTableBody)": {
          "usage": {
            "total": 4,
            "projects": {
              "SG Protect": 1,
              "Performance": 1,
              "Management App": 1,
              "Management Shell": 1
            }
          }
        },
        "as(ButtonAsLink, ReactRouterLink, { normalizeStyles: true })": {
          "usage": {
            "total": 4,
            "projects": {
              "SG Protect": 1,
              "Performance": 1,
              "Management Shell": 1,
              "AI": 1
            }
          }
        },
        "as(OrbiterTableHeader, ReactAriaTableHeader)": {
          "usage": {
            "total": 3,
            "projects": {
              "SG Protect": 1,
              "Performance": 1,
              "Management App": 1
            }
          }
        },
        "as(OrbiterTR, ReactAriaRow)": {
          "usage": {
            "total": 3,
            "projects": {
              "SG Protect": 1,
              "Performance": 1,
              "Management App": 1
            }
          }
        },
        "as(Link, NavLink, { normalizeStyles: true })": {
          "usage": {
            "total": 3,
            "projects": {
              "SG Protect": 1,
              "Performance": 1,
              "Management Shell": 1
            }
          }
        },
        "as(TextLink, Link, { normalizeStyles: true })": {
          "usage": {
            "total": 3,
            "projects": {
              "SG Protect": 1,
              "Performance": 1,
              "Management Shell": 1
            }
          }
        },
        "as(Link, ReactRouterLink, { normalizeStyles: true })": {
          "usage": {
            "total": 3,
            "projects": {
              "SG Protect": 1,
              "Performance": 1,
              "Management Shell": 1
            }
          }
        },
        "as(IconLink, RALink)": {
          "usage": {
            "total": 2,
            "projects": {
              "SG Protect": 2
            }
          }
        },
        "as(Div, AriaProgressBar)": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 2
            }
          }
        },
        "as(IconButton, ReactAriaButton)": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 2
            }
          }
        },
        "as(InputGroup, Group)": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 1,
              "Management App": 1
            }
          }
        },
        "as(IconButton, Button)": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 1,
              "Management App": 1
            }
          }
        },
        "as(Form, Flex)": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 1,
              "Management Shell": 1
            }
          }
        },
        "as(TextLink, Link)": {
          "usage": {
            "total": 2,
            "projects": {
              "Management Shell": 1,
              "AI": 1
            }
          }
        },
        "as(IconButton, RACButton)": {
          "usage": {
            "total": 2,
            "projects": {
              "Management App": 1,
              "AI": 1
            }
          }
        },
        "as(Flex, HtmlButton)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "as(GhostButton, Link)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "as(Link, ReactRouterLink)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "as(PublicButton, ReactAriaButton)": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "as(Div, ReactAriaButton)": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "as(PublicTextInput, DateInput)": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "as(OrbiterCrossButton, ReactAriaButton)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "as(OrbiterButton, ReactAriaButton)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "as(TextLinkAsButton, Button)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "as(TextInput, DateInput)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "as(AvatarGroupWithControlledRemaining, RouterButtonAsLink)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "as(IconButtonAsLink, ReactRouterLink, { normalizeStyles: true })": {
          "usage": {
            "total": 1,
            "projects": {
              "AI": 1
            }
          }
        }
      }
    },
    "useSlots": {
      "usage": {
        "total": 53,
        "projects": {
          "SG Protect": 18,
          "Performance": 16,
          "Management App": 6,
          "Management Shell": 8,
          "Activation": 1,
          "AI": 4
        }
      },
      "values": {
        "useSlots(children, useMemo(() => ({\n    _: {\n        required: [\"heading\"],\n    },\n    heading: {\n        size: \"xl-medium\",\n    },\n    sideHeader: {},\n    content: {},\n}), []))": {
          "usage": {
            "total": 3,
            "projects": {
              "SG Protect": 3
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Text\n    },\n    leadingItems : {},\n    trailingItems: {}\n})": {
          "usage": {
            "total": 3,
            "projects": {
              "SG Protect": 1,
              "Performance": 1,
              "Management Shell": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Text\n    },\n    \"table-summary\": {},\n    \"table-body\": {},\n    \"table-pager\": {}\n})": {
          "usage": {
            "total": 3,
            "projects": {
              "SG Protect": 1,
              "Management App": 1,
              "Management Shell": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Text\n    },\n    \"filter-buttons\": {},\n    \"filter-search\": {},\n    \"filter-tag-list\": {}\n})": {
          "usage": {
            "total": 3,
            "projects": {
              "Performance": 1,
              "Management App": 1,
              "Management Shell": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Text\n    },\n    heading : {\n        size: \"sm\",\n        lineHeight: \"initial\",\n        margin: \"0\"\n    },\n    text: {\n        fontSize: \"accent-sm\",\n        fontWeight: \"heading-sm\"\n    },\n    secondary: {\n        fontSize: \"body-sm\",\n        color: \"neutral-weak\"\n    },\n    actions: {\n    }\n})": {
          "usage": {
            "total": 3,
            "projects": {
              "SG Protect": 1,
              "Management App": 1,
              "Management Shell": 1
            }
          }
        },
        "useSlots(children, pageFooter)": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 1,
              "Management Shell": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Text\n    },\n    \"text\": {\n        size: \"inherit\",\n        fontFamily: \"inherit\"\n    },\n    \"lozenge\": {},\n    \"tag\": {},\n    \"icon\": {},\n    \"description\": {\n        color: \"neutral-weak\"\n    }\n})": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 1,
              "Management Shell": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Div\n    },\n    trigger: {},\n    dialog: {}\n})": {
          "usage": {
            "total": 2,
            "projects": {
              "SG Protect": 1,
              "Management Shell": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Text\n    },\n    \"filter-buttons\": {},\n    \"filter-search\": {},\n    \"filter-tag-list\": {},\n    \"inline-filter-tag-list\": {}\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "useSlots(children, useMemo(() => ({\n    _: {\n        required: [\"content\"]\n    },\n    \"heading\": {\n        className: \"side-panel-header\",\n        size: headerSize,\n        id: `${sidePanelId}-heading`\n    },\n    \"sub-header\": {\n        className: \"side-panel-sub-header\",\n        size: \"sm\"\n    },\n    \"button\": {\n        className: \"side-panel-header-button\",\n        size: \"sm\"\n    },\n    \"content\": {\n        className: \"side-panel-content\",\n        id: `${sidePanelId}-content`\n    }\n}), [sidePanelId, headerSize]))": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "useSlots(children, useMemo(() => ({\n    _: {\n        defaultWrapper: Text\n    },\n    \"text\": {\n        size: \"inherit\",\n        fontFamily: \"inherit\"\n    },\n    \"lozenge\": {},\n    \"tag\": {},\n    \"icon\": {},\n    \"description\": {\n        color: \"neutral-weak\"\n    },\n    \"affixed\": {\n        color: \"neutral-weak\",\n        size: \"md\"\n    },\n    \"button\": {},\n    \"button-group\": {},\n    \"tooltip\": {}\n}), []))": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Text\n    },\n    \"page-title\": {},\n    \"page-actions\": {\n        wrap: { base: true, sm: false },\n        justifyContent: { base: \"start\", sm: \"end\" },\n        gap: { base: \"stack-md\", sm: \"inline-md\" },\n        width: { base: \"100%\", sm: \"initial\" }\n    } satisfies Partial<PageActionsProps>\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Text\n    },\n    \"page-tabgroup\": {},\n    \"page-breadcrumbs\":{},\n    \"page-header\": {},\n    \"page-content\": {},\n    \"page-footer\": {}\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n    },\n    \"lozenge\": {\n        color: \"status-progress\"\n    },\n    \"icon\": {}\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        required: [\"emptyState\"]\n    },\n    \"emptyState\": {\n        as: \"h2\",\n        border: \"neutral-weak\",\n        borderRadius: \"rounded-md\"\n    },\n    \"searchEmptyState\": {\n        as:\"h2\",\n        border:\"neutral-weak\",\n        borderBottomLeftRadius:\"rounded-md\",\n        borderBottomRightRadius:\"rounded-md\",\n        borderTop:\"none\"\n    },\n    \"tableFilter\": {\n        border: \"none\",\n        borderBottom: \"neutral-weak\",\n        borderRadius: \"none\"\n    },\n    \"tableSummary\": {\n        border: \"none\",\n        borderBottom: \"neutral-weak\",\n        borderRadius: \"none\"\n    }\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Heading\n    },\n    \"categorization\": {\n        marginBottom: \"stack-sm\",\n        textTransform: \"uppercase\",\n        fontFamily: \"overline\",\n        fontSize: \"overline\",\n        fontWeight: \"overline\",\n        lineHeight: \"overline\",\n        letterSpacing: \"overline\",\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    \"heading\": {\n        fontSize: \"body-md-semibold\",\n        fontWeight: \"body-md-semibold\",\n        lineHeight: \"body-md-semibold\",\n        fontFamily: \"body-md-semibold\",\n        marginBottom: \"stack-xs\"\n    },\n    \"sub-heading\": {\n        marginBottom: \"stack-md\",\n        fontSize: \"body-xs\",\n        fontWeight: \"body-xs\",\n        lineHeight: \"body-xs\",\n        fontFamily: \"body-xs\"\n    },\n    \"text\": {\n        size: \"sm\"\n    }\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "useSlots(children, useMemo(() => ({\n    _: {\n        required: [WorkspaceSortableFields.DisplayName, WorkspaceSortableFields.AnyoneLinksCount, WorkspaceSortableFields.DirectLinksCount, WorkspaceSortableFields.GuestsCount],\n    },\n    [WorkspaceSortableFields.DisplayName]: { rowHovered: hoverState, setHoverState },\n    [WorkspaceSortableFields.OwnersCount]: { rowHovered: hoverState, setHoverState },\n    [WorkspaceSortableFields.AnyoneLinksCount]: { \"data-public\": true },\n    [WorkspaceSortableFields.DirectLinksCount]: { \"data-public\": true },\n    [WorkspaceSortableFields.GuestsCount]: { \"data-public\": true },\n}), [hoverState]))": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "useSlots(children, useMemo(() => ({\n    _: {\n        required: [LifecycleVisibleFields.LastActivityDate, LifecycleVisibleFields.WorkspaceName, LifecycleVisibleFields.MemberCount, LifecycleVisibleFields.ContentSizeInBytes],\n    },\n    [LifecycleVisibleFields.LastActivityDate]: null,\n    [LifecycleVisibleFields.WorkspaceName]: null,\n    [LifecycleVisibleFields.Owner]: null,\n    [LifecycleVisibleFields.MemberCount]: null,\n    [LifecycleVisibleFields.ContentSizeInBytes]: 0,\n}), []))": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "useSlots(children, useMemo(() => ({\n    _: {\n        required: [BrokenInheritanceDetailsSortableFields.Title, BrokenInheritanceDetailsSortableFields.Url, BrokenInheritanceDetailsSortableFields.Type],\n    },\n    [BrokenInheritanceDetailsSortableFields.Title]: { rowHovered: hoverState, setHoverState },\n    [BrokenInheritanceDetailsSortableFields.Url]: { rowHovered: hoverState, setHoverState },\n    [BrokenInheritanceDetailsSortableFields.Type]: { rowHovered: hoverState, setHoverState },\n}), [hoverState]))": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Text\n    },\n    \"table-filters\": {},\n    \"table-summary\": {},\n    \"table-body\": {},\n    \"table-pager\": {}\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Text\n    },\n    heading: {\n        marginBottom: 0\n    },\n    headingStickySection: {},\n    content: {\n        padding: \"inset-sm\",\n        flexGrow: 1\n    },\n    collapse: {\n        paddingX: isMobile && showCollapseInHeaderMobile ? 0 : \"inset-sm\",\n        paddingY: isMobile && showCollapseInHeaderMobile ? 0 : \"inset-lg\"\n    }\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Text\n    },\n    \"page-title\": {},\n    \"page-actions\": {\n        wrap: false,\n        justifyContent: \"end\",\n        gap: \"inline-md\",\n        width: \"initial\"\n    } satisfies Partial<PageActionsProps>\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Text\n    },\n    heading: {\n        size: \"sm\",\n        lineHeight: \"initial\",\n        margin: \"0\"\n    },\n    text: {\n        fontSize: \"accent-sm\",\n        fontWeight: \"heading-sm\"\n    },\n    secondary: {\n        fontSize: \"body-sm\",\n        color: \"neutral-weak\"\n    },\n    actions: {\n    }\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Div\n    },\n    \"tag\": {}\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Text\n    },\n    \"page-header\": {\n        className: \"fullscreen-page__header\"\n    },\n    \"page-content\": {},\n    \"side-panel\": {\n        className: \"fullscreen-page__side-panel\",\n        top: 0,\n        height: \"100%\"\n    },\n    \"page-footer\": {}\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Div\n    },\n    \"content\": {},\n    \"side-panel\": {}\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useSlots(children, {\n    _: {},\n    \"textEditorActions\": {}\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Div\n    },\n    heading: {},\n    content: {}\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Div\n    },\n    search: {\n        backgroundColor: \"neutral-weakest\",\n        padding: \"inset-squish-md\",\n        borderTopLeftRadius: { xs: \"rounded-md\" },\n        borderTopRightRadius: { xs: \"rounded-md\" }\n    },\n    content: {\n        overflowX: \"hidden\"\n    }\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Div\n    },\n    \"header-actions\": {\n        className: styles.headerActions\n    }\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Div\n    },\n    trigger: {\n        open: rest.open,\n        onOpenChange: rest.onOpenChange\n    },\n    heading: {\n        padding: isMobile ? \"inset-stretch-md\" : undefined,\n        display: isMobile ? undefined : \"none\"\n    },\n    content: {}\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useSlots(children, useMemo(() => ({\n    _: {\n        required: [\"heading\", \"content\"]\n    },\n    button: {\n        className: styles[\"hop-banner__button\"],\n        fluid: fluidButtons\n    },\n    \"button-group\": {\n        className: styles[\"hop-banner__button-group\"],\n        fluid: fluidButtons\n    },\n    content: {\n        as: Text,\n        size: \"md\"\n    },\n    heading: {\n        as: \"span\",\n        className: styles[\"hop-banner__heading\"],\n        size: \"2xl\"\n    }\n}), [fluidButtons]))": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "useSlots(children, useMemo(\n    () => ({\n        _: { required: [] },\n        heading: {\n            as: \"h3\",\n            className: styles[\"hop-action-tile__heading\"],\n            size: \"xs\"\n        },\n        text: {\n            size: \"xs\",\n            className: styles[\"hop-action-tile__description\"]\n        },\n        \"end-icon\": {\n            className: styles[\"hop-action-tile__end-icon\"]\n        },\n        image: {\n            className: styles[\"hop-action-tile__image\"]\n        }\n    }),\n    []\n))": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "useSlots(children, useMemo(() => ({\n    _: {\n        required: []\n    },\n    lozenge: {\n        className: styles[\"hop-action-card__lozenge\"],\n        backgroundColor: `decorative-${variant}-strong`,\n        color: `decorative-${variant}`\n\n    },\n    heading: {\n        as: \"h3\",\n        className: styles[\"hop-action-card__heading\"],\n        size: \"sm\"\n    },\n    content: {\n        as: Text,\n        size: \"sm\",\n        className: styles[\"hop-action-card__content\"]\n    },\n    button: {\n        className: styles[\"hop-action-card__button\"],\n        as: \"span\",\n        size: \"sm\"\n    },\n    illustration: {\n        className: styles[\"hop-action-card__illustration\"],\n        orientation: \"vertical\"\n    }\n}), [variant]))": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Text\n    },\n    \"page-title\": {},\n    \"description\": {\n        color: \"neutral-weak\"\n    },\n    \"page-actions\": {\n        wrap: { base: true, sm: false },\n        justifyContent: { base: \"start\", sm: \"end\" },\n        gap: { base: \"stack-md\", sm: \"inline-md\" },\n        width: { base: \"100%\", sm: \"initial\" }\n    } satisfies Partial<PageActionsProps>\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Management Shell": 1
            }
          }
        },
        "useSlots(children, useMemo(() => ({\n    _: {\n        required: []\n    },\n    heading: {\n        as: \"h3\",\n        className: \"wl-option-button__heading\",\n        size: { base: \"xs\", xs: \"lg\" }\n    },\n    image: {\n        className: \"wl-option-button__image\"\n    }\n}), []))": {
          "usage": {
            "total": 1,
            "projects": {
              "Activation": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Text\n    },\n    actions: {},\n    content : {},\n    footer: {}\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "AI": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Text\n    },\n    \"heading-icon\": {},\n    \"heading-action\" : {},\n    content: {}\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "AI": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Text\n    },\n    icon: {},\n    text : {}\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "AI": 1
            }
          }
        },
        "useSlots(children, {\n    _: {\n        defaultWrapper: Text\n    },\n    content : {},\n    footer: {}\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "AI": 1
            }
          }
        }
      }
    },
    "isNil": {
      "usage": {
        "total": 42,
        "projects": {
          "SG Protect": 22,
          "Performance": 3,
          "Management App": 17
        }
      },
      "values": {
        "isNil(totalLinksCount)": {
          "usage": {
            "total": 3,
            "projects": {
              "SG Protect": 3
            }
          }
        },
        "isNil(selection)": {
          "usage": {
            "total": 2,
            "projects": {
              "Management App": 2
            }
          }
        },
        "isNil(dateBefore)": {
          "usage": {
            "total": 2,
            "projects": {
              "Management App": 2
            }
          }
        },
        "isNil(onOpenChange)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNil(trigger)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNil(sidePanel)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNil(triggerClose)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNil(onClose)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNil(ariaDescribedBy)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNil(ariaLabel)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNil(newConcern)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNil(metric)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNil(ref)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNil(anyoneLinksCount)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNil(peopleInOrganizationLinksCount)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNil(internalPeopleLinksCount)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNil(overview.group.sharedWithEveryoneExceptExternalUserCount.status === \"completed\" && overview.group.groupsCount.status === \"completed\")": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNil(overview.brokenInheritance.value)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNil(overview.setting.sharePointSharingCapability.value)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNil(overview.setting.oneDriveSharingCapability.value)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNil(sitesWithBrokenInheritancePercent)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNil(user)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNil(key)": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "isNil(header)": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "isNil(content)": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "isNil(selectedKey)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isNil(defaultSelectedKey)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isNil(selectedItem)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isNil(sortField)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isNil(manualSelection)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isNil(productAccess)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isNil(roles)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isNil(statuses)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isNil(department)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isNil(creationDate)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isNil(invitationDate)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isNil(newPropertyId)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isNil(newCondition)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        }
      }
    },
    "useMatchedBreakpoints": {
      "usage": {
        "total": 19,
        "projects": {
          "Management App": 19
        }
      },
      "values": {
        "useMatchedBreakpoints()": {
          "usage": {
            "total": 19,
            "projects": {
              "Management App": 19
            }
          }
        }
      }
    },
    "isNilOrEmpty": {
      "usage": {
        "total": 19,
        "projects": {
          "SG Protect": 7,
          "Management App": 11,
          "Management Shell": 1
        }
      },
      "values": {
        "isNilOrEmpty(x)": {
          "usage": {
            "total": 5,
            "projects": {
              "SG Protect": 1,
              "Management App": 3,
              "Management Shell": 1
            }
          }
        },
        "isNilOrEmpty(displayName)": {
          "usage": {
            "total": 2,
            "projects": {
              "SG Protect": 2
            }
          }
        },
        "isNilOrEmpty(workspaceUrl)": {
          "usage": {
            "total": 2,
            "projects": {
              "SG Protect": 2
            }
          }
        },
        "isNilOrEmpty(searchParams)": {
          "usage": {
            "total": 2,
            "projects": {
              "Management App": 2
            }
          }
        },
        "isNilOrEmpty(value)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNilOrEmpty(href)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isNilOrEmpty(department)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isNilOrEmpty(creationDate)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isNilOrEmpty(invitationDate)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isNilOrEmpty(input)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isNilOrEmpty(sortField)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isNilOrEmpty(searchTerm)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        }
      }
    },
    "useStyledSystem": {
      "usage": {
        "total": 16,
        "projects": {
          "SG Protect": 2,
          "Performance": 2,
          "Management App": 8,
          "Management Shell": 4
        }
      },
      "values": {
        "useStyledSystem(props)": {
          "usage": {
            "total": 5,
            "projects": {
              "Performance": 1,
              "Management App": 4
            }
          }
        },
        "useStyledSystem({\n    paddingX: \"inset-md\",\n    color: \"neutral\",\n    fontSize: \"body-sm-medium\",\n    fontWeight: \"body-sm-medium\",\n    ...props\n})": {
          "usage": {
            "total": 3,
            "projects": {
              "Performance": 1,
              "Management App": 1,
              "Management Shell": 1
            }
          }
        },
        "useStyledSystem({\n    color: \"neutral\",\n    fontSize: \"body-sm-medium\",\n    fontWeight: \"body-sm-medium\",\n    display: \"flex\",\n    gap: \"stack-sm\",\n    ...props\n})": {
          "usage": {
            "total": 3,
            "projects": {
              "SG Protect": 1,
              "Management App": 1,
              "Management Shell": 1
            }
          }
        },
        "useStyledSystem(otherProps)": {
          "usage": {
            "total": 2,
            "projects": {
              "Management App": 2
            }
          }
        },
        "useStyledSystem({\n    paddingX: \"inset-md\",\n    color: \"neutral\",\n    fontSize: \"body-sm-medium\",\n    fontWeight: \"body-sm-medium\",\n    visibility: isHidden ? \"hidden\" : undefined,\n    ...props\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "useStyledSystem({ textAlign, height, ...rest })": {
          "usage": {
            "total": 1,
            "projects": {
              "Management Shell": 1
            }
          }
        },
        "useStyledSystem({\n    backgroundColorFocus: \"neutral-hover\",\n    height: size === \"sm\" ? \"400\" : \"640\",\n    ...clickableRowProps,\n    ...props\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Management Shell": 1
            }
          }
        }
      }
    },
    "useModalTriggerContext": {
      "usage": {
        "total": 15,
        "projects": {
          "Management App": 13,
          "Activation": 1,
          "AI": 1
        }
      },
      "values": {
        "useModalTriggerContext()": {
          "usage": {
            "total": 15,
            "projects": {
              "Management App": 13,
              "Activation": 1,
              "AI": 1
            }
          }
        }
      }
    },
    "isUndefined": {
      "usage": {
        "total": 14,
        "projects": {
          "Performance": 14
        }
      },
      "values": {
        "isUndefined(selectedBucketIndex)": {
          "usage": {
            "total": 8,
            "projects": {
              "Performance": 8
            }
          }
        },
        "isUndefined(selectedGroupIndex)": {
          "usage": {
            "total": 4,
            "projects": {
              "Performance": 4
            }
          }
        },
        "isUndefined(selectedGroup)": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 2
            }
          }
        }
      }
    },
    "isEmptyArray": {
      "usage": {
        "total": 13,
        "projects": {
          "Management App": 13
        }
      },
      "values": {
        "isEmptyArray(x.assignedProducts)": {
          "usage": {
            "total": 2,
            "projects": {
              "Management App": 2
            }
          }
        },
        "isEmptyArray(userRoles)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isEmptyArray(productAccessParams)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isEmptyArray(roleParams)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isEmptyArray(memberStateParams)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isEmptyArray(departmentIdParams)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isEmptyArray(productAccess.filter(x => x.length !== 0))": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isEmptyArray(roles.filter(x => x.length !== 0))": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isEmptyArray(statuses.filter(x => x.length !== 0))": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isEmptyArray(productAccess)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isEmptyArray(roles)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "isEmptyArray(statuses)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        }
      }
    },
    "mergeProps": {
      "usage": {
        "total": 10,
        "projects": {
          "SG Protect": 2,
          "Performance": 2,
          "Management App": 3,
          "Management Shell": 3
        }
      },
      "values": {
        "mergeProps(rest, sidebarContext)": {
          "usage": {
            "total": 4,
            "projects": {
              "Performance": 1,
              "Management Shell": 3
            }
          }
        },
        "mergeProps(rest, {\n    \"aria-label\": label,\n    className: \"hop-contextual-help\",\n    ref: forwardedRef,\n    tabIndex: 0\n})": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 1,
              "Management App": 1
            }
          }
        },
        "mergeProps(rest, {\n    as,\n    ref,\n    show: true,\n    zIndex\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "mergeProps(wrapperProps ?? {}, {\n    ref: useMergedRefs(wrapperRef, hasVerticalScrollbarRef),\n    zIndex: zIndex + 1\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "mergeProps(rest, {\n    className: mergeClasses(\n        \"o-ui-avatar-group-remainings\",\n        cssModule(\n            normalizeSize(size)\n        )\n    )\n\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        },
        "mergeProps(rest, {\n    as,\n    className: \"o-ui-avatar-group\",\n    gap: 0 as const,\n    orientation: \"horizontal\" as const,\n    ref: forwardedRef,\n    wrap: wrapValue,\n    variant: \"tertiary\",\n    borderRadius: \"rounded-lg\",\n    padding: \"inset-xs\",\n    textDecoration: \"none\"\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        }
      }
    },
    "useSelect": {
      "usage": {
        "total": 9,
        "projects": {
          "SG Protect": 3,
          "Performance": 3,
          "Management App": 3
        }
      },
      "values": {
        "useSelect(children, options)": {
          "usage": {
            "total": 3,
            "projects": {
              "SG Protect": 1,
              "Management App": 2
            }
          }
        },
        "useSelect(children, { allowResponsiveMenuWidth: false, ariaLabel: \"Add Filter\" })": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "useSelect(filterOptions, { allowResponsiveMenuWidth: false, ariaLabel: `Filter by ${filter.name.toLocaleLowerCase()}` })": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "useSelect(children, { direction: \"bottom\" })": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useSelect(children, { allowFlip: false, direction: \"bottom\", onOpenChange, overlayProps: { zIndex: overlayZIndex, width: overlayWidth } })": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useSelect(children, { allowFlip: false, allowResponsiveMenuWidth: false, direction: \"bottom\", ...options })": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "useSelect(children, { allowResponsiveMenuWidth: false })": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        }
      }
    },
    "useEventCallback": {
      "usage": {
        "total": 6,
        "projects": {
          "SG Protect": 6
        }
      },
      "values": {
        "useEventCallback((event: SyntheticEvent) => {\n    close(event);\n})": {
          "usage": {
            "total": 3,
            "projects": {
              "SG Protect": 3
            }
          }
        },
        "useEventCallback((event: SyntheticEvent) => {\n    open(event);\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "useEventCallback(() => {\n    sidePanelRef.current?.focus();\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "useEventCallback(() => {\n    if (elementRef?.current) {\n        setHasScrollbar(elementRef.current.scrollHeight > elementRef.current.clientHeight);\n    }\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        }
      }
    },
    "useColorSchemeValue": {
      "usage": {
        "total": 6,
        "projects": {
          "Management App": 6
        }
      },
      "values": {
        "useColorSchemeValue(\"#3c3c3c\", \"#f8f6f3\")": {
          "usage": {
            "total": 3,
            "projects": {
              "Management App": 3
            }
          }
        },
        "useColorSchemeValue(\"#b3b3b1\", \"#777775\")": {
          "usage": {
            "total": 3,
            "projects": {
              "Management App": 3
            }
          }
        }
      }
    },
    "useColorSchemeContext": {
      "usage": {
        "total": 6,
        "projects": {
          "SG Protect": 1,
          "Performance": 2,
          "Management App": 2,
          "Management Shell": 1
        }
      },
      "values": {
        "useColorSchemeContext()": {
          "usage": {
            "total": 6,
            "projects": {
              "SG Protect": 1,
              "Performance": 2,
              "Management App": 2,
              "Management Shell": 1
            }
          }
        }
      }
    },
    "augmentElement": {
      "usage": {
        "total": 5,
        "projects": {
          "SG Protect": 2,
          "Performance": 2,
          "Management App": 1
        }
      },
      "values": {
        "augmentElement(avatar, isInRemainingTooltip ? {\n    size: \"sm\",\n    className: \"o-ui-avatar-group-remainings-list-item-avatar\"\n} : {\n    size: \"md\"\n})": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 2
            }
          }
        },
        "augmentElement(trigger, triggerProps)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "augmentElement(sidePanel, {\n    dismissible,\n    zIndex: zIndex + 1\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "augmentElement(x, {\n    key: x?.props?.name || x?.props?.[\"aria-label\"],\n    size: sizeValue\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        }
      }
    },
    "useRefState": {
      "usage": {
        "total": 4,
        "projects": {
          "SG Protect": 1,
          "Performance": 3
        }
      },
      "values": {
        "useRefState()": {
          "usage": {
            "total": 4,
            "projects": {
              "SG Protect": 1,
              "Performance": 3
            }
          }
        }
      }
    },
    "useResizeObserver": {
      "usage": {
        "total": 4,
        "projects": {
          "SG Protect": 1,
          "Performance": 3
        }
      },
      "values": {
        "useResizeObserver(handleTileGroupResized)": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 2
            }
          }
        },
        "useResizeObserver(handleElementResize)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "useResizeObserver(barGraphResized)": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        }
      }
    },
    "useFieldInputProps": {
      "usage": {
        "total": 4,
        "projects": {
          "Performance": 1,
          "Management App": 3
        }
      },
      "values": {
        "useFieldInputProps()": {
          "usage": {
            "total": 4,
            "projects": {
              "Performance": 1,
              "Management App": 3
            }
          }
        }
      }
    },
    "useMergedRefs": {
      "usage": {
        "total": 3,
        "projects": {
          "Performance": 3
        }
      },
      "values": {
        "useMergedRefs(setTileGroupRef, observer)": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 2
            }
          }
        },
        "useMergedRefs(setGraphRef, observer)": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        }
      }
    },
    "repeat": {
      "usage": {
        "total": 3,
        "projects": {
          "SG Protect": 2,
          "Management App": 1
        }
      },
      "values": {
        "repeat(\"auto-fill\", minmax(\"225px\", \"1fr\"))": {
          "usage": {
            "total": 2,
            "projects": {
              "SG Protect": 2
            }
          }
        },
        "repeat(\"auto-fit\", minmax(\"20rem\", \"1fr\"))": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        }
      }
    },
    "minmax": {
      "usage": {
        "total": 3,
        "projects": {
          "SG Protect": 2,
          "Management App": 1
        }
      },
      "values": {
        "minmax(\"225px\", \"1fr\")": {
          "usage": {
            "total": 2,
            "projects": {
              "SG Protect": 2
            }
          }
        },
        "minmax(\"20rem\", \"1fr\")": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        }
      }
    },
    "isNumber": {
      "usage": {
        "total": 3,
        "projects": {
          "SG Protect": 1,
          "Performance": 1,
          "Management Shell": 1
        }
      },
      "values": {
        "isNumber(delay)": {
          "usage": {
            "total": 3,
            "projects": {
              "SG Protect": 1,
              "Performance": 1,
              "Management Shell": 1
            }
          }
        }
      }
    },
    "useControllableState": {
      "usage": {
        "total": 3,
        "projects": {
          "SG Protect": 1,
          "Management App": 1,
          "Management Shell": 1
        }
      },
      "values": {
        "useControllableState(validPage, defaultCurrentPage, 1)": {
          "usage": {
            "total": 3,
            "projects": {
              "SG Protect": 1,
              "Management App": 1,
              "Management Shell": 1
            }
          }
        }
      }
    },
    "useAsyncSearch": {
      "usage": {
        "total": 3,
        "projects": {
          "Performance": 1,
          "Management App": 1,
          "Administration Portal": 1
        }
      },
      "values": {
        "useAsyncSearch(search)": {
          "usage": {
            "total": 2,
            "projects": {
              "Performance": 1,
              "Management App": 1
            }
          }
        },
        "useAsyncSearch(async (query, signal) => {\n    const response = await membersApiClient.searchMembersFromOrganization(id, query, 0, signal);\n\n    setMemberSearchResults(response.members);\n\n    return response.members;\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "Administration Portal": 1
            }
          }
        }
      }
    },
    "resolveChildren": {
      "usage": {
        "total": 2,
        "projects": {
          "SG Protect": 1,
          "Performance": 1
        }
      },
      "values": {
        "resolveChildren(children)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "resolveChildren(element.props.children)": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        }
      }
    },
    "normalizeSize": {
      "usage": {
        "total": 2,
        "projects": {
          "Performance": 1,
          "Management App": 1
        }
      },
      "values": {
        "normalizeSize(sizeValue)": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        },
        "normalizeSize(size)": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        }
      }
    },
    "useDialogTriggerContext": {
      "usage": {
        "total": 2,
        "projects": {
          "Management App": 2
        }
      },
      "values": {
        "useDialogTriggerContext()": {
          "usage": {
            "total": 2,
            "projects": {
              "Management App": 2
            }
          }
        }
      }
    },
    "isFunction": {
      "usage": {
        "total": 2,
        "projects": {
          "SG Protect": 1,
          "Management Shell": 1
        }
      },
      "values": {
        "isFunction(ref)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        },
        "isFunction(handle[\"header-actions\"])": {
          "usage": {
            "total": 1,
            "projects": {
              "Management Shell": 1
            }
          }
        }
      }
    },
    "useFieldContext": {
      "usage": {
        "total": 2,
        "projects": {
          "Management App": 1,
          "AI": 1
        }
      },
      "values": {
        "useFieldContext()": {
          "usage": {
            "total": 2,
            "projects": {
              "Management App": 1,
              "AI": 1
            }
          }
        }
      }
    },
    "mergeRefs": {
      "usage": {
        "total": 2,
        "projects": {
          "Management App": 1,
          "AI": 1
        }
      },
      "values": {
        "mergeRefs(ref, inputRef)": {
          "usage": {
            "total": 2,
            "projects": {
              "Management App": 1,
              "AI": 1
            }
          }
        }
      }
    },
    "useOverlayTrigger": {
      "usage": {
        "total": 1,
        "projects": {
          "SG Protect": 1
        }
      },
      "values": {
        "useOverlayTrigger(isOpen, {\n    hideOnLeave: false,\n    onHide: useEventCallback((event: SyntheticEvent) => {\n        close(event);\n    }),\n    onShow: useEventCallback((event: SyntheticEvent) => {\n        open(event);\n    })\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        }
      }
    },
    "useId": {
      "usage": {
        "total": 1,
        "projects": {
          "SG Protect": 1
        }
      },
      "values": {
        "useId(id, \"side-panel\")": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        }
      }
    },
    "useFocusScope": {
      "usage": {
        "total": 1,
        "projects": {
          "SG Protect": 1
        }
      },
      "values": {
        "useFocusScope()": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        }
      }
    },
    "useFocusManager": {
      "usage": {
        "total": 1,
        "projects": {
          "SG Protect": 1
        }
      },
      "values": {
        "useFocusManager(focusScope)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        }
      }
    },
    "useTrapFocus": {
      "usage": {
        "total": 1,
        "projects": {
          "SG Protect": 1
        }
      },
      "values": {
        "useTrapFocus(focusManager)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        }
      }
    },
    "useRestoreFocus": {
      "usage": {
        "total": 1,
        "projects": {
          "SG Protect": 1
        }
      },
      "values": {
        "useRestoreFocus(focusScope)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        }
      }
    },
    "useAutoFocusChild": {
      "usage": {
        "total": 1,
        "projects": {
          "SG Protect": 1
        }
      },
      "values": {
        "useAutoFocusChild(focusManager, {\n    onNotFound: useEventCallback(() => {\n        sidePanelRef.current?.focus();\n    }),\n    tabbableOnly: true\n})": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        }
      }
    },
    "useOverlayLightDismiss": {
      "usage": {
        "total": 1,
        "projects": {
          "SG Protect": 1
        }
      },
      "values": {
        "useOverlayLightDismiss(focusScope, {\n    hideOnEscape: dismissible,\n    hideOnLeave: false,\n    hideOnOutsideClick: dismissible,\n    onHide: useEventCallback((event: SyntheticEvent) => {\n        close(event);\n    })\n} as UseOverlayLightDismissOptions)": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        }
      }
    },
    "usePopoverTriggerContext": {
      "usage": {
        "total": 1,
        "projects": {
          "SG Protect": 1
        }
      },
      "values": {
        "usePopoverTriggerContext()": {
          "usage": {
            "total": 1,
            "projects": {
              "SG Protect": 1
            }
          }
        }
      }
    },
    "arrayify": {
      "usage": {
        "total": 1,
        "projects": {
          "Performance": 1
        }
      },
      "values": {
        "arrayify(children)": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        }
      }
    },
    "useCollection": {
      "usage": {
        "total": 1,
        "projects": {
          "Performance": 1
        }
      },
      "values": {
        "useCollection(renderNodes())": {
          "usage": {
            "total": 1,
            "projects": {
              "Performance": 1
            }
          }
        }
      }
    },
    "mergeClasses": {
      "usage": {
        "total": 1,
        "projects": {
          "Management App": 1
        }
      },
      "values": {
        "mergeClasses(\"o-ui-avatar-group-remainings\", cssModule(\n    normalizeSize(size)\n))": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        }
      }
    },
    "cssModule": {
      "usage": {
        "total": 1,
        "projects": {
          "Management App": 1
        }
      },
      "values": {
        "cssModule(normalizeSize(size))": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        }
      }
    },
    "useCheckableProps": {
      "usage": {
        "total": 1,
        "projects": {
          "Management App": 1
        }
      },
      "values": {
        "useCheckableProps({ value })": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        }
      }
    },
    "useMenuTriggerContext": {
      "usage": {
        "total": 1,
        "projects": {
          "Management App": 1
        }
      },
      "values": {
        "useMenuTriggerContext()": {
          "usage": {
            "total": 1,
            "projects": {
              "Management App": 1
            }
          }
        }
      }
    }
  },
  "types": {
    "DivProps": {
      "usage": {
        "total": 54,
        "projects": {
          "SG Protect": 2,
          "Performance": 22,
          "Management App": 10,
          "Management Shell": 9,
          "Activation": 1,
          "Login": 1,
          "AI": 9
        }
      }
    },
    "FlexProps": {
      "usage": {
        "total": 47,
        "projects": {
          "SG Protect": 9,
          "Performance": 10,
          "Management App": 11,
          "Management Shell": 4,
          "AI": 13
        }
      }
    },
    "TextAlignProp": {
      "usage": {
        "total": 19,
        "projects": {
          "SG Protect": 19
        }
      }
    },
    "StyledSystemProps": {
      "usage": {
        "total": 18,
        "projects": {
          "SG Protect": 2,
          "Performance": 4,
          "Management App": 8,
          "Management Shell": 4
        }
      }
    },
    "TagProps": {
      "usage": {
        "total": 17,
        "projects": {
          "SG Protect": 2,
          "Performance": 9,
          "Management App": 5,
          "Management Shell": 1
        }
      }
    },
    "TextProps": {
      "usage": {
        "total": 11,
        "projects": {
          "SG Protect": 1,
          "Performance": 4,
          "Management App": 2,
          "Management Shell": 1,
          "Activation": 1,
          "AI": 2
        }
      }
    },
    "InlineProps": {
      "usage": {
        "total": 10,
        "projects": {
          "SG Protect": 3,
          "Performance": 2,
          "Management App": 2,
          "Management Shell": 3
        }
      }
    },
    "UseSelectOptions": {
      "usage": {
        "total": 8,
        "projects": {
          "Management App": 8
        }
      }
    },
    "ImageProps": {
      "usage": {
        "total": 7,
        "projects": {
          "AI": 7
        }
      }
    },
    "GridProps": {
      "usage": {
        "total": 6,
        "projects": {
          "SG Protect": 1,
          "Performance": 1,
          "Management Shell": 1,
          "AI": 3
        }
      }
    },
    "BoxProps": {
      "usage": {
        "total": 5,
        "projects": {
          "SG Protect": 5
        }
      }
    },
    "SvgImageProps": {
      "usage": {
        "total": 5,
        "projects": {
          "SG Protect": 4,
          "Management App": 1
        }
      }
    },
    "ButtonProps": {
      "usage": {
        "total": 5,
        "projects": {
          "SG Protect": 1,
          "Performance": 3,
          "Management Shell": 1
        }
      }
    },
    "ToggleButtonProps": {
      "usage": {
        "total": 5,
        "projects": {
          "SG Protect": 1,
          "Management App": 3,
          "Management Shell": 1
        }
      }
    },
    "OmitInternalProps": {
      "usage": {
        "total": 4,
        "projects": {
          "SG Protect": 4
        }
      }
    },
    "AutocompleteProps": {
      "usage": {
        "total": 4,
        "projects": {
          "Performance": 4
        }
      }
    },
    "OverlayProps": {
      "usage": {
        "total": 3,
        "projects": {
          "Performance": 3
        }
      }
    },
    "ModalProps": {
      "usage": {
        "total": 3,
        "projects": {
          "Performance": 2,
          "Management App": 1
        }
      }
    },
    "InternalProps": {
      "usage": {
        "total": 3,
        "projects": {
          "SG Protect": 1,
          "Performance": 1,
          "Management App": 1
        }
      }
    },
    "SpanProps": {
      "usage": {
        "total": 3,
        "projects": {
          "Performance": 1,
          "Management App": 1,
          "Management Shell": 1
        }
      }
    },
    "HtmlButtonProps": {
      "usage": {
        "total": 3,
        "projects": {
          "SG Protect": 1,
          "Activation": 2
        }
      }
    },
    "FontWeightProp": {
      "usage": {
        "total": 2,
        "projects": {
          "Performance": 2
        }
      }
    },
    "ItemProps": {
      "usage": {
        "total": 2,
        "projects": {
          "Performance": 2
        }
      }
    },
    "ContentProps": {
      "usage": {
        "total": 2,
        "projects": {
          "Performance": 2
        }
      }
    },
    "StyledComponentProps": {
      "usage": {
        "total": 2,
        "projects": {
          "SG Protect": 1,
          "Performance": 1
        }
      }
    },
    "TextLinkAsButtonProps": {
      "usage": {
        "total": 2,
        "projects": {
          "Management App": 2
        }
      }
    },
    "LozengeProps": {
      "usage": {
        "total": 2,
        "projects": {
          "Management App": 2
        }
      }
    },
    "TooltipProps": {
      "usage": {
        "total": 2,
        "projects": {
          "Performance": 1,
          "Management App": 1
        }
      }
    },
    "TooltipTriggerProps": {
      "usage": {
        "total": 2,
        "projects": {
          "Performance": 1,
          "Management App": 1
        }
      }
    },
    "NavProps": {
      "usage": {
        "total": 2,
        "projects": {
          "Management Shell": 2
        }
      }
    },
    "IconButtonProps": {
      "usage": {
        "total": 2,
        "projects": {
          "Performance": 1,
          "AI": 1
        }
      }
    },
    "UseOverlayLightDismissOptions": {
      "usage": {
        "total": 1,
        "projects": {
          "SG Protect": 1
        }
      }
    },
    "ThemeProviderProps": {
      "usage": {
        "total": 1,
        "projects": {
          "SG Protect": 1
        }
      }
    },
    "Merge": {
      "usage": {
        "total": 1,
        "projects": {
          "SG Protect": 1
        }
      }
    },
    "ErrorMessageProps": {
      "usage": {
        "total": 1,
        "projects": {
          "Performance": 1
        }
      }
    },
    "HeightProp": {
      "usage": {
        "total": 1,
        "projects": {
          "Performance": 1
        }
      }
    },
    "InnerCheckboxProps": {
      "usage": {
        "total": 1,
        "projects": {
          "Performance": 1
        }
      }
    },
    "PaddingBottomProp": {
      "usage": {
        "total": 1,
        "projects": {
          "Performance": 1
        }
      }
    },
    "MinHeightProp": {
      "usage": {
        "total": 1,
        "projects": {
          "Performance": 1
        }
      }
    },
    "PopoverProps": {
      "usage": {
        "total": 1,
        "projects": {
          "Performance": 1
        }
      }
    },
    "InnerAvatarProps": {
      "usage": {
        "total": 1,
        "projects": {
          "Performance": 1
        }
      }
    },
    "TabsProps": {
      "usage": {
        "total": 1,
        "projects": {
          "Performance": 1
        }
      }
    },
    "HeaderProps": {
      "usage": {
        "total": 1,
        "projects": {
          "Performance": 1
        }
      }
    },
    "ColorProp": {
      "usage": {
        "total": 1,
        "projects": {
          "Performance": 1
        }
      }
    },
    "TextInputProps": {
      "usage": {
        "total": 1,
        "projects": {
          "Performance": 1
        }
      }
    },
    "PopoverTriggerProps": {
      "usage": {
        "total": 1,
        "projects": {
          "Performance": 1
        }
      }
    },
    "ResponsiveProp": {
      "usage": {
        "total": 1,
        "projects": {
          "Performance": 1
        }
      }
    },
    "HtmlSectionProps": {
      "usage": {
        "total": 1,
        "projects": {
          "Management App": 1
        }
      }
    },
    "InnerAvatarGroupProps": {
      "usage": {
        "total": 1,
        "projects": {
          "Management App": 1
        }
      }
    },
    "TextLinkProps": {
      "usage": {
        "total": 1,
        "projects": {
          "Management App": 1
        }
      }
    },
    "TileProps": {
      "usage": {
        "total": 1,
        "projects": {
          "Management App": 1
        }
      }
    },
    "CrossButtonProps": {
      "usage": {
        "total": 1,
        "projects": {
          "Management App": 1
        }
      }
    }
  }
}